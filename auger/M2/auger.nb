(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    340055,       7307]
NotebookOptionsPosition[    332745,       7069]
NotebookOutlinePosition[    333086,       7084]
CellTagsIndexPosition[    333043,       7081]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Auger & EEL Spectroscopy", "Title",
 CellChangeTimes->{{3.5325287127158833`*^9, 3.532528714155266*^9}, {
  3.5331233718806973`*^9, 3.533123379368828*^9}}],

Cell[CellGroupData[{

Cell["Loading Stuffs I might need", "Section",
 CellChangeTimes->{{3.532528720300321*^9, 3.532528726147089*^9}}],

Cell[BoxData[
 RowBox[{"<<", "ErrorBarPlots`"}]], "Input",
 CellChangeTimes->{{3.532521375126213*^9, 3.532521382110711*^9}}],

Cell[BoxData[
 RowBox[{"<<", "PhysicalConstants`"}]], "Input",
 CellChangeTimes->{{3.532521419265027*^9, 3.532521424952561*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearSystemCache", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.53200588026235*^9, 3.532005884655098*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.532005887555621*^9, 3.5320059030147943`*^9}, {
  3.5320059400560627`*^9, 3.532005940132262*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Helper Functions", "Section",
 CellChangeTimes->{{3.532513522900243*^9, 3.5325135250757017`*^9}}],

Cell[CellGroupData[{

Cell["Reading in the data and doing stuff on it", "Subsection",
 CellChangeTimes->{{3.532528800507352*^9, 3.532528806706341*^9}}],

Cell["\<\
This reads the data files from the Auger experiment, it\[CloseCurlyQuote]s \
two rows of data and the first 8 lines are pretty much useless comments\
\>", "Text",
 CellChangeTimes->{{3.533201212673541*^9, 3.53320125092278*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "ReadRawData", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReadRawData", "[", "filename_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"file", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"file", "=", 
      RowBox[{"OpenRead", "[", "filename", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Skip", "[", 
      RowBox[{"file", ",", "String", ",", "8"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"ReadList", "[", 
       RowBox[{"file", ",", 
        RowBox[{"{", 
         RowBox[{"Real", ",", "Real"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "data", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.532511855482267*^9, 3.532511933979679*^9}, {
  3.53259161540434*^9, 3.53259161584368*^9}, {3.533193752881585*^9, 
  3.533193883866714*^9}, {3.533193943786209*^9, 3.5331939853696957`*^9}, {
  3.5331940244322233`*^9, 3.533194054116562*^9}, {3.533194663635795*^9, 
  3.533194676685018*^9}, {3.5331948662912703`*^9, 3.5331948715933533`*^9}, {
  3.533195721159182*^9, 3.5331957534262*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "AllDataFiles", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllDataFiles", "[", "path_", "]"}], ":=", 
  RowBox[{"FileNames", "[", 
   RowBox[{"\"\<./data/\>\"", "~~", "path", "~~", "\"\</*.dat\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.53319506991451*^9, 3.5331951153130283`*^9}, {
  3.5331952065593443`*^9, 3.533195253370118*^9}, {3.533195663037758*^9, 
  3.533195667406003*^9}, {3.533196231485594*^9, 3.533196240772666*^9}}],

Cell["\<\
Selects data points in a certain x interval\
\>", "Text",
 CellChangeTimes->{{3.5332012702638397`*^9, 3.5332012912006273`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "TakeRegion", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TakeRegion", "[", 
   RowBox[{"data_", ",", "min_", ",", "max_"}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"data", ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], "\[GreaterEqual]", "min"}], "&&", 
      " ", 
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], "\[LessEqual]", "max"}]}], "&"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.533197843133231*^9, 3.533197918926955*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "Around", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Around", "[", 
   RowBox[{"data_", ",", "value_"}], "]"}], ":=", 
  RowBox[{"First", "[", 
   RowBox[{"Nearest", "[", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"data", "\[Transpose]"}], "]"}], ",", "value"}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.533199054984305*^9, 3.533199116815699*^9}, {
   3.533199152987898*^9, 3.533199155736771*^9}, {3.533199312384838*^9, 
   3.533199342142817*^9}, 3.533199375896398*^9, {3.53319940611268*^9, 
   3.533199414241411*^9}, {3.5331994689773293`*^9, 3.533199486525309*^9}, {
   3.533199526276223*^9, 3.533199549815946*^9}, {3.5331996513420343`*^9, 
   3.533199737856152*^9}, 3.53319984170469*^9}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "GaussPeakFit", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GaussPeakFit", "[", 
   RowBox[{"data_", ",", 
    RowBox[{"{", 
     RowBox[{"min_", ",", "max_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"region", ",", "midpoint", ",", "maxheight"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"region", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"data", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "\[GreaterEqual]", "min"}], "&&",
           " ", 
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "\[LessEqual]", "max"}]}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"midpoint", "=", 
      RowBox[{"Round", "[", 
       FractionBox[
        RowBox[{"min", "+", "max"}], "2"], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxheight", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"region", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"region", ",", 
       RowBox[{
        RowBox[{"A", "*", 
         RowBox[{"Exp", "[", 
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", "a"}], ")"}], "2"]}], "b"], "]"}]}], "+", 
        "c"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"A", ",", "maxheight"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "midpoint"}], "}"}], ",", "b", ",", "c"}], "}"}], 
       ",", "x", ",", 
       RowBox[{"MaxIterations", "\[Rule]", "10000"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.533202978247302*^9, 3.533202987034774*^9}, {
   3.533205741062224*^9, 3.533205772621497*^9}, {3.5332058344273663`*^9, 
   3.5332058413526897`*^9}, {3.533207202156083*^9, 3.53320720245286*^9}, {
   3.5332074586040087`*^9, 3.5332075023067207`*^9}, 3.533213519202999*^9}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "GaussDoublePeakFit", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GaussDoublePeakFit", "[", 
   RowBox[{"data_", ",", 
    RowBox[{"{", 
     RowBox[{"min_", ",", "max_"}], "}"}], ",", "maxheight1_", ",", 
    "maxheight2_", ",", "midpoint1_", ",", "midpoint2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "region", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"region", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"data", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "\[GreaterEqual]", "min"}], "&&",
           " ", 
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "\[LessEqual]", "max"}]}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"region", ",", 
       RowBox[{
        RowBox[{"A1", "*", 
         RowBox[{"Exp", "[", 
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", "a1"}], ")"}], "2"]}], "b1"], "]"}]}], "+", 
        RowBox[{"A2", "*", 
         RowBox[{"Exp", "[", 
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", "a2"}], ")"}], "2"]}], "b2"], "]"}]}], "+", 
        "c"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"A1", ",", "maxheight1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "midpoint1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "maxheight2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a2", ",", "midpoint2"}], "}"}], ",", "b1", ",", "b2", ",", 
         "c"}], "}"}], ",", "x", ",", 
       RowBox[{"MaxIterations", "\[Rule]", "10000"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.533225010690971*^9, 3.533225045929318*^9}, {
  3.53322507865847*^9, 3.533225164906623*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "LorentzPeakFit", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LorentzPeakFit", "[", 
   RowBox[{"data_", ",", 
    RowBox[{"{", 
     RowBox[{"min_", ",", "max_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"region", ",", "midpoint", ",", "maxheight"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"region", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"data", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "\[GreaterEqual]", "min"}], "&&",
           " ", 
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "\[LessEqual]", "max"}]}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"midpoint", "=", 
      RowBox[{"Round", "[", 
       FractionBox[
        RowBox[{"min", "+", "max"}], "2"], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxheight", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"region", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"region", ",", 
       RowBox[{
        FractionBox["A", 
         RowBox[{"1", "+", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "a"}], ")"}], "2"], "b"]}]], "+", "c"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"A", ",", "maxheight"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "midpoint"}], "}"}], ",", "b", ",", "c"}], "}"}], 
       ",", "x", ",", 
       RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.533205850100581*^9, 3.533205882427267*^9}, {
  3.533207194595565*^9, 3.533207194857172*^9}, {3.533207506223427*^9, 
  3.5332075154374733`*^9}, {3.5332135205162487`*^9, 3.533213521965205*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "SpectrumIntegrate", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SpectrumIntegrate", "[", "data_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "int"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"int", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", "0"}], 
         "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "2"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "data", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"int", "=", 
         RowBox[{"int", "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"data", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{"int", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"i", "-", "1"}], ",", "2"}], 
               "\[RightDoubleBracket]"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"data", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                 RowBox[{"data", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{"i", "-", "1"}], ",", "1"}], 
                  "\[RightDoubleBracket]"}]}], ")"}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"data", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                  RowBox[{"data", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "2"}], 
                   "\[RightDoubleBracket]"}]}], ")"}], "/", "2"}]}]}]}], 
            "}"}], "}"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", "int"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.533203674676651*^9, 3.533203702144223*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting and shiny stuff", "Subsection",
 CellChangeTimes->{{3.5325287828357*^9, 3.532528792442326*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "ErrorForm", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ErrorForm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x_", "?", "NumberQ"}], ",", 
      RowBox[{"\[CapitalDelta]x_", "?", "NumberQ"}]}], "}"}], ",", 
    RowBox[{"dgts_:", "2"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"PaddedForm", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"Round", "[", 
        RowBox[{"x", ",", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "dgts"}], ")"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dgts", "+", "2"}], ",", "dgts"}], "}"}]}], "]"}], "]"}], 
   "<>", "\"\< \[PlusMinus]\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"PaddedForm", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"Ceiling", "[", 
        RowBox[{
         RowBox[{"Abs", "[", "\[CapitalDelta]x", "]"}], ",", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "dgts"}], ")"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dgts", "+", "1"}], ",", "dgts"}], "}"}]}], "]"}], 
    "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.514551536401927*^9, 3.5145518214144278`*^9}, {
  3.514893942931985*^9, 3.5148939435715857`*^9}, {3.5149628345620203`*^9, 
  3.514962911844556*^9}, {3.514963011809531*^9, 3.514963023946353*^9}, {
  3.5149631198865213`*^9, 3.5149631199801216`*^9}, {3.514963164143799*^9, 
  3.514963235404724*^9}, {3.530176213800857*^9, 3.530176224614215*^9}, {
  3.530194799781453*^9, 3.5301948072959843`*^9}, {3.530194841165642*^9, 
  3.530194883164167*^9}, {3.530194914615726*^9, 3.530194917242641*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"niceStyle", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageMargins", "\[Rule]", "3"}], ",", "\[IndentingNewLine]", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"16", ",", "Bold"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"16", ",", "Plain"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"16", ",", "Plain"}], "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", "Thick"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", "Gray"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", "Gray"}], "]"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.532528874526243*^9, {3.532595276069264*^9, 3.532595276671599*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "PeakFitPlot", "]"}], "\n", 
 RowBox[{
  RowBox[{"PeakFitPlot", "[", 
   RowBox[{"data_", ",", " ", "fit_", ",", " ", 
    RowBox[{"title_:", " ", "\"\<\>\""}], ",", " ", 
    RowBox[{"bottom_:", " ", "\"\<\>\""}], ",", " ", 
    RowBox[{"left_:", " ", "\"\<\>\""}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"data", ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", 
       RowBox[{"Style", "[", 
        RowBox[{"title", ",", " ", "16"}], "]"}]}], ",", " ", 
      RowBox[{"FrameLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"StyleForm", "[", 
          RowBox[{"bottom", ",", " ", 
           RowBox[{"FontSize", " ", "->", " ", "14"}]}], "]"}], ",", " ", 
         RowBox[{"StyleForm", "[", 
          RowBox[{"left", ",", " ", 
           RowBox[{"FontSize", " ", "->", " ", "14"}]}], "]"}]}], "}"}]}]}], 
     "]"}], ",", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Normal", "[", "fit", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "data"}], "]"}], ",", " ", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "data"}], "]"}]}], "}"}]}], "]"}], ",", " ", "niceStyle"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.532595091365671*^9, 3.532595107629623*^9}, 
   3.532595144645734*^9, {3.532595249629202*^9, 3.5325952517470512`*^9}, {
   3.532595314102653*^9, 3.53259536045708*^9}, {3.5325954090606213`*^9, 
   3.532595422464344*^9}, {3.5325955067627*^9, 3.532595507393654*^9}, {
   3.5325955542750177`*^9, 3.532595559057699*^9}, {3.532595621598906*^9, 
   3.5325956621221743`*^9}, {3.532595782519381*^9, 3.5325958040427437`*^9}, {
   3.532596014119906*^9, 3.532596014672872*^9}, {3.53259612642731*^9, 
   3.5325962663994217`*^9}, {3.532596729960411*^9, 3.5325967305451183`*^9}, {
   3.532596983550954*^9, 3.5325970168171864`*^9}, {3.532597167599869*^9, 
   3.532597229326192*^9}, {3.532597355721321*^9, 3.53259739665351*^9}, {
   3.532597500658169*^9, 3.532597512987939*^9}, {3.532597681873479*^9, 
   3.532597812936393*^9}, {3.532597874466455*^9, 3.532597877990244*^9}, {
   3.532597908818277*^9, 3.532597917865274*^9}, {3.532598047960268*^9, 
   3.53259809847855*^9}, {3.532598137010721*^9, 3.5325981946497*^9}, {
   3.532598297195854*^9, 3.5325983008616457`*^9}, {3.532598347844635*^9, 
   3.532598355893836*^9}, {3.532598392086068*^9, 3.5325984341129103`*^9}, {
   3.532598495092903*^9, 3.532598521694908*^9}, {3.532598594570236*^9, 
   3.532598717817521*^9}, {3.532598758637883*^9, 3.532598759626935*^9}, 
   3.533201197306006*^9, {3.533204379924687*^9, 3.533204395915169*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "GroupPeakFitPlot", "]"}], "\n", 
 RowBox[{
  RowBox[{"GroupPeakFitPlot", "[", 
   RowBox[{"data_", ",", " ", "fits_", ",", " ", 
    RowBox[{"title_:", " ", "\"\<\>\""}], ",", " ", 
    RowBox[{"bottom_:", " ", "\"\<\>\""}], ",", " ", 
    RowBox[{"left_:", " ", "\"\<\>\""}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"data", ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", 
       RowBox[{"Style", "[", 
        RowBox[{"title", ",", " ", "16"}], "]"}]}], ",", " ", 
      RowBox[{"FrameLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"StyleForm", "[", 
          RowBox[{"bottom", ",", " ", 
           RowBox[{"FontSize", " ", "->", " ", "14"}]}], "]"}], ",", " ", 
         RowBox[{"StyleForm", "[", 
          RowBox[{"left", ",", " ", 
           RowBox[{"FontSize", " ", "->", " ", "14"}]}], "]"}]}], "}"}]}]}], 
     "]"}], ",", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Normal", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "fits"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"(", 
           RowBox[{"Join", " ", "@@", " ", "data"}], ")"}]}], "]"}], ",", " ", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"(", 
           RowBox[{"Join", " ", "@@", " ", "data"}], ")"}]}], "]"}]}], 
       "}"}]}], "]"}], ",", " ", "niceStyle"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5325332652802134`*^9, 3.532533266036162*^9}, {
   3.532591544441571*^9, 3.532591545319562*^9}, {3.532598803988061*^9, 
   3.532598825653798*^9}, {3.532599337184716*^9, 3.532599346382395*^9}, {
   3.53262693561517*^9, 3.532626940059949*^9}, 3.5332012031151867`*^9, {
   3.533204409713091*^9, 3.533204409715311*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import Data", "Section",
 CellChangeTimes->{{3.533194821472924*^9, 3.5331948229950647`*^9}}],

Cell[CellGroupData[{

Cell["Sample Cleaning data", "Subsection",
 CellChangeTimes->{{3.5331953435528307`*^9, 3.533195355163769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AllDataFiles", "[", "\"\<calib\>\"", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.533196409016691*^9, 3.533196410341226*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"./data/calib/calib01.dat\"\>"},
     {"\<\"./data/calib/calib02.dat\"\>"},
     {"\<\"./data/calib/calib03.dat\"\>"},
     {"\<\"./data/calib/calib04.dat\"\>"},
     {"\<\"./data/calib/calib05.dat\"\>"},
     {"\<\"./data/calib/calib06.dat\"\>"},
     {"\<\"./data/calib/calib07.dat\"\>"},
     {"\<\"./data/calib/calib08.dat\"\>"},
     {"\<\"./data/calib/calib09.dat\"\>"},
     {"\<\"./data/calib/calib10.dat\"\>"},
     {"\<\"./data/calib/calib11.dat\"\>"},
     {"\<\"./data/calib/calib12.dat\"\>"},
     {"\<\"./data/calib/calib12_uebersicht.dat\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.5331964071687317`*^9, 3.533196410815147*^9}, {
  3.533326116764946*^9, 3.5333261388371973`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"calib", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ReadRawData", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"AllDataFiles", "[", "\"\<calib\>\"", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.533195357751843*^9, 3.533195367706696*^9}, {
  3.533195689673287*^9, 3.5331957035620537`*^9}, {3.533195762434754*^9, 
  3.533195787338111*^9}, {3.533196024106176*^9, 3.533196024691697*^9}, {
  3.533196202843412*^9, 3.533196215052341*^9}, {3.53319636892235*^9, 
  3.533196387720437*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Auger Spectrum", "Subsection",
 CellChangeTimes->{{3.5331964755463142`*^9, 3.533196481332264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AllDataFiles", "[", "\"\<a1\>\"", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.533196518943191*^9, 3.5331965192603607`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"./data/a1/a1_100_1500_1_1.dat\"\>"},
     {"\<\"./data/a1/a1_1300_1500_1_3.dat\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5331965197865562`*^9, {3.5333261168941927`*^9, 3.5333261388931913`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a1data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ReadRawData", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"AllDataFiles", "[", "\"\<a1\>\"", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.533196544676675*^9, 3.533196560795224*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bulk Plasmons", "Subsection",
 CellChangeTimes->{{3.533196498371682*^9, 3.5331965019432297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AllDataFiles", "[", "\"\<a2\>\"", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.5331965244312563`*^9, 3.533196525154374*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"./data/a2/a2_900_1100_1_3.dat\"\>"},
     {"\<\"./data/a2/a2_uebersicht.dat\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5331965256226997`*^9, {3.533326116915587*^9, 3.5333261389506073`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a2data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ReadRawData", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"AllDataFiles", "[", "\"\<a2\>\"", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5331965721335506`*^9, 3.533196575207284*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Surface Plasmons", "Subsection",
 CellChangeTimes->{{3.533196506970702*^9, 3.533196509320136*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AllDataFiles", "[", "\"\<a3\>\"", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.533196529280085*^9, 3.533196529667284*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"./data/a3/a3_100_250_1_1.dat\"\>"},
     {"\<\"./data/a3/a3_140_210_1_3.dat\"\>"},
     {"\<\"./data/a3/a3_uebersicht.dat\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.53319653000574*^9, {3.533326116964405*^9, 3.533326138963422*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a3data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ReadRawData", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"AllDataFiles", "[", "\"\<a3\>\"", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.533196577821186*^9, 3.533196580382996*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sample Cleaning", "Section",
 CellChangeTimes->{{3.5331932833015738`*^9, 3.5331932855257397`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"TakeRegion", "[", 
      RowBox[{
       RowBox[{
       "calib", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], ",", 
       "150", ",", "600"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"190", ",", "\"\<Cl\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"284.9", ",", "\"\<C\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"400.2", ",", "\"\<N\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"530", ",", "\"\<O\>\""}], "}"}]}], "}"}]}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy E [eV]\>\"", ",", "\"\<dN/dE [arb. Units]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], ",", "5000"}], "}"}], ",", 
            "#"}], "}"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
           "calib", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "\[Equal]", 
              RowBox[{"Around", "[", 
               RowBox[{
                RowBox[{
                "calib", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}], ",", "190"}], "]"}]}], "||", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "\[Equal]", 
              RowBox[{"Around", "[", 
               RowBox[{
                RowBox[{
                "calib", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}], ",", "284.9"}], "]"}]}], "||", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "\[Equal]", 
              RowBox[{"Around", "[", 
               RowBox[{
                RowBox[{
                "calib", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}], ",", "400.2"}], "]"}]}], "||", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "\[Equal]", 
              RowBox[{"Around", "[", 
               RowBox[{
                RowBox[{
                "calib", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}], ",", "530.2"}], "]"}]}]}], 
            "&"}]}], "]"}], ")"}]}], ")"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}], ",", 
     "niceStyle"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "1", ",", 
     RowBox[{"Length", "[", "calib", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5331969206806087`*^9, 3.533196960396153*^9}, {
   3.5331970161275253`*^9, 3.533197039668281*^9}, {3.533197346993133*^9, 
   3.533197348745862*^9}, {3.533197442993238*^9, 3.5331974593247547`*^9}, {
   3.533197739250242*^9, 3.533197745212762*^9}, {3.533197937439126*^9, 
   3.533197962135391*^9}, 3.533198180575157*^9, {3.53319854311728*^9, 
   3.533198543168956*^9}, {3.533198847776251*^9, 3.533198919044854*^9}, {
   3.533200404356865*^9, 3.5332004354466457`*^9}, 3.533200590531723*^9, 
   3.533200630755322*^9, {3.533200674938092*^9, 3.53320071150397*^9}, {
   3.5332010703549337`*^9, 3.5332011147900543`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m$$], 1, 13, 1}}, Typeset`size$$ = {
    606., {197., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m$1133$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`m$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$1133$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        $CellContext`TakeRegion[
         Part[$CellContext`calib, $CellContext`m$$], 150, 600], PlotRange -> 
        All, FrameTicks -> {{Automatic, Automatic}, {
          Automatic, {{190, "Cl"}, {284.9, "C"}, {400.2, "N"}, {530, "O"}}}}, 
        FrameLabel -> {"Electron Energy E [eV]", "dN/dE [arb. Units]"}, 
        Epilog -> Map[Line[{{
             First[#], 5000}, #}]& , 
          Select[
           Part[$CellContext`calib, $CellContext`m$$], Or[
           First[#] == $CellContext`Around[
              Part[$CellContext`calib, $CellContext`m$$], 190], 
            First[#] == $CellContext`Around[
              Part[$CellContext`calib, $CellContext`m$$], 284.9], 
            First[#] == $CellContext`Around[
              Part[$CellContext`calib, $CellContext`m$$], 400.2], 
            First[#] == $CellContext`Around[
              Part[$CellContext`calib, $CellContext`m$$], 530.2]]& ]], 
        PlotStyle -> {
          Directive[
          Thick, Blue, PointSize -> Medium]}, $CellContext`niceStyle], 
      "Specifications" :> {{$CellContext`m$$, 1, 13, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{651., {240., 245.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.533196933709593*^9, 3.5331969613537188`*^9}, {
   3.533197023113883*^9, 3.533197040292801*^9}, 3.533197349659295*^9, {
   3.5331974518384657`*^9, 3.5331974601705503`*^9}, 3.5331979636783*^9, 
   3.533198181708782*^9, {3.533198873412767*^9, 3.533198888431135*^9}, 
   3.5331989218400373`*^9, 3.533200443550375*^9, 3.533200592827628*^9, 
   3.5332006312374163`*^9, {3.533200683159608*^9, 3.533200712269981*^9}, {
   3.533201097455036*^9, 3.533201116397447*^9}, {3.533326117086491*^9, 
   3.5333261390297947`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "=", "2"}], "}"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TakeRegion", "[", 
        RowBox[{
         RowBox[{
         "calib", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], ",",
          "150", ",", "600"}], "]"}], ",", 
       RowBox[{"TakeRegion", "[", 
        RowBox[{
         RowBox[{
         "calib", "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}], 
         ",", "150", ",", "600"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"190", ",", "\"\<Cl\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"284.9", ",", "\"\<C\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"400.2", ",", "\"\<N\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"530", ",", "\"\<O\>\""}], "}"}]}], "}"}]}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy E [eV]\>\"", ",", "\"\<dN/dE [arb. Units]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], ",", "5000"}], "}"}], ",", 
            "#"}], "}"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
           "calib", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "\[Equal]", 
              RowBox[{"Around", "[", 
               RowBox[{
                RowBox[{
                "calib", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}], ",", "190"}], "]"}]}], "||", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "\[Equal]", 
              RowBox[{"Around", "[", 
               RowBox[{
                RowBox[{
                "calib", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}], ",", "284.9"}], "]"}]}], "||", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "\[Equal]", 
              RowBox[{"Around", "[", 
               RowBox[{
                RowBox[{
                "calib", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}], ",", "400.2"}], "]"}]}], "||", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "\[Equal]", 
              RowBox[{"Around", "[", 
               RowBox[{
                RowBox[{
                "calib", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}], ",", "530.2"}], "]"}]}]}], 
            "&"}]}], "]"}], ")"}]}], ")"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Red", ",", 
          RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Blue", ",", 
          RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}]}], ",",
      "niceStyle"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.533200801760993*^9, 3.533200912228897*^9}, {
  3.533201127670637*^9, 3.533201132374275*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1, 0, 0], PointSize[Medium], Thickness[Large], 
    PointBox[CompressedData["
1:eJw11KtPHFEYxuETFAKxEoEYHGLFBLWKjEAgEBMUSc2Eci23oVwKvTFtNrDc
yrRcEzZhIFsCCWJDEMgRCBQZUd3MH1CxomJFRdt9f4eEvHk4M+f7vjMzdI/M
D421GWNe/Pv9n62fdMRrZbOqDF4qzTY5qnQrygS3s+6NKSuxMsfFQ2U0zn3f
lM6EsoBTXDyg/qSy55T6U8r6Cfvg7Jj6r5SrR9THJRxNsx/9ODNcx3qKGziY
VYbsb+bYBye4RD/evLKL9RwXbH+h8heOcc79OY5ZdxeUP75SF4dbzG3N83Be
0xcOsb/BfDjcpK9F6rJfgDupV8c1no9ZUlawj685zwQPMk8DD9jzWVYW7fx4
1z4vbM/PXaFfHOEnrs9wEztv6IfrQ/yIU/xAP4VV5SHvV4AHef/quMn5mDVl
D+fp48qOMsGlfWUD/+F78N7SN+cX4zL1cpxi952yiiOc4QxHdv731LHz49zO
j2t2/g/Kezs/Hj5T1nH5XGk+KnsvlD6u4gQ/flc28DPr3rqyg35j3MX7k+Of
V8rOSPn7kvtxMpe2chL31uQY993KD9jcyDm+u5TbP8n9J7KL/S15GCdTcoQD
vqNrHHNOGTZlZdNez/fmfGZO/l8O4MKeMsQpPsXRF/6Oq7H3F+736RA=
     "]]}, 
   {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
    PointBox[CompressedData["
1:eJxd0y9MG2EYx/E3ZGKyEjFxuArESeQrJiomGtQlIJpuQLexUViBAh0U2FjH
Orht/CkL4hbYUlmBqDyBQCBOIi9komKiEoFg4/d9zZo0v3zyvvc+z3N/hooz
oxMDxpixv/9/ef+Li/Y+r38pC0+Vlz+V5pmyeKKM8O0PpZ1QnuMUz+H6pPJx
pPSmlI1jZYyHv1O/pGxj81x5ekR93G9R/4WyeUh9XDmg/ktlgL1p+t2nPv6z
R/1XygSb18pxHGGD7Yyy9o36uPOV9TJ94BCf4RR3vij9WeqFXIfzOMHZz8wz
p7zYUZZxwv4YH+PMG+UD6hVwDXewj02Ffrk+j292lRFuUb+PG5+Udp59OMQh
+1P8iPP9Bfpw8+MR6iW46uZfZI6msozz28oYd7eUmaoy2OQ6nKxTF3trSrOk
vNjgXNx9z1y4h/s4905pl5Vt6oW4wHqKS/Tnr7Dvg7KOY+ZJcMC8Xo36bn48
wv2OccR65q0yy/0t4Ix7/v+tm1VllfPyOEs/EfY5v49Dno/lPno8vxBbnOIO
+wfrJOdbnDSUJdz4yHn4iv66uOfOxxXmechzPnfvG27iAAd8n3X8m++7jbPY
vTdV7t8NfsJ53gZ90F8Ox/Rfdma+FnbfT4x7O/YOp27m/g==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{160., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Epilog->{
    LineBox[{{190., 5000}, {190., 1227.}}], 
    LineBox[{{285., 5000}, {285., 782.}}], 
    LineBox[{{400., 5000}, {400., 709.}}], 
    LineBox[{{530., 5000}, {530., -3615.}}]},
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"dN/dE [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicks->{{Automatic, Automatic}, {Automatic, {{190, 
       FormBox["\"Cl\"", TraditionalForm]}, {284.9, 
       FormBox["\"C\"", TraditionalForm]}, {400.2, 
       FormBox["\"N\"", TraditionalForm]}, {530, 
       FormBox["\"O\"", TraditionalForm]}}}},
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5332008604128942`*^9, 3.533200913195869*^9, 3.533201133214072*^9, {
   3.533326117479787*^9, 3.533326139295595*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Auger Spectrum", "Section",
 CellChangeTimes->{{3.5331932944516573`*^9, 3.533193296499568*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"a1data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Electron Energy E [eV]\>\"", ",", "\"\<dN/dE [arb. Units]\>\""}], 
     "}"}]}], ",", "niceStyle"}], "]"}]], "Input",
 CellChangeTimes->{{3.533202588401186*^9, 3.5332026393738337`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
ed4T9nybckh7Vr/Y/nWfSHtGO0r/VzvZ9RUH5Rg3V582YPWH9ex4fgA+c/3D
2h/uexlv1Q52XPSrXffd4HlPu9vxJ3W/TDtlBzZOo77wnK3xaPeVjJfrdxnf
G8PqI+ttPNJ6XDn+QX7OU+Op+g3GTz3nof7xnJfzxXOocTAPtPM2+wzIc/fB
tJu3Ar3jOlUP3JODVH2zOXdrvADWf7jvc+upXgvkiOuwHsxTx2kTX3ZeB3pH
vWDc75TUcd/IH/U2qX6N8Q3l3HNSz2Fqr7uOXN/uu/axZ7Q71Wfq8Yb2K/yU
8VPOToxn+JxUO2NqfMN68777LMbjPJevf3ActNd9SftVu974hnLwnPltP6aw
ekv7Vb9Rf0I/0/iDeq+q/WQ/81y5fBTUUznnuXb1uHFp7Sr9Ou0Y+0k58jQo
T79F/ew5NuWt54aNN3hO03U0M3/q5zxXbxuncp05jx67fu1v5oP7giP38xwn
+tt5mbu/53jDnvP09wnrgPVDtcfcV3Y/1nZ6vsA4kvaNcULtDd9zvJVTnq8w
jrqClauzoNyc5+7TuH+nHXQBa7ffGl+Gna/uk53B6nXXq/v0/l5Ave35RNfR
JJgn2h3aUcoF9aZy2ny0U7VDXF/uSxv/0493P+mxclN7Bt6lPYdB/XrqKdd/
wPqxLb5XL9uv+uHW6ySo18DxoX2nQf9tzlXa7+Yf2BH6Idqx2r3acc5rxykJ
+sl1q18/Mb4SzEfPfeofTmHPw/u7Eu3Fwvnk+rd+gR7WLn+mXen6d/xd/46X
es115fpXDuq/2z5S16Vyehm0f2MXub/n+H791XboV69dx3yvne26iwI5pF9m
+Z5b9Pd4xqmNhyvH/X3tdvC++0DKwY1f7u9LlBs8f2Acgv5V7gwCP10/yriF
4+U60S51H107bC/QS+pJ9Z5xQPWy60a98ghWzuqHOW7aicaLOsbZSLXT1JNp
IMfUC9qJXfU4rJxT7/eC/PQjtJv6wfv6ha7fDHY+GvdxPqo3XAenQf8N9VO0
4/Xr1WNBf+r36Kcp97XT1CPaSWP70fVvfxpfsX7Mh8vg+6n1dR0F+TlPtR+1
y7UfjDvox2jnaBe5j+K6vAn6yzirekU5pbxbBM8916Tdox5VDivX1AuroL3q
Re3ldeBn3rl+tUv0w4zLaFdo/7tPxvv3jHNqx8HKPf0e5a56TP2iH6h8j7Vz
gjiQ+xKe63Ffxrjv5vcY2gna/0F+Tc9JwZ4jUr5oNxl3UI653jZxXeMoQZyq
HZS3b/8Zhwjy83fM+tGe49JuNE7rfOjC2sPaifodPVj55L6969G4uPr+2P50
/Qd25Injx/gPlPP6Ufaf+h9Wb+jHa2dpx+q3nNtfnp8KyjfO7/wZw8oF7UDl
jOdOXWfqeeWccWPnmX62dq6/q9euunK+q/eNOwd2mvLfc3ba7TewcsLf3TlP
jbtv5qX/V484/+0n/UrSl8F3q+D/7lsZb9cvddzunB/KCePwygVYvWNcw3Vh
XMv6V89ezXcbvvK8oH4i6X1S+yn2Hgn4gXF29ZjnpuAdn7u/INPeXdh+9Hfh
6jl/l61dkcCbdQdv1jnsvPQcVjtIX5DukzpuHdh+ct/Eea0frdx67D0NynnY
dXsIuw56jp9yAlYP9u0/17/94fkXWPly4j0N6n+fq/9h7TTHdWPXwMZZHCfj
4MYRjAPlsPrUc3CbOEUwPy9g7aoJrF6/9JyccsT8fY/U862Fvwvg9//O2yb3
X7jvc8x9H8/ge/DM/ub3NTfwNvnPLY/6Pbd/1f+e+0NfOI/UZ0vng/tetk/7
3/d5fuu6UP+bv/Y/7LqOqKfrZ4v0iP6owC9J7/m7Cue19yQE7bY87znx3MF9
f/fk71YcB+81gZNfoV3e0/BzxQeJci36+ZIb5veLZbpr/d4sU+8h8Xe/e7C/
w/F3WO53ee5S/61lu13/sPKgDT+lv/zdyQvmTwc+hw9g652Sui4fw/rh3luj
v3PoPqnnxGB/13Bkf8DGIT2nfwx7Lt17MjyH5brQ/vXeH+NWp7D6d/O7G//v
vKe9zqsev2c7d374+zbz5/0ntl872HPojM8F7L0IE+fDfvFBcrkZ75KnnqP9
YslP7Y/PllzY/l8t+cr++xj1tPzPl+kz5yu/I/V3j5679V4R93Hnzn/36Xzf
+1ks7xfK9IX3lrxT1mdpe79Tsuvwh98teQW/flHyrfP1+yV7z8/7PL9zvrxX
svceZd8reQu+e7fkCrz77ZK9J2V0VnLVe1Wor/es9L5Ucs38P1Xyfe/x4h6y
GPZ3/pt7p/zdsc/53fKO3/s7Vt9/i3rCnuNswp6b2oM9N5FYP8bnIax93oLd
B3oEK2/bsOdq9i3f80qW5z4+7DmIVPacBqx/0YXVn4f2r+ebbL/7iPaX+93K
ccrzHjX9mczy3fe1PL4fwO4XncKeMxt67xPvn9kf8Mj54TlD2HOhuf3judOA
x44P33vvlOdwJ7DnKi+tP+9P7Q/GQzntflNhfeGrYD5cO570n/eKeU5oBrv/
uLlXj+fzYP48h93nWtg/5P8iyH8Z1Oel/cf7K9tPf9yan+dwYffz7uxf95Wx
W9xX9Z429/kq3hPHc+8x29yXArv/sQ27j1nzd83U/773qHmOxfxp7wPvTfP3
BLDn7vwds+c8GwHvWh/PsVofvt/zfX9/4L2Hrn/Yc0OtoH7+Ttv51oY9d7/v
PW/I947l87vLA9jfBaW2z99B2X7e915Gf3fuvXT+Lqjn9+ifI9jfCXgvnudy
j2HPcWXec0f/nMCejxnAngs+tTzXP+w5urNgvoycT8a9YeO03jPpPtcT+4fv
x7Dy8sL6eB8S7Llh7XDPuU9tL+15GrzvvX6eX7pyfnrOz3vxeP7M+eG5Xthz
39775/r1nkXPzTy3/t7P4r2F8Avr53kOy+P7l8H89F5O57f3+KlP1tbPc4PW
z/sfsLs8Z7sFK78rsvv/sPubVe899ByefpO/o/CeR+1/8/N+Cdhzcw9gz8fV
Yc8R7wTcgNVXu9bP3xtZH9c/7HpIgvo+hDfnwLRLjf/Dxm/bsOeKvPfU/u7A
zqcDWPvaezmVj49tn/of9hzWofeqep8Y7HzxXkzj831Y++DYezNd/z7n+xPY
/YcB7Pr0nkv9Ve999Vz1mfdGqv+tv/6/+Rv/d/54Lku/yd/TOB7qf/uT9TZx
fnmu2/7j+6nley7f+nn+0vzU/75Pe6/Nz/i/883z+c439/9gz4HoB3keST/H
+OcCVt/qN27O88Oe430ZtHcVsPfsuh/iPavaN3ew8YOIOMb/+Sv/C+CkBtY=

     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{100., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"dN/dE [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5332026254078836`*^9, 3.5332026399882317`*^9}, {
  3.5333261175730667`*^9, 3.533326139320573*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
oEED1K9VBRXKl0P5ClXRdMAi7FjcExViTTHX4p09UswVjijr4i9bohGbtzpi
84VgsSn6IKr5m1Zs1ikELqLvOxocHSkInq8jrgtwcEF7lJYmUmm0s5gwe+so
NBRDxZZHj8XHZOtTmx9DvXiTKeuMEIRkuAsP1UG1az/FoXxpM0rLMZp5xkUU
nOWinJul27/pbbkWhpB9dIshMAzYBtdDrTuWIyNAnml4au3igjzGm4jUUqWQ
EhcrGbdyn/DUmrt7JtpItWJQzlsW5Rz+Ah0kamNRvsdiHLYtfAODIzdJVVCQ
sQpDm5RGxUv6Ye6e3LBUu2uqtYqesoYGWoqvZjyFgTfdg8mbTiDHsIZahLBI
k+XlWnhww0mlnwro+ZkldjNWoK9J4kht+T725luitGUh0BJ111Gh61jYKR/H
oS8szeoi3NFolCDaG873UhGzOY5Vg2qaPq2hUf9qifcTa+9BesUOeHdPno5u
Q00zGrqNbmqmsl94o6XsDb58xPItT65/AHXTbsHiYwVnQLe2Rsg9jKWPN0at
CHQbKDiO1Y9ehKRYEej4J37KzkfG8iGoHSd8+TQMMLzg/IKT2Di+FUp5hHt3
D748fBq/v90ZgpRjEhtjzNbsEHRbgNP7VmLqTVXNBfCXR4uLysAM6RhY7b0S
x/OPYdmIJsb4wsu/Df82eCBfevlJ0suvcv0sw8tX+omNQ4U6XXDvqGfx99sb
I1kSQQIaPSn9DZNuW0WJlkJ1HQW6DiMrwpQzMlZiRP14g7C8qHTDh9ibewo/
PNvUYtOquO7xaVi9/SNcX4lU79/wPTmugpeqpeKiiVuRHSDlohe66lwjE2/5
6MhBiK0jC3GjZRrE1R2JTRRpOLEGA9Oro9eXRxwDMTz9dg5p0WT/byI63RmB
fgPmRJf/cwh6dWiKhvXrIT29EVp064dnv94nrHTLtM7CjvljcWuHS1C/bh1U
NTRIo479MOGz3w1tnmMImitRq7QfsSb7I6VSNVRvcjM++/wFDLvzBnRpcQFq
1u6Br377HlMGtkGtyhfhtjm7zf7zT+KHd/+K3u2bol5aOmqn1Ubjlj1w7+Rl
OJAbkGbW0VUvY+SA3ujW+kIDvg5476cf8O8xd6BT48pIKZOG5re/grUZ+ZYW
DW3Iu3ESdb+mwq8bAVX5OLIi8nRz9i/DPx7ogZYX1EZ6nXRUS7sA7W97BKOG
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
k4xgHiAdxa2Aecv46RftBcT8PwmFOJo=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"TakeRegion", "[", 
    RowBox[{
     RowBox[{"a1data", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
      ",", "1320", ",", "1440"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Electron Energy E [eV]\>\"", ",", "\"\<dN/dE [arb. Units]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Blue", ",", 
       RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}], ",", 
   "niceStyle"}], "]"}]], "Input",
 CellChangeTimes->{{3.53320265722545*^9, 3.53320271464078*^9}, {
  3.533202829421859*^9, 3.533202905145363*^9}, {3.533203465287792*^9, 
  3.5332034657626*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
    PointBox[CompressedData["
1:eJxFlFFIVFEQhi+xgYWFhISEDwoGJgY+WEhIXEJCFoNN9oaRwWaumC5kYbSV
xmJWlmZmey8WlpJubjchAw0pHyx88MHABy0LCRENEQUJNTOTbOc7trAM3/ln
5syZM+cmFpzP9W7RNO3Kxv+fjfxag7pz23vbnmzQI9we1N8sHzaMxAfC4aBY
D9yJfhLuIv4g3A1fhXuJj24U26f2g/vh2YfCA/iPYAdVfkt4iPVxeJh6flmb
cREOwWPEfzeJU/7kmcD62H9KrVP/DPHL9GcOvem+2IWg7puvtO0P94QX0fPg
FbgB/zXyrZNPM+kn/XCYoj+lnijqjv5vxZ/zxbA+CMcSv856HP6nyRdv6sFd
VYbxhHoSTKl/9rZwEnwoIJxs6vv2Ol7ajy8Kp5r6cWfUCcM4I5zGPrpLbDqs
OcVmmHpbMKbTTnELZ6K3FhFH/tVy4Sz0hutis6nnxw3hHHR/jVgX+nb67eZ8
05wvj34UcZ/5qi/024O+Ey5ET8a/GA6Tz8d+k3XCZaqfd4TL8Z+5RZ1wwk2x
Fep8cID4P/hXwyHOV6PqqRVbx/6r9eRBb6feIOdZ5b6b0FewzczDF+alFf8C
uB2uZ27D+L9W75/9j3D+LtX/auFuU//89bfb8F4W7lXzwLz0bc5Hf8T0M089
54QH4AOlwoNqvgqFh1T8UeFhU3/V8/OFXUL+EfQyv9gx+jlaJTyOHqDfE9Sf
Qv1T1G9eEJ6hnqUS2W+OfN5a4QXyjTULL5r6qWsttp3aJrzR91C1xzDOPhde
U/WHhTVL/HfDDkv8L3UIR3Ev4ZBwNOwgfwzsaRGOteS+tj4SjkOvaxSOt6T+
+RrhBHRXpXCSmguvcLKlv/v0rcNOOSbrqRb3VSqcZkm/RrnvdPJP8/3IIJ9G
fzMt6fce+q/Db/n+ZOHv5z1lo0/eFc6Bc3kPLvb7CLvRS5jPPPgZnK/OB3uI
38H3oxDeDxer/sA+8tlwmcoHl6M7Yb9i3msF+ZfQA8TH1et/AZYbBno=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1320., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"dN/dE [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.533202663569847*^9, {3.5332027059706583`*^9, 3.5332027153447866`*^9}, {
   3.533202835724049*^9, 3.533202905549118*^9}, 3.533203466499958*^9, {
   3.533326117933476*^9, 3.5333261394052477`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a1intervals", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1322", ",", "1338"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1335", ",", "1345"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1343", ",", "1352"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1352", ",", "1362"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1362", ",", "1372"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1372", ",", "1380"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1380", ",", "1388"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1388", ",", "1395"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1395", ",", "1403"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1400", ",", "1420"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5332082808405*^9, 3.533208358129423*^9}, {
  3.5332131873591337`*^9, 3.533213187442152*^9}, {3.5332132362965527`*^9, 
  3.5332133238387413`*^9}, {3.533213355097352*^9, 3.533213486666301*^9}, {
  3.533213933651269*^9, 3.533213933701654*^9}, {3.5332139741307173`*^9, 
  3.5332139747736053`*^9}, {3.533214162976688*^9, 3.533214164029524*^9}, {
  3.533226676625883*^9, 3.533226683998233*^9}, {3.533227303651267*^9, 
  3.533227305399646*^9}, {3.533328367747813*^9, 3.533328372484551*^9}, {
  3.533333383639*^9, 3.533333386040592*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"a1intervals", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1335", ",", "1345"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1352", ",", "1362"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1372", ",", "1380"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1388", ",", "1395"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1400", ",", "1420"}], "}"}]}], "}"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.5332082808405*^9, 3.533208358129423*^9}, {
  3.5332131873591337`*^9, 3.533213187442152*^9}, {3.5332132362965527`*^9, 
  3.5332133238387413`*^9}, {3.533213355097352*^9, 3.533213486666301*^9}, {
  3.533213933651269*^9, 3.533213933701654*^9}, {3.5332139741307173`*^9, 
  3.5332139747736053`*^9}, {3.533214162976688*^9, 3.533214164029524*^9}, {
  3.53322671512282*^9, 3.533226727515521*^9}, {3.53322729579355*^9, 
  3.5332273013947077`*^9}, {3.533328374091735*^9, 3.533328376427685*^9}, {
  3.5333333892593203`*^9, 3.5333333967849293`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1fits", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"GaussPeakFit", "[", 
     RowBox[{
      RowBox[{
      "a1data", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
      "#"}], "]"}], "&"}], "/@", "a1intervals"}]}]], "Input",
 CellChangeTimes->{{3.533205528616378*^9, 3.533205601252293*^9}, {
  3.5332058966186743`*^9, 3.533205902106702*^9}, {3.533207159203122*^9, 
  3.533207163445445*^9}, {3.5332082514547167`*^9, 3.53320828956441*^9}, {
  3.5332133401089354`*^9, 3.533213344300153*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "sszero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The step size in the search has become less than the \
tolerance prescribed by the PrecisionGoal option, but the gradient is larger \
than the tolerance specified by the AccuracyGoal option. There is a \
possibility that the method has stalled at a point that is not a local \
minimum. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\
\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", \
ButtonNote -> \\\"NonlinearModelFit::sszero\\\"]\\)\"\>"}]], "Message", "MSG",
 
 CellChangeTimes->{3.533333401203226*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "sszero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The step size in the search has become less than the \
tolerance prescribed by the PrecisionGoal option, but the gradient is larger \
than the tolerance specified by the AccuracyGoal option. There is a \
possibility that the method has stalled at a point that is not a local \
minimum. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\
\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", \
ButtonNote -> \\\"NonlinearModelFit::sszero\\\"]\\)\"\>"}]], "Message", "MSG",
 
 CellChangeTimes->{3.533333401205772*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{"1090.2705917194037`", "\[VeryThinSpace]", "+", 
       RowBox[{"393.3107345749685`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.0563879924634319`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{"1488.037957321982`", "\[VeryThinSpace]", "-", 
       RowBox[{"535.5860415401717`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.04155338788794224`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "9.92729853717946`*^9"}], "+", 
       RowBox[{"9.927299973514473`*^9", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2.6031421055390053`*^-9"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{"2242.3402543728635`", "\[VeryThinSpace]", "-", 
       RowBox[{"2197.7722758079744`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.01437012463997766`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "279.52720136423807`"}], "+", 
       RowBox[{"1432.7471641566785`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.014264623438207445`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{"2112.6481264691333`", "\[VeryThinSpace]", "-", 
       RowBox[{"1426.4327355832054`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.012949704313886307`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "1357.2685592812527`"}], "+", 
       RowBox[{"2815.1437606428094`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.013987630864286922`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{"1894.0893106372646`", "\[VeryThinSpace]", "-", 
       RowBox[{"2118.7101319885487`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.021608284814399976`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "2.5095753505938095`*^10"}], "+", 
       RowBox[{"2.50957541940866`*^10", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2.902634305613018`*^-9"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{"588.6560061375226`", "\[VeryThinSpace]", "-", 
       RowBox[{"3771.2969140431123`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.027369275385735546`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.533213575213132*^9, 3.533213936617786*^9, 3.5332139789770737`*^9, 
   3.533214169673177*^9, 3.533226747589736*^9, 3.533227308086238*^9, {
   3.5333261189054117`*^9, 3.5333261395649137`*^9}, 3.533328381865394*^9, 
   3.5333334012125177`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a1plotthis", "=", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"a1intervals", "\[Transpose]"}], ",", "a1fits"}], "]"}], 
    "\[Transpose]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.533214099485578*^9, 3.533214126462866*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"TakeRegion", "[", 
      RowBox[{
       RowBox[{
       "a1data", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       "1320", ",", "1440"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy E [eV]\>\"", ",", "\"\<dN/dE [arb. Units]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}], ",", 
     "niceStyle"}], "]"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
          "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], "&"}], "/@", 
      "a1plotthis"}], ")"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.533205606620244*^9, 3.5332056235490294`*^9}, {
   3.533205673745167*^9, 3.5332057075591908`*^9}, {3.533205954209856*^9, 
   3.5332059575606403`*^9}, {3.5332072386805887`*^9, 3.533207253267332*^9}, {
   3.533207537098768*^9, 3.533207542628063*^9}, 3.533213871027141*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
     PointBox[CompressedData["
1:eJxFlFFIVFEQhi+xgYWFhISEDwoGJgY+WEhIXEJCFoNN9oaRwWaumC5kYbSV
xmJWlmZmey8WlpJubjchAw0pHyx88MHABy0LCRENEQUJNTOTbOc7trAM3/ln
5syZM+cmFpzP9W7RNO3Kxv+fjfxag7pz23vbnmzQI9we1N8sHzaMxAfC4aBY
D9yJfhLuIv4g3A1fhXuJj24U26f2g/vh2YfCA/iPYAdVfkt4iPVxeJh6flmb
cREOwWPEfzeJU/7kmcD62H9KrVP/DPHL9GcOvem+2IWg7puvtO0P94QX0fPg
FbgB/zXyrZNPM+kn/XCYoj+lnijqjv5vxZ/zxbA+CMcSv856HP6nyRdv6sFd
VYbxhHoSTKl/9rZwEnwoIJxs6vv2Ol7ajy8Kp5r6cWfUCcM4I5zGPrpLbDqs
OcVmmHpbMKbTTnELZ6K3FhFH/tVy4Sz0hutis6nnxw3hHHR/jVgX+nb67eZ8
05wvj34UcZ/5qi/024O+Ey5ET8a/GA6Tz8d+k3XCZaqfd4TL8Z+5RZ1wwk2x
Fep8cID4P/hXwyHOV6PqqRVbx/6r9eRBb6feIOdZ5b6b0FewzczDF+alFf8C
uB2uZ27D+L9W75/9j3D+LtX/auFuU//89bfb8F4W7lXzwLz0bc5Hf8T0M089
54QH4AOlwoNqvgqFh1T8UeFhU3/V8/OFXUL+EfQyv9gx+jlaJTyOHqDfE9Sf
Qv1T1G9eEJ6hnqUS2W+OfN5a4QXyjTULL5r6qWsttp3aJrzR91C1xzDOPhde
U/WHhTVL/HfDDkv8L3UIR3Ev4ZBwNOwgfwzsaRGOteS+tj4SjkOvaxSOt6T+
+RrhBHRXpXCSmguvcLKlv/v0rcNOOSbrqRb3VSqcZkm/RrnvdPJP8/3IIJ9G
fzMt6fce+q/Db/n+ZOHv5z1lo0/eFc6Bc3kPLvb7CLvRS5jPPPgZnK/OB3uI
38H3oxDeDxer/sA+8tlwmcoHl6M7Yb9i3msF+ZfQA8TH1et/AZYbBno=
      
      "]]}, {}}, {{{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
08JgTdjNV81XG/1pSe+LtkNwQMMeFWf0rztj3yx8YOltG78F8jHJDW5NxxbY
YMT7zr/FqPdtRbavYZ3bDR9d4T5a2eId/OhyquYgJ/rRGhn99/DHWzos5RxM
MqqxZN0PmCtqVdYZdvz/mZ5Bideoh32es7H/aCLS5mnhAnsJFd/SxXygS3/f
7w7zPjnWSE/TxP2os/5FeL9ZsdjIFE0aR2y2XoHvHZr6cPs7TXxZdwswYIF/
muKlEzT5oCzQVgLHZth5z2D+yIrI0ed5g/tfdJMqxfxyydMmgw+2XJtWO4D5
RtuSd5kQvE3q/Cgr3Clx+q00zB++lE2niyaLklae2gqnGffdLOqgiVXevWvH
YeenNfvcW2my+KVL2VP4Z/mGDEnMY8e55FROtjNIjv/RkquxNClSdtnuCCea
bTG5FEMTPuvHWmdhNnc5ibPRNCnPVT1wCf7DecXQ/D5NxI5onwmGszdelZGO
oEl71pHUfDiu44dOcDBNDA7dE+fAXBxfIdb/CvOnYtw0ewo84R95b/NhmgSI
175ne4f3C0UFi+G5CPK7ZCTJoBP7GfDXTzAugmQ763EEdKF/cwTP5u2MIONs
6ec+dDMItcW65C/ipFtmU7uul0GeXQhX4TnDIOuPia+70Yd55EV+TC0r5hi+
5at7+xlksd5Vn46YcHJzyGKR5CDqXWqwj7JuODGKT52+9B7z48wOceexMCLv
b9BQ9gHnw9dZWD0+DPFfvf3PR+SrSWa2lE0YmdNmf3b4E/K94q0W18owUqmx
VTLyM/rRaMcR4XGKbOCpKo2FX/258Vx3jCKMbsOjiXBevHnpuS8UOe11PDob
3i9Sbds2QhG+p8GitQvr74i4hX2iiK3yR8EpWHPq4vXNAxRhkQtdajSM8+Aq
pd/9Gu9ns2LZB2HltzN+onB7ffI+c/iNqa225SuKpNmXBNvB37OlnLtf4v00
6TO3F5yvtFjzYzNF4lfuXJwCf1FPql1aTxHuyfqUDPjghbAHZnUU8Sg32Z0L
J1z5zfqgliIG1qdvlsJ/f587trmGIt+iwtnfwP9tPO55tIoiVk5SiZ3wwJPQ
kLRKitSop2v3w4nN8Qo/KigS2Vl+dRRexAhjCS2nCFvanlWTsFU7j0p/GUVc
PNsr/wcXNzDGNsFvdx+znYMVumflfPC+pyn0ZX4eXmPEPtFUQpH/A7uGLnU=

       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwV13c8Vv0bB/A7+rWoVEo0jFBJIlJJulpWJD14KhKhPGSUNCRtROe4uY9R
GVkRRUlGOxSSEYmUnZVKiYyG38df9+v9ur/nfOd1Xd8ju9dtu4MQj8cbO4bH
G/2VzJjM433gSODo+9K6nKPzXZPkheGJar13Tpdx9E1mgv44ODr5nFNcKUdF
QUJ8UXjjJlWTthKOjrgMSEvCUnzrDscijioXNa9bDk9zj92x/xlHl2IyT9nD
znPXu6y/y9HIJcuRIjhj2tZe5zCOruaUtsfVcyRu6XXyrDlHi7QEu10bOKpd
He81axZHax0i365o5Oj7158ax6sFNKG5eOWUJo5cAi8Mfr4koIIMw0W1cKT2
lF8r9AS0srqHd7eZI4foLR11QyGkFlv7/mILxpUs+HDhZgjNzRfX3d7KUdrg
thzOLoQerfCMWPKRI7+/vI554iFk8neR10+4QjbdVOJlMP3nLmP9qI2jvFsT
hZacDabV6tpKoe0c7ZistNFtRTANb0m9YN3BUf+DkunRPXw6eE+neFUnR8lP
Crjz1/nkXjRz6tQujj5+euAptJdPNmr08S08cXrI8nAFPo3rZmPTP3FUNdnW
oq0iiKKGVb8e7+aIt0qkfLJjEHXvGpAz/8xRXatQQMaYIHpqP2aX8heOXMU0
lKNvsLSuTurkMlhrXT3PNZmlxyYa15bDrwpnszpJLD3U2t++CvZQHK5sTmAp
V6z00Ga4yUZPRO0aSxkPIwKtYZ5nvlVvGEvx4qqP+HCKQ9HdMRdY8i2wlumH
/etn21rZsaRfMttvEN4oP3OW7l6WJlVWfvkFH1pjeFvVliW2UfeB0FeOarJl
QyfsYSlsWMVCDLa7/FohfxdLiaojgUvgjy/EGbvtLBVExgzYwg88Vt/fvgH9
xe+0doCzPd8f3Lke/aXMeO4ID587J25LLL3K9gtxgwsXh87x0GHpTaXb0pNw
QtyZFXFaLLVOILsIWM9Y/LGyOktCnk1lZbBszXndPnmW5hbX/HoNFx300FoI
a84rX1QNmx4tGNm1gKX/nj86+x6+M110pECWpYqZVzU7R9tXR1fFzWcpKss8
ekwPR1bnq3suzGZp1eBLFw24cOf8F59EWdpulHdlJWx3XF12FXzgWm6hFpwi
ZmvqK8JSjH6y7Ho4cdxhNYVJLI27fKHaGO64euTHgfGYz2paux/W3OYeJi/E
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
oXfed5PmjHrq2J02IwwdTj1WNB+eGW1tz+OxlDJBeJICzM3O/7xhDEsS+RKM
Gvx7TtSz18IsfVu5XmAIL1UodZg1EfdbWS7GG7a8LGjVEmfpbPOQ8GnYeXZt
mvBMlmxi9zieg22m3HUuhefKLlELgBfYRuXaSbDEyeTlhcMxYaZxV6VYOi/9
rS0Dzpom47cK90X7eUbKXbCuq3yowjKW5CXH5pr3cyQ/Q7ov35ilXYpJrTvg
No3LMVlbWeKrG06xgr/981A8xYSlX8Z8u73wUIyjpcCUpcqzc6e4we5JZOFm
ztLpzxp2/vB5/6Imo90s1T9xmPwAPtclpRXlgvv2vkJbmZ8cKcleXxjAx/t3
l4l2wBKVxzVi6lmixKGYxwNYb9Xp8UfXBlHzhmN5foMcXfF/dds7NohWq80p
tR3CeQsyaFEX5dMZz2n7lw5z9D8PIWkZfT6Z2m0R7ocD3/66fMKXTzWxN/xK
f3GUnlVszi/l01ZNy6vhv5FvFF1Y/vRg8p6jFn7oD/LRIv/O8D3BpJZiGGrw
F/GUUJNXdzOYathsuekjuN/HvbOu6g8mjQL9iG74Q+yRdxabQ+iMydKoLF4o
sSpfFQ8EhZDFefOEk2NCydLmkdjhmhBqnhgnMBcKpUvuD+YflRfQ7rb106WF
Q8ndQtX6vZOAeEmDoXLw44EN7dMOCFB30yUVYXH1BkN9FwG1d8+VXQrPJu0b
mW4Ccu0dWLYGZq95ZQceFtDpkVvG/8L7lpiNUffB85JSF4PgjUPW/g7BAtr0
vkJUAE+utXYOD8H7Iv34YfBT3uGFxQIBKcn0h0fBr4c8lJTDBHRXseJ6Knw2
on3Htyv4flX3LSiES4ZS6WCCgPb1a+uXwLJcevK1RHzvZv8oKYOVfih2ll8X
kLGWbVU1PKd60pelNwT0lrRbWuGci40inbcEdEzoh0MHPGFNrvKsdAFJFdzo
+gSPjNGW33RbQNZ6Et+/w0JptWExGVifiWWH+0fnk/J0WuldzO/l+cFB+PKn
L3uHMzG/S2u8f8OG8XoBC7ME1GHcOzICr5S852eWLaD/A9iJOE4=
       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
       
       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
gTHGzNIS8vh6e72xJA78H//WKqY=
       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwV1nk4VV0UB+AbJSQpoiQuSdIgJTLEVj5JCCERReaxZEoUdcM1xME1RIYo
FWmUoVLpVoaMSVKUzENo0EDx/e5f53mfffY5a+1z1t5L2sHHzImLRqMtmEOj
ca7L7yyk0fRZRIX3k4r0WgZhDPHLcsPy3ZY7S9czyASdV58Htus5q220iUGq
47kSBOBGsUCeE6oMEuD1S2o5PCeSVtf4H4O0yHdrb4YTqiOEgh0YJDb73mlH
OJx8yXiSwSCzsTaz1fCl/n8rBQXPkYyy+v5Lu1lkfv7R2YC5EURePcnW24BF
MhvrDusNRpDtTpltW/ewyC6jv1pD7EjC212jKmjIIn1Pj+2ibkUR9h0D+XZY
yZPPxCuKSVTfjNPuGmF89ryFulc0Ucptf880ZpFxv+3zf+2KIRLPRPTM9rJI
bjF3u6RgLHm01T9tnQmLWPToRgx1xpK9M/LBP+F4x2+6l9PiiNtRut0jUxaJ
iwv0sNE/T9S2aCqwzFhkzRE3ow0z58nUnsJzdvtYRHV6KoSWHU+OlWjVbDNn
EfMpbd146QRytHrpokUWLLK5dW9uoWcCOaxEettg9kKNuKwbCYRn5HzuTUsW
CVgdrrBjLIFcnNo0dmI/i2i+6Lg8LkuREetfMhZWLPJj0dsdjQco8sRxjvX6
AyzCaGrKE4mkiHaHeKgi/MIkve8WXLlXOWczPLbTpsYwiiIP1V36t8FBioUB
Z5kUKReq9/0PlvmQ7jIaQ5E7D9Ni7GDdFWUZRQkUyRPZ9CgBFrWRFO1Pp0gE
244+CQ+/CCrSKKSIft2yyN+c502qmNfB/C0tX6Zh2T1qMdZFFDn/Ue8BlzWL
VNgOXAm8QZGUqY2WQnCl6mRS0U2KXN40G7MO3lxivH3OPYqwM7N/2cMTUksT
LR7ifXkH7JxgiZOdi9/C+teFn7vC1091SVk9osir0shEHzis3b3fqpIirS0+
G0Jhu9omCYsnFOnhJUfS4LTm+fLb2BTh8v/U0AD3Ptt+9modRSRq3k43wzPp
iuIiryiisrJR/g0c5SttdBp2e/7ozHs4eetYhHk9RZqWZqgMct4fGLt7qoEi
F+9bZM2xYZHqgYl5W1oosu13rZcynMO7bOuBdoqYGVZdUIWHY/bqlMGeOeUv
1eF7594Nir6jSLb+VWkdWCKhie81zJN+7o0RnCJSmaj3Hvmoke0usImAzkPx
Lor4nCwRuABLfjM1DOyhyMaukrUX4Ve5XBLV8Bi5r5cDG4zbRi/rpYg3T2nY
FTiilntnGcdU2Y878CmP9FXf+xBPwYMPdfAtHscsy0GKuL9+WvQP5qlWP9Q6
ShEFlaoa2kEWaU1K+rvsC0WG06r6ueFXj1dss4Xd7J7R+eFoehGzF3YdYieL
wvrBHiljYxRxmX0Zoghzlbvum5igiOO6BkN72NIrUvf6D4xL+dxwhA1NVjkN
wO7CQoKusK70miWyk8h32rTRGx6s2784Ew6ue2MaAjswfuVF/KRIvEenZSrs
GbtcTO83RRIPnSq9ABtvjvp7Ek7eJ7UsC74+Lud9G76gYf8uHw67PTAp/oci
+Qv6bO7AMl0SqYNwReHo4Xo44HDuSu9p1Et23NMm+LDUBXYm/Dhpo0wrnCyf
+KsWZp882tMBL+n0myP3lyKNe344DXLW63ZpfhvcOzLtzm2L77W3W05mhiID
HzPreOAoldjY3fDw6+3r+WH+awKnjsLjD05/EYI/32fMfQRPxXAflYQVSoWy
TWYpsmj9An81zvyYa7wOtETi7jWUoQlPLCjnDYPZxS+rtGHv5LC8i3CQEkNI
D+Y6oXTtLfxZ5V+hGWf8w/gPvTmJRDPofYsFPPgsudYeTi0v/2MFvyrpUw+B
DTUDdh2CeegRIzfh+zrjnz3gK4IZsUu4EonQ2Xo+H878VcGqCrAHu3CTLyef
rKkQHZi+y/VUEGzc2vHWG4427F5+Do6e+fmKDffGPSZRcFrtY8N3sHbjRZcY
2LWY7vIF/mFqXUJx8gu54iHCnUhs9782yYIDci/ftYXL0m4H5sJ+x5bw+sBL
OuKz8uHrjot+nYZfHDQcvQ4P0+/n58CbHJ5HlsLqwtlanXB0Xl5xBWe9//i5
jMB9veFvHsESrq0Kf+ALLlqr2HDl9/XhwnMTyVyv0somTvy5Sp47YbtiVt9r
TvxBxM0YLh8/LvAWDk5+TTsAe/tusu6Eyw4xZj3h6ruC4Z/gZbM5zgHwqsnR
gh7Y5Jm262m4PfDa5BCc+GaORgK8uTxS4gv8QktWIA2Om3LaOcGJj/tlYDY8
qKHr/p3zPR4NhV6Bd4TKUD/hJsFYyRtwZiWt7A8clHnjwF3452xX11+4Y7Gx
YjlceCZjPbcdi9w/yX/9GaxvIZ7KA7cVbSmuhvvXpM/hhz8soGvUw2enxDwX
wktMGk2aYXp9SpsQrLxNZ7wVrsxeqiMCH432F22HbXyTC8XggyKeLzrg37rC
oitgwULZ2Q9wilhimCTMtS77SRe8ZVhoRBpWCHrP/wluehhvsRoeDn3XybF3
vOATeVhUMV2tG17gEKewHv55TlyS46vKAixFWJNhG8O5X29+zOxmzv1bHMI/
wj3v+NxVYIk8eRrnfWFFUa1qsPXorfmceFaenq+9HTbeOJ36Dq4wjbhG4P74
+bfbYCvZeSK6cJh2m9lrePLn2VO74Alfl9BGOLGGa8gADnZ5sKkO3pQZvs8Y
brBv8XwB13vTKk058RQXKT2F3XVOy1twnp9tcPoBPF9kJtEK1k8ssiiB8/tD
/tnAdwZa7hXDH2OCWxzgJ+7eC3PgELs/ms5w7JleHs7/Ia4UVOAG32qmM+Nh
8zb/kKOwuubYmlD469Uf/cdhw9Aw3ePw+ZPHTQPhZTrvh1zhGvoxuVOw+Nho
gxns/H08IRyO2HZZcBfn/3/hPc3gxF8t/1Yd1vLwbIqBf9Qmc0nDH7aPqMdz
3HHKiVMvJ4TcLyfCyW6qpvPgeyUuwelwb5zYswHU11raEdkCWM+hWKiAU68t
3eevw36X5CpYsOPlw39uwHQ1/9GzcJaBXcM9mPSkj9jBIqwDQVWw8woZ80Xw
bZf2z8853+eVl+4U9g9j9f1GNXB7ZPqjXpj50VymCTZgpBiUwTNrTV51cuKZ
Z9x4AN6xoF2uG57KuXySs3+dGz0U3gunFauWyMMCN31URmCa5OKmSeyHy5Xj
c37DM2Xs/GhYWavBT/gQxjty6rI4+6+UZaMo7Btub3gafkDrWisO04sDrQ/B
O5596aLDg4ZFkpKwif7C3RvhuSu8d6Vgv/cwM1y5G+Z3lpM4hvOgeEtroCF8
4avycQP4m8jBlr2w3u+K/avgoLcekZbw0T6Vmtf/0D8djPl6BN78TMlYEb7k
XPv8FGe+pvPnJpxf7cH63vdgq6mXepU4H49fWxhfCle0MPpiYcH2lpsVsCNz
mG4D/7fV9usTWGamwuvnL/SL48f86uEpqYpD8nCMY0ZwPxwglFRwAue1lvFY
xLLDqA/N+o7mrxR5F3K3YAX8QlZEJBn2KwyqloQt19oPW8DXebn5V8NdTHHv
dvQLYs/E4pRg/WbnlvZxikyo6iQZcMYz9y9+iX4jTzo5OwT2u7kt/MAQRc50
/+EOg/mlhsX54MO5h1zPwv2hD0gZ+hsJ6XVK0Yc59dS8aSmcTK+qSoWbBKzz
avopwpCa6LsDS9Tua5NAv+S40nD9EFw2n6R7ov/a0Xk7YRSuJiJPF8L0i2KT
43BF9T3/4k6KfJDoefQTtlrje27sA0XMJYL3zrVHvVmc1XZDP6e74qqvFGy9
gKzajX5Qdvnccgs4zZLVeqeZItZyBT1WsIBGxaAhnLDFQPAgfMtWIb2/iSLT
RglHHGAtZa7GZXDLGQlBH7hqrUJ8EPrRsFHlI1GwXJSm82r0t52PnRY+gHlE
olKV0f+mOL+0pztgf31zz0qhhCK+Z46HrIJVokI3FKP/Ns6SSpWDg26O5CnB
PG2Br9bDTxqa/VXvUsT/P3lVNbjhXFCx1m3kJ8sUMIPzJ9uDNNDfC382KD0L
V6aszhnLR/y2DQIDsHmzdoVmEkXI5T/ZlUew/1udcv7kQpHuHUFVkY4Yj86K
cVejiJrSinp7J8QX4e1XTKNIuP9ilw3OqE/21v6B5wnE9Mge7kk40fCFMF9k
Anmbey2y3gXre59bbPP2BGKsYpOR6srCf9G537M/noSsUEr1dWORY0PqKkka
8UTpugFrtzuLCF+dVahnnidvz5fKLPFgkWurr/THvI8jymz9tBHYSM1xN69o
HAnfu+HifU8WydahC663jCWWDIv8UC8WWbnwicOVpBjSzXcpycKbRUY8hQv5
KqKJbZ/OEikfFknd0p3hMcQktILfLBk45sSfpod9THLJ9eZyOXit0fKChZ+Z
pH9EQnoDfHKtlmpxB5N4f/ulqAE311aNDtcxSdjsDaP98POk4XdmxZi/XJwZ
D5944ibX5cskuu+bBJLg6Z7YT6t88LzMyIQUOGPthh1uHkyiQJ9MvQiPD9z9
++0Ik9yVa7pSCH9pCTfnsmAS9pYI9ku4/OPBh0KqTOI8qalfB89xPc9juoVJ
eEu/1zXAx02DphMUmcRI3f71G7hRVLd/kTyTtBHNzz1wifiR53zLmSSI67vT
AFxoOeu+aymTiLOvDQ3DLglfHzIWM4ndLrGvX+F51VecZ/iwPnwNfpNwqUJz
pToP8qtl/P7Nydeczg7gQn6xGiF/4b5fLwPuzESRAaNvs7OwF3u67ctUFPkf
wo7BMQ==
       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
PN///IG5o++6Wmaxyf8BLBgWaQ==
       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
w1OlXlLuwnQivfLX4iJcNH/s4hF+Ovk/1mgBiA==
       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
v3FWZANabO+b9Cji6uQ0JUUOKKgZS8WS56nyF/cqOjHUxyye1HeV1uxAq/Vd
5iagNdh7fRSUOJBuCel88jzMlVbboHWyvgiTSL3fksNPogWSi6SukXxhnz1y
0BtoW7MUsn9pyboOdHnzMe7fpP6WTw9n0BaGGelp5PltTFijqcyB+sstwnTS
j/qZDTZo++/Tkpkkn/7qGh90+149s9uk/jUab3ho11IX7h2y/rPW0KvoXrVz
6XdJP2Zb5uSifU8XCvPIflSPelSgP/f1SgrIeu4H/25AH90mZ3af9MtRltGO
nswy5RaR8dHHS7rQPClWejFZvz2F/wYtzkkUPiJxad7vbnT08yrJMlLPeo3h
TrSS0ZhpBckXEuLdir6aoM6tJP/HVVcZtWj1iR3pT9BxRf7jD9G3XIKEVaTe
DAmZLLRuWZZkLZlf4H43Di1Y3G5aT96v3KPCE+gNPFFuA9lv4vYLbuiKfoP0
JrL++Xe1puhtVvuFz0l/K81j5qMbbl+QbCX7TfXsGcN+d3AG/ISknksT6tfQ
+/9RTH9J6pHhyrLQ/UbmwldkfZXCs+vQXyeSTd+S/S/PUn6C/4eAfXV+vSR+
f59OOHqybPxmP1m/s6/eHC0R5iA5ROoNOpkpwP9bzLtTph9JPD6u/xBaxTrH
b5jUF3zujjJaQ2aOcITUF6IuZOL/15hfevMn+b+99cj4iO9He9UWsd9kfN8/
5oFo7r9PfaeJv4k3zkJnOTTqzarG/SzozZPB90tZuvuBDJrX0Jf5mbyfxp7z
5dC99volrujtjIGTCujRw35l1fg+86o/m88j8V3fo6Px/f8aOv1MHS0i/dp7
GM+HqLww/aVoip0/aozW7J4TuxwtGHlAh+N5st9Ebo82usUsYrUUnjfPvqm/
NSL16MqNvMfz6RaT+ncbWe+VmXM3nndUUvUeGzL+eu6rDxM0vK6xfWhH6o36
snMMz0el5X+dsifxMoXZE9/w/H9zUNylmvRPq+D5CA2uuyIW0mjQv6RYgefx
d55EyGG0hkprUuR7GuIKLvZwyX5UCuUc8fyum3vlVgDJp3XxeVsf3sd1twxC
Sf0ndK/e7qZB3qzWIp7sN7vEM6aVBmbp61MJZL91H9qMWmgA47FiPjqtNK+s
9Tm5/9T0rpHxzUZj4ngfdRgcUc4g+Y4//GJdi/fHUvWBIrRheIfJ4lKsL3Wt
+kMyf2CXWuQjGuzV7VxKiJ1cjo8U43m+MKCpguxHi4ovLKTBS6WhqJb048Ve
b8U8vD8kjp/tJP07BjHLU2kIO3uxsovsr7R5zAnv067ZN391k3ojg5vP4H17
UaTpcF81+X6ZPfIyiYavv5Y6fyL7H+zs3h1H433QvHKKPJ9TuQHpPBq2tmnW
L6lBN0+tuH6AhoAAuR9L0aP3F8gx99OQ/ccPzRVoBXU238gV73u3+ghtEhef
Di11wvvrHdvcCG1Y7wwZO2kI/F5QbIGGpFvy7SY0COZvyvRBC+yazuYq0jBQ
uqydge4VrvKSxe8hVXeZ2ewacr887mHj91LozW5PP5Kvru3xIgkaduqeVjuB
5iXkyjtNseGDaXVCJFpk+KLyykE2LPGwD7+L9pyQ9bV4iN+HzZd680h80vr0
d/yeE5g2bxGgNWqOZd7C7z2L+Tt/F5H4dfsFP+6wwbvVLuAxmd+hn8FJYUOO
pZVvK1kvTt/rGo8N67TNtv8g85Nl74pas2H7mI6SZS3WK7NxWLKGBY4FkzZW
aI0/9BqlnrDA+XBjiA06LXz2NokKFnh95HzcgR7dMFv0ZxELgvsKYA9awLmX
K7jFgtzW9VzfWvJ99+JraAQLZO9vbbpAPONrFbeFBS1H9p1rIfb68S42hwnD
U7zhNrSn58RRx0wmiJ/PdhSiW0znKcmmMWHz9R8Lu8h68neDTvKZkFPFL3hH
6uufO63JY8JZlbbOCXSc3GcZ2MOETcXb9RbX4fMoiZCd9ZsBGb9MW1joFt8+
hyZTBiw7MWQvUo/9eJSa45TkA1PvBu9Fox2PBGau7ToEy52TP614xqeMT9TL
LKg8CFkPUyUK0aNqOvna2h7QLs/dt6UBxxtWh2VecAWHw2M8IRrWLm/YoeEE
K0vror0aMb+aoMH7sAMMBFyZ5YPuveB/NszUATJWHwxkNJLvEcXncVIOoJE5
eYiDFqncpHQ+0x4WxK0yPU7GR5rfbuv+E+b6Jny8QBzsKvfBdieMKXpY3yPz
3+uZq6nagaBJr7wQrVF7ZUvsO1vwO//TqJjEMfq9wBY+TcUvLkNT5Yruyba2
MDBUPV5N4nd4p7cF2UBHhW5GJxo0uRu1Oq3gSuCP+a/JepxFH+ozrGD32uqY
N2R+w59X3blW0JLtfrL/f+uPiniKW8GzhLi/PqPTNGY2PFu7DSLt3eu+kvmD
t7Vmz1iCtZTu5jGSP8VUz7DBEp6GVmlPkHqDewIOeVoCzyTu758kf8fzSpae
JZiP71f5TeKuDK1DExbwX75O1DTp5/iCfIcnFlDOmpiZIXFlF+fV0Rbw/8v5
iOQ=
       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwt1nk8ldkfB3BRtjBCWVooSxRRWhSjb9JNEhKNnyJdS2TJNqiRpfscbtKQ
pHWkMmWpqymRtWeklESWkFQiS9oUbQq/M773r3vfr+d5znPOec75fM9c7h4H
L1EREZHpk0RE/vvtHJYWEak9BvTvzTI5H1bsvSlPFN050ruL1enzF5+CBri1
i/V/UicjjeZ37tnFfi1PVVVC20c0eLNyCWrGuuh7o8e8WDPVBd72aJVALQ/2
xK8bajPRscVXtrPTR6TV7R5OWMPFfA2rfu/3Vx/RIo62FnB/9v7II3V4f2L+
/2Bln8RR8/oJG22y84LllaYanWjd8XJ/+CY/ZJz8aMKXo7RCwKWPM8O0Aa2U
/jtsqF/r9xStZXIkEkYXVHEONmJ/5yf9AeYn3qUtbJpwNqscDeqHr/9Tg/7U
uigW7n7+6RjRPGGFIus4GNnzYbfK4wnLFS07AEOuXhLV6NrnijyouTTtxn30
GTFlHmR+LOfWork6ajywITMqGoT3e2nw4OLl6rAOtFatPg9cfuh1fUS3LV/H
A/bE+7JZLRN2YMJ4kNQUERKCThqv5UH2v+8/hqFdwup5cCffKzgC7d7XwIOx
Q1uCotBq91p4EGxpGBiPNg/r5MHWG72+p9C2EUM8UD/utLNS2L6uCgNmpLaz
Cs33VGPAOXStezWazZjFQKrd4h216DbZuQxMlpR1bUGXtOgx0B9Z5TyAtlI0
ZeCai7G9Qit+3xXbGcjYWjVlOlrf242BRAenUmV0Vao7AzutI3RmowU9ngzI
ryr9OR8dFBLAQIDq2pxf0QXzoxnQbXMQ9UWbTcpgQKm5u8gPrfTuLAMij8IC
AtHNLecYaK1ObwtFK2T9zUB8UbsgWtg/7SsMdKdzt6WhVapKaX+dQgpuoTlB
rQw8+vzQtBItOdrGgGi63u0q9LeEdga8Wzob7qO5J54xYPCb3YcmtOeFbgbK
nPUX9KPluB8YaN/We1a+Dds7MIWAzM818xXRKc3iBMzP/CWYjuZoSxI43+FY
roY2/1eagK/r7XYt9NbuXwh8c8ucvhK99JEqAWWuy6Gd6FQbfQIq8o+sPNEm
UQbUFevEd6HLchYRUFNbHOePdhkzIjCnUSIiAv3l8DICOhY3uIfRGRxzAvMH
F2ikoGc4riagm5H5LBW9ewcQWDByyPkEWrDHgsCia1zbC+ikcA6B5fPkVxWj
K2fbEljxiHwtRUtL2REwif5RUIFe8ol6VXuvYZXwfRWb6fyklmvXo83MnAhw
RP2m9aBHGrYRWH+1s65PeP/p7QSs3LYmDaBluK4ErEvWSAyi0167EbANURkd
QY8930nAqetOv/yTCVt77CIQJhp+UhFtJOFDIG2ejvUMtHQOdSM3Pm8mOrHX
l4B9NydQB91u5U8gSOzrHD00p4M6WfNS/UJ0VkAAgToPicWL0UsTAwnYvKoe
MkVn5AYR8J8cmWWOTjEIJnBIS9dpDTpcQF3jyS/koBVyQ+h4e6z2bkan88MI
WPbeH/NGV3VFEPAU35fvK7RlJAGezgJ3f3RhFnWld+K/wWh/t70EoM+aiULr
FO8j4C7xY2kM+rL0HwRi5uf1xKG1XKgrdk1dn4Ae+ERt1v9AKhVdMnU/ge2S
USVp6Bob6j909f2Oo+8doi7xSao9gz4lFk2gnW+2/yx6txn19+y3BufRi0Kp
TV7bJF9Cx7dTO0uNrs5Fq02NIRChd2XwMjpzJXWhr6zDNXR0CvXjg+WiN9At
N6mHcwKuF6E1XlAbDzxUKhe2rx1L4ITA6vgt4fdeSz0Wclu1UjifO6g9V5if
qUIv2Udd8+PmnGp0Wyq1EWt87j76ag71MUagWYuuqKAesdK7WIee3EjtLpul
24CO6qa+2zAnrwm9YIhaP/2kQQtaZlIcgVQXpattwu8lS/11TvKSp+gwZert
3VI3nqG/qFNXXmJWdKIFOtS6/uPFXegzC6n/NNpn1iPs3yLq4eHhij70DCPq
/xXvWTOAPm9IXbF/4PZbtLcBtZaFF+cDersedaJ4572PwvnTpB6scdk4LFwv
M6m3Jj9++AUdq0BdusXe/jvaVoJaQ+VB4w+hR+j44zvWOY2hmTfUbzPZVpH2
CQ+2Uzt4mbqIoVPvUd/UK+yYgvYpoJ793miHJDokg7o/XMdTFq0bQG1req73
F3TzZuqC8Zm+CuiCpdQx/GmBymiFz3S9vLJJGlQVvq+R2nqaROgsNEdAPePU
z4i5aHt36ii3iBFNdNZy6pfzPkXpoBf9t34v5/XFLUR3Cuj6XlveeGgZurKT
7pfsuE1yJkJnU8tx7qWsQg8HUrfXlR9bjR75HEXzqDP77AY0857uz5YszXk2
aP3s//arb0aWLVrcnVri09GcLWj3Grr/M8RirruiUw7SfGh6rOjvjs41oJbM
ztbyQGfX0zwJtmk85oN2lKW2PKYdGYr23hNOYO+uEqNw4fhFqQUr7V5HomuO
/k7r2fNIl2g0m0/zbECn1uyg8Pk6mnfq390/H0LX2lM7Pvh85U+0UgPNx/I9
6upp6K0PaJ6m3AyZdFbY/4s0b5dbq94tQPd/pfntN0sQXYQ+4Uyd+d5iRYlw
fopo3ksd9c++hRYNpPWh4+mtxBrheqr0JHAgwNuuU/h+8R0Eilb/kOhGy62j
9ebttBS2B/02jtYjp8LixW/QLp9p/dIdl1H6gh6odKb1IeV629SneP83Wv82
SCh6yKFttKmr9oe8k0c329nT/Ny9WHQG2ucsra8XLfMXaqBjdTcS2P8tN3op
OqlrLc0P9/NarmjxL8YELrVMyt+BPt+3hMC8TTtXcoXttS6m54dVGra70IH/
GBKYrJQREYwOs1tI56P6ZA1BuxjPo/XK8EiQAB1/So7mgcrC91fRbb/J0rwQ
ueN3He2tKEPzoOGb9030ciJF8yDM3bUSnb1lMu1PsaF1C7rx9HcGSizqNMfQ
Fk+6GHBc6HNOpAPzye0lA+8URdXF0LovXzCg0bNMTRIt2tVBz4MJf8kroOPr
WhjYXOs/qo1udKih51unqa2b0IzkVQbsbW4l2guvGwoYKLYINd+ClnG6TM+3
hk//dkZzTmYzoC+VF+aBrpWk59HgMmuFvWgN5ggDI/MSN2Wh378JYmDqoGTV
iPB6LD1flyQmbBgV9nfjfAZ8tMXrx9FKStoM3KXpNvkZ7pdMDQbi7ox+kEPH
Zikz8PXUp5maaDWnKfS8u64jdCN62OUFD0pP52ueQXO+H+aBiaXViwy0ifIh
HhS+7Tx1Di1tzOfBtV8VFC6hbT0P8CD3RZjINbTzlXAenNBc9awa7fPEjQfh
eVXpQ2j+SQMeGJU+kdr4HPdzcdUBWMfNrPiC3qf4PA761OR7019gf31ex4Ld
erE0y84JixTExIAlOVvQi/bPUd4PbdZtF8hL3B+SvH2whElTXdKF+ZwTHgGq
9d8nNaGbB7lhcOdwV1BcN66/nw+CYMw1zEHrFfb3ou9uaL1xXrQKbdT+lgvh
cY4rg3uwnkiedoTzbvldCr04v7Up+nA0/7BCJVpDvdmO1eJLTgvsw/XqJc1l
LUL0D8j14/ND/X6szqOmvWXojtd/hrLHV2u9cnuN42sS38tmL582eww9OO9M
NBt9Lq4jdwDzaNPvB9iXs0/L2bzB9RLJEDaduD+3RSd6pBLW+p22YDPaxz6T
sAVlVzf9hu4yKiMsf9vdJC66UWaYsEYnP0rvRecaecazsUpWEhfR5rqcBHZZ
lGxrNrrFxTGBHehuvJiHFiRzE1jH666cf9CzRGISWF2HUFKGHvlRlMA+Ss4Q
a0Jn71jAZ8lXj6bHwvYLTfjsqh16F9rQCr+s57NZiwosnqOjqj34bOTD+3Gv
0fZb/uKzBsuSN78Vjqc0j892nXGc+wFdqFPCZ238X7DD6DlirXx2UnNWylf0
tbAePltoutt9BM30D/FZvwuGRqPodDfRg6zG1M/j4+iBFvmD7P8BCKjwgg==

       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
       "]]}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1320., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"dN/dE [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5332142041626987`*^9, {3.533226752000778*^9, 3.533226764553049*^9}, 
   3.533227313766766*^9, {3.5333261213705387`*^9, 3.533326141708153*^9}, 
   3.5333283901839647`*^9, 3.5333334100325823`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "&"}], "/@", 
  "a1fits"}]], "Input",
 CellChangeTimes->{{3.533214341787274*^9, 3.5332143643355017`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", "393.3107345749685`", "15.154936360440267`", 
        "25.952648379418363`", "1.3884257363303989`*^-12"},
       {"a", "1331.7892085590213`", "0.09954730232117551`", 
        "13378.456045571069`", "8.589707917439899`*^-48"},
       {"b", "17.734272073057195`", "1.890190779072754`", "9.38226567889452`",
         "3.75091952138061`*^-7"},
       {"c", "1090.2705917194037`", "12.890590948217762`", 
        "84.57879053792668`", "3.2966567008799277`*^-19"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", 
        RowBox[{"-", "535.5860415401717`"}], "72.15954866572076`", 
        RowBox[{"-", "7.422247664287299`"}], "0.00014662570425031898`"},
       {"a", "1340.4456144218068`", "0.06124092482279128`", 
        "21888.06942907155`", "1.0972939335809457`*^-28"},
       {"b", "24.065426450827978`", "5.596162965274748`", 
        "4.300344110805655`", "0.0035650951106282734`"},
       {"c", "1488.037957321982`", "75.99366766307759`", 
        "19.581078306672683`", "2.2618796555509676`*^-7"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", "9.927299973514473`*^9", "800430.4864264549`", 
        "12402.451108321962`", "1.8546355761240865`*^-23"},
       {"a", "1347.0413104030083`", "0.145006099396421`", 
        "9289.549308684152`", "1.0503543243749058`*^-22"},
       {"b", "3.841511371477511`*^8", "4.1369145575767376`*^7", 
        "9.285933557515234`", "0.00008822628239652594`"},
       {"c", 
        RowBox[{"-", "9.92729853717946`*^9"}], "800408.0959609569`", 
        RowBox[{"-", "12402.796257652677`"}], "1.8543259290121652`*^-23"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", 
        RowBox[{"-", "2197.7722758079744`"}], "1695.3438784435505`", 
        RowBox[{"-", "1.2963578090279184`"}], "0.2359511580313436`"},
       {"a", "1357.0806762058303`", "0.06917582992470209`", 
        "19617.844522906526`", "2.361653391450917`*^-28"},
       {"b", "69.58881882054119`", "64.43449072352921`", 
        "1.0799933085391766`", "0.3159447556494238`"},
       {"c", "2242.3402543728635`", "1707.425112837152`", 
        "1.3132876150842523`", "0.23049431805520648`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", "1432.7471641566785`", "555.2390225099319`", 
        "2.5804151114595877`", "0.036450260652492995`"},
       {"a", "1367.5406939181123`", "0.04809197706600786`", 
        "28435.942486646298`", "1.75671698132933`*^-29"},
       {"b", "70.10349795295153`", "32.96019669756052`", 
        "2.1269138226392954`", "0.07099299411518917`"},
       {"c", 
        RowBox[{"-", "279.52720136423807`"}], "559.7262955001557`", 
        RowBox[{"-", "0.49939980238816617`"}], "0.6328088223040831`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", 
        RowBox[{"-", "1426.4327355832054`"}], "708.8699336395051`", 
        RowBox[{"-", "2.0122629947916733`"}], "0.1003560577306057`"},
       {"a", "1374.6603802124828`", "0.0753016556322255`", 
        "18255.380557983295`", "9.36158518790414`*^-21"},
       {"b", "77.22184041898731`", "45.76217357377533`", "1.687460065560356`",
         "0.15231943424439082`"},
       {"c", "2112.6481264691333`", "713.159181133075`", 
        "2.9623794832347743`", "0.03143237855349407`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", "2815.1437606428094`", "792.5579367526054`", 
        "3.551972203038512`", "0.016353239647576203`"},
       {"a", "1383.0528625797656`", "0.030619157637927576`", 
        "45169.52683461791`", "1.0094298738009231`*^-22"},
       {"b", "71.49173506953132`", "23.469984138662603`", 
        "3.0460921765925466`", "0.028551391139512283`"},
       {"c", 
        RowBox[{"-", "1357.2685592812527`"}], "796.6462355954191`", 
        RowBox[{"-", "1.7037280773275991`"}], "0.14915819641849357`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", 
        RowBox[{"-", "2118.7101319885487`"}], "387.0111496352851`", 
        RowBox[{"-", "5.474545459440114`"}], "0.005418031790247751`"},
       {"a", "1392.9290545189795`", "0.0432388383467702`", 
        "32214.76588588849`", "5.570976537392037`*^-18"},
       {"b", "46.27854587207172`", "11.049463348098204`", 
        "4.188307107243993`", "0.013825366394201448`"},
       {"c", "1894.0893106372646`", "391.70575026928293`", 
        "4.835490184494738`", "0.008427614064505217`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", "2.50957541940866`*^10", "239308.37170445544`", 
        "104867.8490240188`", "1.4965528576949631`*^-24"},
       {"a", "1398.4769248709538`", "0.12627197899324638`", 
        "11075.116870907288`", "1.1391010038986596`*^-19"},
       {"b", "3.4451463557301486`*^8", "3.486082647493865`*^7", 
        "9.882572228191016`", "0.0001809058005198334`"},
       {"c", 
        RowBox[{"-", "2.5095753505938095`*^10"}], "239261.24444311796`", 
        RowBox[{"-", "104888.50195671522`"}], "1.495080053937856`*^-24"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", 
        RowBox[{"-", "3771.2969140431123`"}], "226.74719236977697`", 
        RowBox[{"-", "16.632165869965526`"}], "5.9485890974831706`*^-12"},
       {"a", "1408.5908534050095`", "0.16815361847507387`", 
        "8376.809646911113`", "1.1138086219563204`*^-57"},
       {"b", "36.537320988818905`", "6.031118073654062`", 
        "6.0581339218719865`", "0.000012790454645167056`"},
       {"c", "588.6560061375226`", "231.12904393986392`", 
        "2.546871635443105`", "0.02084356710130933`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.533214364821364*^9, 3.533226772511106*^9, 3.533227316809923*^9, {
   3.533326121844314*^9, 3.533326141845283*^9}, 3.533328397653791*^9, 
   3.533333413500114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"(", 
       RowBox[{"a", "/.", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<BestFitParameters\>\"", "]"}], "&"}], "/@", 
          "a1fits"}], ")"}]}], ")"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", "\"\<ParameterErrors\>\"", "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "&"}], "/@", 
       "a1fits"}], ")"}]}], "}"}], "\[Transpose]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.533227345957979*^9, 3.53322736019963*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1331.7892085590213`", "0.09954730232117551`"},
    {"1340.4456144218068`", "0.06124092482279128`"},
    {"1347.0413104030083`", "0.145006099396421`"},
    {"1357.0806762058303`", "0.06917582992470209`"},
    {"1367.5406939181123`", "0.04809197706600786`"},
    {"1374.6603802124828`", "0.0753016556322255`"},
    {"1383.0528625797656`", "0.030619157637927576`"},
    {"1392.9290545189795`", "0.0432388383467702`"},
    {"1398.4769248709538`", "0.12627197899324638`"},
    {"1408.5908534050095`", "0.16815361847507387`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.533227361930799*^9, {3.533326121962837*^9, 3.533326141956469*^9}, 
   3.533328400385199*^9, 3.533333415853524*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"(", 
       RowBox[{"a", "/.", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<BestFitParameters\>\"", "]"}], "&"}], "/@", 
          "a1fits"}], ")"}]}], ")"}], ")"}], ",", "2"}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"1", ";;", "9", ";;", "2"}], "\[RightDoubleBracket]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{3.533334787114854*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"1336.117411490414`"},
     {"1352.0609933044193`"},
     {"1371.1005370652974`"},
     {"1387.9909585493724`"},
     {"1403.5338891379815`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5333347880527697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "/.", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<BestFitParameters\>\"", "]"}], "&"}], "/@",
            "a1fits"}], ")"}]}], ")"}], "-", "12.59"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", "\"\<ParameterErrors\>\"", "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "&"}], "/@", 
       "a1fits"}], ")"}]}], "}"}], "\[Transpose]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.533227345957979*^9, 3.53322736019963*^9}, {
  3.5333309545695333`*^9, 3.533330983606229*^9}, {3.533333679394952*^9, 
  3.533333728285192*^9}, {3.53333474449494*^9, 3.53333475756654*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1319.1992085590214`", "0.09954730232117551`"},
    {"1327.8556144218069`", "0.06124092482279128`"},
    {"1334.4513104030084`", "0.145006099396421`"},
    {"1344.4906762058304`", "0.06917582992470209`"},
    {"1354.9506939181124`", "0.04809197706600786`"},
    {"1362.0703802124829`", "0.0753016556322255`"},
    {"1370.4628625797657`", "0.030619157637927576`"},
    {"1380.3390545189795`", "0.0432388383467702`"},
    {"1385.8869248709539`", "0.12627197899324638`"},
    {"1396.0008534050096`", "0.16815361847507387`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.533330979603297*^9, 3.533330984236742*^9}, 
   3.533333417728078*^9, {3.533333713792439*^9, 3.5333337288653316`*^9}, {
   3.533334752870051*^9, 3.533334758408967*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "/.", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<BestFitParameters\>\"", "]"}], "&"}], "/@",
            "a1fits"}], ")"}]}], ")"}], "-", "12.59"}], ")"}], ",", "2"}], 
    "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"1", ";;", "9", ";;", "2"}], "\[RightDoubleBracket]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.5333335908616056`*^9, 3.533333612803117*^9}, 
   3.533333736672929*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"1323.5274114904141`"},
     {"1339.4709933044194`"},
     {"1358.5105370652977`"},
     {"1375.4009585493727`"},
     {"1390.9438891379818`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.5333335977723618`*^9, 3.533333621506604*^9}, 
   3.533333737926899*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"SpectrumIntegrate", "[", 
    RowBox[{"TakeRegion", "[", 
     RowBox[{
      RowBox[{
      "a1data", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
      "1320", ",", "1440"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Electron Energy E [eV]\>\"", ",", "\"\<N [arb. Units]\>\""}], 
     "}"}]}], ",", "niceStyle"}], "]"}]], "Input",
 CellChangeTimes->{{3.5333329610366373`*^9, 3.533332983386148*^9}, {
  3.533333161214076*^9, 3.5333331688595247`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxN039MVWUYB/AjXo0xlrRhuyMymLgBw2WN24iYPXMSzJwhcIqSDVfejT+s
qGDzB1u4ZSvKH+l5zxyVQfOiHIGLDja7w7gVGjhKMlS8GiCBIGDQBLsJejvw
/f7R3e7OPvu+z/ue877PG//mu7nuME3Tdtr/+efCr9oQ7f+/Y3TYF3ieMKTx
7Cu6Hl8D1xtSuPsby7pYBzchv/z8KbiZ9Qdb8DxjSFJ8gX5Z88GthuSua7Ks
o9/Dfji59Qe43ZCR3EJ9eXY73GFI+Vvhmj94Hu4y5LHSZmussxPuRi7Hu+Ae
Q/Lm59tzEe41JNlefybhN/gGvfsSPGDIgDNMi2v7HR6CK273wKMY79KuwBOG
lCY1WhuWXoWnkLfM0tOcb7QXDsL+69fgOa5/M8B9V6ifuw474LKUP+BwtbDe
hff64EjkM139cJSSkshFmvblABytREXVWzGbbsJOuPIuHQunVwzCcfCGSTpB
ycvhr+rqxT/hRNjzPp2C8WP76DVKfNGv6Z4qOhWeqaHTlPTb3y8WnaHE8WSD
VeWjRS30x3CAXq9k06rFWsmjQ3A283x6I+p9DXQO5vc7h+F8uPoQXYD6Jc5b
cCHm12rprUo+sPe36rkReJuSI6tf18t+oothd9YovB3jd/npEnr1bbgU4/fu
p3fA6hZdDs+8MAZXKDn7jMM+RvojJY+kv6Hr0/QnSlLWLtGmtozDnyN3ddMH
lQy6vJYvfwI2mI/TR1CvHb4Df4U886W/4GqOn6WPKdls35/7tZPwCSWJ9v49
eGoKrley2N7/b4voJiV99n5PHaCblXxnn3+Dlz6jpPbQIq26jW6F5Ufar+Sw
3U/P+uh2Je/Y/RyspzuUbKk8acXU0F2wVUV3K8me78+v6R4lro/ttmuke5Fn
/kLfQH3VPXqAefzf8JCSlY6TVvpaelTJw1AolCX0hJJrs/n6qhX0lJLzO0Oh
ZZ2cbxp5wzo6qOT0P3VWII37Oadk392HobZzPA/NXMgjMnleDtjq4PmHmxhf
xP6JhIti2H9RzB3s12jUJ69kfztNuWq/z3Ap70Ms8kCQ9ycO9d46OgE+sIdO
NKV4Mk9376JT4OHP6DWwOkWnwq5xOg3zhVK5fgbzT2kxZcXIg1D/EL3elH8H
c/XMLL5/tik9fcet+156oymVVzbr7lh+bw7sqaTz4eWzdIEp8uts6Om3uV+F
pjxxIUdv6ae3Il+Wx/3dhvq9P9PFpngDc6EPM3ge25GXnaZLTHFfqrUikngf
SzFf/1F6hyn3znmsiMd5vuVw5X66Au/jWXpH/gNxuXj8
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1320., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"N [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5333329839853992`*^9, 3.533333171190153*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bulk Plasmons", "Section",
 CellChangeTimes->{{3.533193302089733*^9, 3.533193305525608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"a2data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Electron Energy E [eV]\>\"", ",", "\"\<dN/dE [arb. Units]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Blue", ",", 
       RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}], ",", 
   "niceStyle"}], "]"}]], "Input",
 CellChangeTimes->{{3.533214602172369*^9, 3.5332146022549887`*^9}, {
  3.5332146495855827`*^9, 3.533214654677696*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
    PointBox[CompressedData["
1:eJxd1m1sk1UUB/DGTFPJTBplZhpMimHaLXyoBpJlMXg1KnU61708o7yMlEFn
GcMV3Eh1DCoObUbb51YHlomhwMTtEWajTia+pBpIypBkMRYWY7QxaOqicR8E
F/GDbP//+SIJufntnHvvOWfP03VpW1dj4BabzXbh5v/5deGfM6bufrffbxiV
2QW7YgoBO+wWO7FWx9SBxsczlvUwrMSrYE9MfXb5x/cs6ynYS1fVw76Yat32
Z5ORb4L9MXVi0HHKstbAQd4XWYc1xPyD6+GwxOkI988wPyr5a2Et+Tw/xfyO
ZjjNeLYB60hMPVm51Gfk6+CM1F8LT0h/Hu5jvsF4Tu57DuuU1NMIT/P+KtZT
kPwNWItSjx/rbEw11NpbjLIt8FxMfTD+96hVG4BtcXiGcXucP6cdcewfb4PL
JZ/nO+Oor2wj7OJ+mb+bzrLe6jjn1wIr2e+DPXSevx8v77/G+3w8z8/6/RLf
CgdZX8cLcCiuKitK3resHXA4rq58f6PZGN/JOulbX4SjzH+Zcc37vNyf4vlV
XXCanuyAR2irHc5IvZuxTsg8N3EuMh86Rzs5/ymZdxCelvvYX4H11rD+otQf
hmfZX08vPEf/0gfbErxnD1Z7gvtph8R3Yy1nfOYl1sm43oXVlcD5ZazHzXgo
hLU6gf7z22HFuGI/Hu4PcN5eOt8D++iVrMfP/alXsAbp8v28N6EG79xnGPdF
4TBdNgBHmF+kownV+UefZf3MfE3XvMZ7uL/iVTjNes7vhUd4no3zycj8OI8J
6Zf9ZelZOkenOc8pznuSv49p3n++Hy4wP8j6iwn1yfVVhvGY5rl035vwHH3H
IOs0scYYt9Olb2B1mLivTuZqYh5Vr8NOk+8P63Nxv43vh9vk+8zPr2pTjbnm
G/rnUczB5OfhasQ9Jp7vRZ2wl+c5Ilh9vP/+A7DfRD8V7Cdoqtrbv7KsocNw
iPHf3oHDplr4c/VgGo7w/AfoKO1hvuZ5696CU/RtnG/6f/WNSP81WDOcz7Xu
7IInGFcROEvrPXDOxPvRsx2ekny+L9Ps/1v2X2DcO4S1SP96HOss+20dhecY
T1msU6v1vUct6yrjJRr5F0/CdvY5dgxrqeZ8D7Jvjefz3m54scbzEoii/nLu
f+QovITnXxqGnbz/+Al4GfNDb8MucT+8nNbs383914fhFVqd/qLeMC5n4Gr6
0Djr4H7XGc6VvovxJ1jfjTHYw7iDz9ez7P8s+/Ey3joBN9+cx/yf87Nfwz7G
H7oAb4AjRy7Cfsadl+AtWl2Z/7qwgg4yfob5nTg/352DQ7zv0Dm4m+f3Z+Ew
+5/8FN5N//QRHOH8vjwN99PqJBzlPO45BsfYf/sQrDXer9FBeJDeoeGUxvP6
4QB8hP3k9sNpxmv2wcOaf6/2wiN8vgZ64VPyPIThDG3bBX/M/EXyvvG8wE74
c+YXQnCW9nfB5zS/L/H9y9Ert8Hf0D1b4Sk573n4O4m3w9Oan2cB+Ad6cjNc
YP7BNviq7N8EF8V++HfN76sb4Vm6qhX+S8v3XXhO8tfC/9KWD7YlUX9kDVyS
xH6jBbZL3IBLxc2wg842wYuT8nkPlyd5fwO8ROyFnUl+X66Hl4nrYJfc9wy8
PMnv00/DbuYbq7P/AU3oXsA=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{900., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"dN/dE [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5332146256302*^9, 3.5332146553178797`*^9}, {
  3.533326122196306*^9, 3.533326142145947*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"SpectrumIntegrate", "[", 
    RowBox[{"a2data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Electron Energy E [eV]\>\"", ",", "\"\<N [arb. Units]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Blue", ",", 
       RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}], ",", 
   "niceStyle"}], "]"}]], "Input",
 CellChangeTimes->{{3.5332147130086412`*^9, 3.533214736272417*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
    PointBox[CompressedData["
1:eJxN1gtMU1cYB/D6mBJ0pkaZxDmpiyYdca4u1rDFxydORXysEO7CRIExXRia
jKlM5otuOkVse08nKCpKVZB6o7MYcOgcVIeK+Fh1VhGd4oZaEbWKKFG3u9L/
Z7Im5OSX73G+e85Ny5C0r+LnddVoNKcCf51r8KOzkOb/H72F3ihdnSpJEe6g
Da8cBke9ytdhJQtNfmdIoiQRHGOhXfnavYoSB5s4X5eCNdFCP1U+26NkpMOp
Frrc+CJBKv0aTrfQgvsrFKVlCZxpoYbO+L6VcLaF3m4+oqonv4fNnD9iDZzL
/mYdLDh/Lc9RyPHJMuywUNKyYkW5KGAn5zXasbrYh3/EWmWhg0/HSdIPG2A3
Oy4fruN+owpgD8cnboQb2PZNcBPnj9gM+9iDt8J+3n/BNqwd7C4Ovgcr8uN3
wCFWCvngoapu3glrrTSrM/77Ljic3VrC92Klys55WkthvZXSKmyKcm43bGBv
KoOjON/khIkdugeOsZJ24XVVvcI2sT0KnMj9uu2FU61U0Vm/ch+czp6wH87k
ectccDa7vhw2W6ln4HlzOg7AueyhFbCwkmHWFMkbXQkXIq5OPQg7sJ935M+w
00qfdc73jO2yUtSG0ZK3uAquQjxy1CHYbaU8721VPcqug3M+PQx7uN/rv8AN
VuoTOI+cVnYTu8uvsI/7p1TDfq7/twbuwPw1zW5YY6OF+olSweWjcIgN8TPH
YK2NiqZuVVoO/QaH22hk53nk18I6G53IaFNrPjkO6xGX/mEbUJ+x/gQcxfUh
J2FCvWpmxyAe1q0ONtnwPhazE210Y8AmJTL9FJxqo9ie99SaefVwOjx+62k4
E/kt3c/C2eiXs/EcbLbRuZIZkjHCA+faaHXRMzXlAVvY6OH6aZJXOQ8XwpLp
AuyAs66xnTYqXdWuqjP+gF1wcRm7Cq55xHbDEVEX4Tp4/Dq2B/3DnrAbMF/N
ai/chPmzJlyCfYhHvHsZ9nP9tAa4wxZ8/zPWXoE1MmkXTZWMtY1wCNzuvwpr
5WB+3vNrcDic4fkT1sl0PHB/EV9eh/UyLUvbpkTWsg1y8D4LWtlRsPEpm2Dp
JTtGDr4vsYNvwCaZ4idMkgqWshPl4PPt79cEp8r0Yf4OJW8LO50ddxPOhLe8
9xecDS/V/w2bZUopnC7dimyGc2HjkFuwwH41bexCOXjek+y3YYdMbc4ONecR
2wmP73cHdskUvm+X0qJyvEqmseUzpax6thuet55dh/yByWwP+qlz2A28fwm7
SaY9jp1K5CTezwdvmeSD/civLLsLd6BfypR7sEag371WuDt8PPMBHCKC+XLF
Q7i3IMulOMk43Q9rBZU3vlSXfMfuD0csYocL2p5YpkQPYg8SNCDwfJFh3E8H
K+fvw0MFjQmch/cEz6OHjQb2cDhrHNuA+ti3uH6UoLOB+edd4PmjBE0490Ld
VMT7jxE0YvpuJa/rY5jgtLlt8EfIv5P7BI4RlGCKk9qHt8PTES8OY5tQH92P
8xMEvVlvkiqHcv9EQX3FU1U9zfPMhj9+n+8nFa4ZyO/rXEELAt/HWQ7+fkgX
1HBsrqJs5N+fBYJMyW1KZEG1O+hMQXpfuhTmuwAvFrTQX63Uj7gGZwvqv7hC
2VJ7E14uqH5+smQsbobNgsyfh2h0p2/DqwWNTjqgDJzvg3PhltK7sAX5psIW
WMAi4R6cj/znPnahoNb42dKw1Fa4SNDJmeXKwKNsh6CdsT00ur734RJBidEu
JVRiO9mCvVfQislJ0mu1bBec9ZhdgX7mQQ/gKtgfzT6CfOMXbDd8fA27Fvma
UnYdz3+UfQbPt/Qq2yMoKWWONOwJ+yKfT6+HcAOsHcK+xvVGdhOsxLCbke+a
xfbhvkrns1v5Ppex/YKSl4dqHHnsJ7CnkN0BG3azXwpyBv4d9x5ga+x0NreX
pqma3d0ejEv17BA7rTJXKrFedm+4/gZbCzfeZfe3B/czt7HDYddL9iA7JQTu
80BXP6yz07eB8z/bgz3UTtsD5+8MZevtVH4mSRrbhz0c8dy+bAMs+vvd/wGA
oEeJ
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{900., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"N [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5332173299144173`*^9, {3.533326122246636*^9, 3.533326142251657*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a2intervals", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"990", ",", "1000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1005", ",", "1018"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1022", ",", "1032"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1037", ",", "1045"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5332082808405*^9, 3.533208358129423*^9}, {
  3.5332131873591337`*^9, 3.533213187442152*^9}, {3.5332132362965527`*^9, 
  3.5332133238387413`*^9}, {3.533213355097352*^9, 3.533213486666301*^9}, {
  3.533213933651269*^9, 3.533213933701654*^9}, {3.5332139741307173`*^9, 
  3.5332139747736053`*^9}, {3.533214162976688*^9, 3.533214164029524*^9}, {
  3.5332170010960217`*^9, 3.533217001179777*^9}, {3.53321715324415*^9, 
  3.5332172493498774`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a2fits", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"GaussPeakFit", "[", 
     RowBox[{
      RowBox[{"SpectrumIntegrate", "[", 
       RowBox[{
       "a2data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "]"}], ",", "#"}], "]"}], "&"}], "/@", "a2intervals"}]}]], "Input",
 CellChangeTimes->{{3.533205528616378*^9, 3.533205601252293*^9}, {
  3.5332058966186743`*^9, 3.533205902106702*^9}, {3.533207159203122*^9, 
  3.533207163445445*^9}, {3.5332082514547167`*^9, 3.53320828956441*^9}, {
  3.5332133401089354`*^9, 3.533213344300153*^9}, {3.533217004137648*^9, 
  3.533217035579341*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "2211.6435285337807`"}], "+", 
       RowBox[{"34023.17445458019`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.0030728944815702807`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "18", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "38840.93401429129`"}], "+", 
       RowBox[{"86144.11303476538`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.0018103065670692445`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "18", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{"39206.044155305266`", "\[VeryThinSpace]", "+", 
       RowBox[{"28409.927288020524`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.019226030045152453`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}], ",", 
   RowBox[{"FittedModel", "[", 
    PanelBox[
     TagBox[
      RowBox[{"57906.561532724205`", "\[VeryThinSpace]", "+", 
       RowBox[{"29156.449283109316`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.06361816660442782`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[LeftSkeleton]", "18", "\[RightSkeleton]"}]}], "+", 
             "x"}], ")"}], "2"]}]]}]}],
      Short],
     FrameMargins->5], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5332172557191057`*^9, {3.53332612229674*^9, 3.5333261423763113`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a2plotthis", "=", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"a2intervals", "\[Transpose]"}], ",", "a2fits"}], "]"}], 
    "\[Transpose]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.533214099485578*^9, 3.533214126462866*^9}, {
  3.533217006426523*^9, 3.533217039601451*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"SpectrumIntegrate", "[", 
      RowBox[{
      "a2data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
      ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy E [eV]\>\"", ",", 
        "\"\<dN/dE an N [arb. Units]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}], ",", 
     "niceStyle"}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"a2data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
      ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Thick", ",", "Green", ",", 
         RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
          "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], "&"}], "/@", 
      "a2plotthis"}], ")"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.533205606620244*^9, 3.5332056235490294`*^9}, {
   3.533205673745167*^9, 3.5332057075591908`*^9}, {3.533205954209856*^9, 
   3.5332059575606403`*^9}, {3.5332072386805887`*^9, 3.533207253267332*^9}, {
   3.533207537098768*^9, 3.533207542628063*^9}, 3.533213871027141*^9, {
   3.533217060931135*^9, 3.533217065681244*^9}, {3.5332174785580873`*^9, 
   3.5332174923373957`*^9}, {3.533217536288383*^9, 3.53321754203374*^9}, {
   3.533217628238968*^9, 3.5332176404819098`*^9}, {3.533227111098765*^9, 
   3.533227150651381*^9}, {3.533227240133547*^9, 3.533227241945755*^9}, {
   3.5332277125428543`*^9, 3.533227713179571*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
     PointBox[CompressedData["
1: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
oEeJ
      "]]}, {}}, {{}, 
    {RGBColor[0, 1, 0], PointSize[Medium], Thickness[Large], 
     PointBox[CompressedData["
1:eJxd1m1sk1UUB/DGTFPJTBplZhpMimHaLXyoBpJlMXg1KnU61708o7yMlEFn
GcMV3Eh1DCoObUbb51YHlomhwMTtEWajTia+pBpIypBkMRYWY7QxaOqicR8E
F/GDbP//+SIJufntnHvvOWfP03VpW1dj4BabzXbh5v/5deGfM6bufrffbxiV
2QW7YgoBO+wWO7FWx9SBxsczlvUwrMSrYE9MfXb5x/cs6ynYS1fVw76Yat32
Z5ORb4L9MXVi0HHKstbAQd4XWYc1xPyD6+GwxOkI988wPyr5a2Et+Tw/xfyO
ZjjNeLYB60hMPVm51Gfk6+CM1F8LT0h/Hu5jvsF4Tu57DuuU1NMIT/P+KtZT
kPwNWItSjx/rbEw11NpbjLIt8FxMfTD+96hVG4BtcXiGcXucP6cdcewfb4PL
JZ/nO+Oor2wj7OJ+mb+bzrLe6jjn1wIr2e+DPXSevx8v77/G+3w8z8/6/RLf
CgdZX8cLcCiuKitK3resHXA4rq58f6PZGN/JOulbX4SjzH+Zcc37vNyf4vlV
XXCanuyAR2irHc5IvZuxTsg8N3EuMh86Rzs5/ymZdxCelvvYX4H11rD+otQf
hmfZX08vPEf/0gfbErxnD1Z7gvtph8R3Yy1nfOYl1sm43oXVlcD5ZazHzXgo
hLU6gf7z22HFuGI/Hu4PcN5eOt8D++iVrMfP/alXsAbp8v28N6EG79xnGPdF
4TBdNgBHmF+kownV+UefZf3MfE3XvMZ7uL/iVTjNes7vhUd4no3zycj8OI8J
6Zf9ZelZOkenOc8pznuSv49p3n++Hy4wP8j6iwn1yfVVhvGY5rl035vwHH3H
IOs0scYYt9Olb2B1mLivTuZqYh5Vr8NOk+8P63Nxv43vh9vk+8zPr2pTjbnm
G/rnUczB5OfhasQ9Jp7vRZ2wl+c5Ilh9vP/+A7DfRD8V7Cdoqtrbv7KsocNw
iPHf3oHDplr4c/VgGo7w/AfoKO1hvuZ5696CU/RtnG/6f/WNSP81WDOcz7Xu
7IInGFcROEvrPXDOxPvRsx2ekny+L9Ps/1v2X2DcO4S1SP96HOss+20dhecY
T1msU6v1vUct6yrjJRr5F0/CdvY5dgxrqeZ8D7Jvjefz3m54scbzEoii/nLu
f+QovITnXxqGnbz/+Al4GfNDb8MucT+8nNbs383914fhFVqd/qLeMC5n4Gr6
0Djr4H7XGc6VvovxJ1jfjTHYw7iDz9ez7P8s+/Ey3joBN9+cx/yf87Nfwz7G
H7oAb4AjRy7Cfsadl+AtWl2Z/7qwgg4yfob5nTg/352DQ7zv0Dm4m+f3Z+Ew
+5/8FN5N//QRHOH8vjwN99PqJBzlPO45BsfYf/sQrDXer9FBeJDeoeGUxvP6
4QB8hP3k9sNpxmv2wcOaf6/2wiN8vgZ64VPyPIThDG3bBX/M/EXyvvG8wE74
c+YXQnCW9nfB5zS/L/H9y9Ert8Hf0D1b4Sk573n4O4m3w9Oan2cB+Ad6cjNc
YP7BNviq7N8EF8V++HfN76sb4Vm6qhX+S8v3XXhO8tfC/9KWD7YlUX9kDVyS
xH6jBbZL3IBLxc2wg842wYuT8nkPlyd5fwO8ROyFnUl+X66Hl4nrYJfc9wy8
PMnv00/DbuYbq7P/AU3oXsA=
      "]]}, {}}, {{{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
xiKfkvsWFuCQeM/Uf+H/A6uFx/8=
       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
np2Fo3jDNlT9HSL/BymsYtQ=
       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
wPe7SmUe1TPJ/wFbx93j
       "]]}}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
Obd1l9FBBvk/tIGZTA==
       "]]}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{900., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"dN/dE an N [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.533217279942585*^9, 3.5332174938772078`*^9, 3.533217543848302*^9, {
   3.533217637342496*^9, 3.5332176438393297`*^9}, {3.533227131179408*^9, 
   3.533227152948646*^9}, 3.533227243555039*^9, 3.53322771462654*^9, {
   3.533326123221712*^9, 3.533326143269741*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "&"}], "/@", 
  "a2fits"}]], "Input",
 CellChangeTimes->{{3.533214341787274*^9, 3.5332143643355017`*^9}, {
  3.5332170721022787`*^9, 3.533217072187626*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", "34023.17445458019`", "16241.07616000734`", 
        "2.0948842379275447`", "0.07443131142443811`"},
       {"a", "998.6553664715356`", "0.16713082120603429`", 
        "5975.291446934379`", "9.710940326708412`*^-25"},
       {"b", "325.4260782456122`", "181.68451823895037`", 
        "1.7911602012099554`", "0.11638005612510698`"},
       {"c", 
        RowBox[{"-", "2211.6435285337807`"}], "16253.551028733922`", 
        RowBox[{"-", "0.1360714052347032`"}], "0.8955953907911921`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", "86144.11303476538`", "138868.96828753655`", 
        "0.6203265862564689`", "0.5489177496098354`"},
       {"a", "1014.170227858326`", "0.19143893110251228`", 
        "5297.617480507427`", "1.4134938081760678`*^-33"},
       {"b", "552.3926268570785`", "960.3843541641997`", 
        "0.5751787026328776`", "0.5778817418228437`"},
       {"c", 
        RowBox[{"-", "38840.93401429129`"}], "138998.4770078808`", 
        RowBox[{"-", "0.27943424165783576`"}], "0.7856058531591303`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", "28409.927288020524`", "1028.3982796174396`", 
        "27.625413082749336`", "2.090624226943167`*^-8"},
       {"a", "1028.2679725230494`", "0.012238842347986159`", 
        "84016.76754111028`", "8.937445789070063`*^-33"},
       {"b", "52.01281791672507`", "2.623645181254882`", "19.82463874625283`",
         "2.0772113415772584`*^-7"},
       {"c", "39206.044155305266`", "1050.679628785646`", "37.3149369999862`",
         "2.581192188139772`*^-9"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A", "29156.449283109316`", "2179.9351483406526`", 
        "13.374915903027183`", "0.000041800617371427695`"},
       {"a", "1042.152929360797`", "0.057976403032566036`", 
        "17975.467170245236`", "1.0113533473940382`*^-20"},
       {"b", "15.718780552383919`", "2.386575700086606`", 
        "6.586332271720316`", "0.001211678745464657`"},
       {"c", "57906.561532724205`", "2337.296794446954`", "24.7750143115333`",
         "1.9984033424754072`*^-6"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.533217257003007*^9, {3.533326123381991*^9, 3.5333261433884277`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plasmonpos", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "/.", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", "\"\<BestFitParameters\>\"", "]"}], "&"}], "/@",
              "a2fits"}], ")"}]}], ")"}], ",", "4"}], "]"}]}], "}"}], 
     "\[Transpose]"}], ",", 
    RowBox[{
     RowBox[{"m", "*", "x"}], "+", "n"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}], ",", "x", ",", "\[IndentingNewLine]", 
    RowBox[{"Weights", "\[Rule]", 
     RowBox[{"Take", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<ParameterErrors\>\"", "]"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "&"}], "/@",
           "a2fits"}], ")"}], 
        RowBox[{"-", "2"}]], ",", "4"}], "]"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"1", "&"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5332180332121353`*^9, 3.5332181151620617`*^9}, {
  3.533226364359503*^9, 3.5332264453951693`*^9}, {3.533226497888481*^9, 
  3.5332265050146*^9}}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    RowBox[{"985.6875335091542`", "\[VeryThinSpace]", "+", 
     RowBox[{"14.187235503997114`", " ", "x"}]}],
    Short],
   FrameMargins->5], "]"}]], "Output",
 CellChangeTimes->{
  3.5332180886097803`*^9, {3.5332264246896143`*^9, 3.5332264461705303`*^9}, 
   3.53322650572563*^9, {3.533326123537115*^9, 3.533326143483652*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plasmonpos", "[", "\"\<ParameterTable\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.533218198264112*^9, 3.533218209193964*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"m", "14.187235503997114`", "0.046504683890290645`", 
      "305.07110934172283`", "0.000010744614489355264`"},
     {"n", "985.6875335091542`", "0.14133038912372028`", "6974.349533887475`",
       "2.055855419236252`*^-8"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.533218210946278*^9, 3.5332264522591953`*^9, 3.533226508445208*^9, {
   3.5333261236237593`*^9, 3.5333261435714607`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"a", "/.", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<BestFitParameters\>\"", "]"}], "&"}], "/@", 
          "a2fits"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<ParameterErrors\>\"", "]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "&"}], "/@",
         "a2fits"}]}], "}"}], "\[Transpose]"}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Normal", "[", "plasmonpos", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.5", ",", "4.5"}], "}"}]}], "]"}], ",", 
   "niceStyle"}], "]"}]], "Input",
 CellChangeTimes->{{3.533218129843507*^9, 3.533218185748207*^9}, {
  3.533226456365562*^9, 3.533226463240851*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{1., 998.6553664715356}, {2., 1014.170227858326}, {3., 
      1028.2679725230494`}, {4., 
      1042.152929360797}}], {{
       LineBox[{{1., 998.8224972927416}, {1., 998.4882356503296}}], 
       LineBox[{
        Offset[{1.5, 0}, {1., 998.8224972927416}], 
         Offset[{-1.5, 0}, {1., 998.8224972927416}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1., 998.4882356503296}], 
         Offset[{-1.5, 0}, {1., 998.4882356503296}]}]}, {
       LineBox[{{2., 1014.3616667894286`}, {2., 1013.9787889272235`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2., 1014.3616667894286`}], 
         Offset[{-1.5, 0}, {2., 1014.3616667894286`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2., 1013.9787889272235`}], 
         Offset[{-1.5, 0}, {2., 1013.9787889272235`}]}]}, {
       LineBox[{{3., 1028.2802113653975`}, {3., 1028.2557336807013`}}], 
       LineBox[{
        Offset[{1.5, 0}, {3., 1028.2802113653975`}], 
         Offset[{-1.5, 0}, {3., 1028.2802113653975`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3., 1028.2557336807013`}], 
         Offset[{-1.5, 0}, {3., 1028.2557336807013`}]}]}, {
       LineBox[{{4., 1042.2109057638297`}, {4., 1042.0949529577645`}}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 1042.2109057638297`}], 
         Offset[{-1.5, 0}, {4., 1042.2109057638297`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 1042.0949529577645`}], 
         Offset[{-1.5, 0}, {4., 1042.0949529577645`}]}]}}}, {}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0Hs01GkYB/ARmYvbvJNSbSk1s0s2WdGNep9mt5vKalqRwxyXXMqeUJSu
g1Jah/fVRUKaXSLlNKzL6hSlstWsQiqkJuwkSUaqn+uyP3885z2fc77n+5zn
tQoIlwVN4nA4m9mZeHPjGm05nDZ8uO9FLTYkMM+kQmcsaMOTHfojA1kr07NK
Zpi34ZS9JhYnWWeqgpwXW7fh35kf/Z+wPv16wDXYvQ3XjBZ99eESUCyftatW
2YZN+UmWB3kEvD/tuJK+uh0rrXBEqYCA0J8R/3CsA9fI8qfYmBHYtq3L9rDL
W+zuwqx8Op3APcXcptQH7/Auk9pjTVZsv/X+L+1ruvHPI5IjqgUEnN9lzdk0
3INjIsa2r3MkYPSSp4uN1eFFj31lzisn9ll1hlh+wjbFzna6tQT8y54kf7+v
H/cWX6yMdidw6Ez2yRfln7E040So13YC8aMeicmir7iF38sMBxDIUti32ngy
eNzvlXIojECodGZI4LkB3PfMbUwdRcCKfhgq6B3E4nqMfY4S+DjwRvPcfhh3
/vlX5oaTBPK6b6pNU0Zwz6zrrQxl752dr9NqR3FljnXdvgwCKTvLgpXiMTxb
tEAjyyEwCNe0oYpxfJt7tb63kL1vRoB3kj8HPmmLNJ1lBCI8O2q6hHoQvGFJ
ffZtAkeduh+bV+rBZTWOtnlEIE2pryjxnQR7F9c7CZ8SEDfQkmYjfUiY/6al
vJXArZRFqRHX9UEyEnXhhpbAwh4Po6bNBkB1KcbkIwFzsz7e/WEDwGHfBYoH
CEy+namanzUZVoXkdAs4FH51vNnC32gIR332nPvXgELhhgBlFWMIYj/9jMt8
CsyHmcLONC6kNnkWTjWlUL51nf7Zn3hw6XRY0VsRhdj1CZdKO3kQXS29G2hB
Yd5r1+acBD4UjbUu/OcbCs5Lj5+d4SCAZIVj0um5FHwt64b0GgXgEOXOcCVs
vzq5IyLOCGIKbbe+tqFwwUAeJRMbQ4KXutLPjoK5puyPSfeNYVBkG//YgYLh
kbhflkeagDHauCxjKQW9ArmqQ2QKXfF2o+YuFPZmqJJFd00haFlDsQ4oVNkm
8tBuM1g/6lRdsoYCX7J82mquEPoXyzUSVwq907reu8iFsEq15uOAGwWvujmi
PSohbMnu48dspaDyzEw0HReCOtM3tt2TQvXdetjtgUD76lTXVR82/yVlMzcP
QU3qAfk8fwp/P5Hah+cjsEta7b6EtWMBI2q6giDtOF/qytpMLm/Ou4YgZP8F
yZ6J/IOFgWuLEfB9b/RUs3bKrI1JuIVgk/XQQf8ACiKpIFe/EUFjVcx5ZSD7
37OqToQ9Q+BSAadKWfcykTsbnyPILeYdesj60bUWu5xmBNG56fK+ifzUghtS
DQKL3yoksIOCrmtdXdx7BN4egyVvWPvcGyl+343gntudy59Zqy+qzm7pQWC7
PvE8N4hCnszC20qHYHTF9EOLWMtvdWrvfEGQPXeZVMG6Ni3jgTWDwHAmx/EM
6xWRblfpAILwKQ8l+aynflse7jeMAAy9+HWs4zm7ZA9HEFwZnzPSwbrv5Wwn
+/8QoKF3PcxEf1mDRfoYggP9Ko0gmO0nCcPj4wjaP+yvt2T9P8BdOuY=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1., 998.},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{{1., 4.}, {998., 1042.152929360797}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.533218186556211*^9, {3.533226457110669*^9, 3.533226463699486*^9}, 
   3.533226510319502*^9, {3.533326123802867*^9, 3.533326143682144*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Surface Plasmons", "Section",
 CellChangeTimes->{{3.533193309863377*^9, 3.533193311587933*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"a3data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Electron Energy E [eV]\>\"", ",", 
      "\"\<dN/dE and N [arb. Units]\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Blue", ",", 
       RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}], ",", 
   "niceStyle"}], "]"}]], "Input",
 CellChangeTimes->{{3.533214602172369*^9, 3.5332146022549887`*^9}, {
  3.5332146495855827`*^9, 3.533214654677696*^9}, {3.53321737581045*^9, 
  3.533217393080277*^9}, {3.5332175688814363`*^9, 3.533217611775118*^9}, {
  3.5332176504186363`*^9, 3.5332176544298563`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
    PointBox[CompressedData["
1:eJxd0k9q1DEYxvHgGTxAhOJCiqhV/IcYURSFQpUKaq3Gmc5otVpdudNsXLmx
KLr9HcA7mGO4zBF6BJV8HyHPwPDy+b1v8iQzv2Oz/XuLIyGEH3+//2r/PEy9
rvSa5OO9FutX64dHo5O5mKs5bFn+1tgv5moOjy3fXMxVPkHdpq6yXj7JenOV
T1GfjE7yadabqzk8tfWy8s3VHPLoKGs/czYX+Uyvk7xGnnyu1yafpz6jXiRf
vkS+9bPM+iKz/ySfJV/mfM0cZqOjzPmTzP5ZvkC+fJl8+Rr58g3y5VvUOfUO
+bjcJn8+zmeZ/YusfFn3l3lfmqz3b2d03Bnnk8x+Wdb9Zc4z4XKTfPXXycf1
Ac8X1Bn5i/EeSX3e+yxvkiMrX+b3qDL3a3KovSzJ2eyOOM+701Ln6s5L3bO7
4DbrnuTcXXG4y3Pt95Hnz6kHPMdvv3Iu3Arnwhufyccr38nHP7+Rj78cdDf8
m/XhBTmfuiNuH7oTDu+7M954R77W75Kv+W3y5fvky+vk73aX6+TjcIV8eY18
eZV8OZIvHyVf5v9u8uGvXl+qzzbmJB9e7fnmYp7M1dzM4ZXyeo3mZM6y8q0/
mavNN+uHPcvfG+eTOdt8sf5k/Wr9Zg6vR0dZ97d+tn4xTzZfzc3mw5vR0Zxk
5Vu/mCdzNTdz2B/3j+a0/3/+DzPVETs=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{100., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"dN/dE and N [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.533223204214346*^9, {3.5333261238343973`*^9, 3.533326143757956*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"SpectrumIntegrate", "[", 
    RowBox[{"a3data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Electron Energy E [eV]\>\"", ",", "\"\<N [arb. Units]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Blue", ",", 
       RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}], ",", 
   "niceStyle"}], "]"}]], "Input",
 CellChangeTimes->{{3.5332147130086412`*^9, 3.533214736272417*^9}, {
  3.5332173784224033`*^9, 3.533217395735908*^9}, {3.533225331842805*^9, 
  3.533225332729267*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
    PointBox[CompressedData["
1:eJxd1c1LFHEcx/HBQywSYSXhQWgEAymRIoQgsOkREQORjTarbZpaH9a1XXq0
qJiey0isLKO0BgmfMqhOneR36A/YY3WaS+Ghg4GIEUTF7/2BbEF+vMb5/t47
y+xOVZBvzZQ4jjP05+/val8HPOfflyevs2so19vV4HAbx9vs6u1mxaaJ87Db
wnEctzJ/kPP2MY/dFMdxrH1xdJj5Q3bd6DOPB44yj+cC5nHhOPPs47Yzj+c6
mMfFLuax6WY+jXuYx8U883ixwHk4cZL5I3YtO8U8TpxmHi9ig2fPMM91fzzL
deDiOfaTe+3qy+fZH8cX7BrhxEV6uPES5+GJy/T5nMtD+jjGHp6+Qh/nrtLH
ldfoY4MNTl1nXzyLncCuvTfo4+U36eNp7GP/Fn1ce5s+du/Qx4199HF0l/4x
u9bcYw5/6KePqwfo6v84xA332RcPY4O/4li9B/S5jzuxi6ewh+exj5sf0scG
Rzg9yHFc+4g+bn9MP8N+T+jjsaf0cXGYPvaf08e7XtDHM9jg0og+rsAO39s+
ztf3+N0Ifbz+GV3cz/sN8RquJ8Kf+TwMTuIYmyH6/E6sGqWP617Rx6vf0se5
N/Txl3H6OODzM7hM3z88Hxrb7+S8QWsXfxux9nBy1NrHn15ah/j9mHWEF8at
DZ6ZsI5x8yR9fhdfYxd/xx6umqKPd+AQp3CEM9jgHI5xHjtZ6wJ2/7OXXXq+
j3vUx93q4y71cYf62aXvz+E5EKiP0+rjNvXxfvVxUn3coj7eqz5uUj9nvUd9
vFN9vF193KA+3qo+3qI+rlcfb1af594m9XGd+niD+rhGfVytPtb9oufqWvVx
pfonrCvUx+Xq45Xq4xXq41L18TL1cYn6+Jfuf57zP3X/4x+6//HCpPkNRpp9
wQ==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{100., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"N [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5332253333506613`*^9, {3.533326123877262*^9, 3.533326143796047*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a3intervals", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"182", ",", "190"}], "}"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5332082808405*^9, 3.533208358129423*^9}, {
   3.5332131873591337`*^9, 3.533213187442152*^9}, {3.5332132362965527`*^9, 
   3.5332133238387413`*^9}, {3.533213355097352*^9, 3.533213486666301*^9}, {
   3.533213933651269*^9, 3.533213933701654*^9}, {3.5332139741307173`*^9, 
   3.5332139747736053`*^9}, {3.533214162976688*^9, 3.533214164029524*^9}, {
   3.5332170010960217`*^9, 3.533217001179777*^9}, {3.53321715324415*^9, 
   3.5332172493498774`*^9}, {3.533221727454339*^9, 3.533221733719769*^9}, {
   3.53322180604967*^9, 3.5332218152798233`*^9}, {3.53322269906284*^9, 
   3.533222726931099*^9}, {3.533222847703911*^9, 3.533222874361498*^9}, {
   3.5332230499915752`*^9, 3.533223069113902*^9}, {3.5332231289847403`*^9, 
   3.5332231350790586`*^9}, 3.533223166256991*^9, 3.533225543179721*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a3fits", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"GaussPeakFit", "[", 
     RowBox[{
      RowBox[{"SpectrumIntegrate", "[", 
       RowBox[{
       "a3data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "]"}], ",", "#"}], "]"}], "&"}], "/@", "a3intervals"}]}]], "Input",
 CellChangeTimes->{{3.533205528616378*^9, 3.533205601252293*^9}, {
  3.5332058966186743`*^9, 3.533205902106702*^9}, {3.533207159203122*^9, 
  3.533207163445445*^9}, {3.5332082514547167`*^9, 3.53320828956441*^9}, {
  3.5332133401089354`*^9, 3.533213344300153*^9}, {3.533217004137648*^9, 
  3.533217035579341*^9}, {3.533221754018325*^9, 3.533221763394269*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FittedModel", "[", 
   PanelBox[
    TagBox[
     RowBox[{"678.3283129833704`", "\[VeryThinSpace]", "+", 
      RowBox[{"3782.9605082815524`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "0.1676702873823448`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
            "x"}], ")"}], "2"]}]]}]}],
     Short],
    FrameMargins->5], "]"}], "}"}]], "Output",
 CellChangeTimes->{
  3.533222730275914*^9, {3.5332228554654217`*^9, 3.533222877865937*^9}, 
   3.533223073879348*^9, 3.533223138102602*^9, 3.533223168451848*^9, 
   3.533225547228355*^9, {3.533326123919879*^9, 3.533326143852387*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a3plotthis", "=", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"a3intervals", "\[Transpose]"}], ",", "a3fits"}], "]"}], 
    "\[Transpose]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.533214099485578*^9, 3.533214126462866*^9}, {
  3.533217006426523*^9, 3.533217039601451*^9}, {3.53322173700797*^9, 
  3.533221756378112*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"SpectrumIntegrate", "[", 
      RowBox[{
      "a3data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
      ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy E [eV]\>\"", ",", 
        "\"\<dN/dE and N [arb. Units]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}], ",", 
     "niceStyle"}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Normal", "[", "surfacebulk", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "165", ",", "181"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"a3data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
      ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{"Thick", ",", "Green", ",", 
         RowBox[{"PointSize", "\[Rule]", "Medium"}]}], "]"}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
          "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], "&"}], "/@", 
      "a3plotthis"}], ")"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.533205606620244*^9, 3.5332056235490294`*^9}, {
   3.533205673745167*^9, 3.5332057075591908`*^9}, {3.533205954209856*^9, 
   3.5332059575606403`*^9}, {3.5332072386805887`*^9, 3.533207253267332*^9}, {
   3.533207537098768*^9, 3.533207542628063*^9}, 3.533213871027141*^9, {
   3.533217060931135*^9, 3.533217065681244*^9}, {3.5332174785580873`*^9, 
   3.5332174923373957`*^9}, {3.533217536288383*^9, 3.53321754203374*^9}, {
   3.533217628238968*^9, 3.5332176404819098`*^9}, {3.533221767042695*^9, 
   3.533221774957921*^9}, {3.533225579481917*^9, 3.53322557982651*^9}, {
   3.533227610630878*^9, 3.533227680324*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
     PointBox[CompressedData["
1:eJxd1c1LFHEcx/HBQywSYSXhQWgEAymRIoQgsOkREQORjTarbZpaH9a1XXq0
qJiey0isLKO0BgmfMqhOneR36A/YY3WaS+Ghg4GIEUTF7/2BbEF+vMb5/t47
y+xOVZBvzZQ4jjP05+/val8HPOfflyevs2so19vV4HAbx9vs6u1mxaaJ87Db
wnEctzJ/kPP2MY/dFMdxrH1xdJj5Q3bd6DOPB44yj+cC5nHhOPPs47Yzj+c6
mMfFLuax6WY+jXuYx8U883ixwHk4cZL5I3YtO8U8TpxmHi9ig2fPMM91fzzL
deDiOfaTe+3qy+fZH8cX7BrhxEV6uPES5+GJy/T5nMtD+jjGHp6+Qh/nrtLH
ldfoY4MNTl1nXzyLncCuvTfo4+U36eNp7GP/Fn1ce5s+du/Qx4199HF0l/4x
u9bcYw5/6KePqwfo6v84xA332RcPY4O/4li9B/S5jzuxi6ewh+exj5sf0scG
Rzg9yHFc+4g+bn9MP8N+T+jjsaf0cXGYPvaf08e7XtDHM9jg0og+rsAO39s+
ztf3+N0Ifbz+GV3cz/sN8RquJ8Kf+TwMTuIYmyH6/E6sGqWP617Rx6vf0se5
N/Txl3H6OODzM7hM3z88Hxrb7+S8QWsXfxux9nBy1NrHn15ah/j9mHWEF8at
DZ6ZsI5x8yR9fhdfYxd/xx6umqKPd+AQp3CEM9jgHI5xHjtZ6wJ2/7OXXXq+
j3vUx93q4y71cYf62aXvz+E5EKiP0+rjNvXxfvVxUn3coj7eqz5uUj9nvUd9
vFN9vF193KA+3qo+3qI+rlcfb1af594m9XGd+niD+rhGfVytPtb9oufqWvVx
pfonrCvUx+Xq45Xq4xXq41L18TL1cYn6+Jfuf57zP3X/4x+6//HCpPkNRpp9
wQ==
      "]]}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwV13k81NsbB3BRtkKWiLRQltQVSpbIY6kkhFzJlpjv6JKSpShEZN/KTBLm
O4hkjQhluSSE3CwhW5GyRPETWev3+Mvr/fKd+Z7zzDnP+RwJhytmBCsLC4vR
OhaWtb8cxgUsLEwKdCSxy5WI0ODQp6qDsmhTDvP0wq00cHBvpZqgVbWXK/NF
aVB1f6qFiV7aodGTvY0G1z7uS9ROpcDN33WZ2Ttp8NUtSzEojQJy5REDjTI0
qI9PdWDPwP+7CKkFqtLgzof4uk3ZFNgXNXJrypoGVqkF0zPFFIhaKaapFtGA
5bbNiR3VFLAbj1newUeHR/1toSJvKOAgQO9QvUYH0sNfYbyDAv+InY8tnaWD
y+4KNtZBCkznJ13x8boPMXyKWrNjFDBY+CRzgC8BCrwuUwpnKRCZ9uSIaFEC
MH9qFD9fpUB7sV6HwpkHMF6gc4nGSYDnXOzNKK5EYA3+YFwuQAA3q+NOj7JE
EG1X3ZYjTsAL5efG0cRDCLX577SXDAHXYgOLP+9Mgvo/8/khigSsBO0vk36T
BDYf/77mpkHAR5MJvk3eyTCt6icjc4KA/m6NB69EUsA8R5lNypQAIe38gFAy
BTZbSZ1YtibgYs7T7AuSDEiWyCzZSiXg56vt8xujGJC7bl20Hrp1qvF4UTQD
Xg5ZU9zQvdejnc7GMqA3lV+wEa0TXCjKuMeArZJ+btedCFA1bNHZnsgAuqT5
vq6LBCRIKFQPZzAgZjdrarwLjndGyyyyigEBUnZRvFcJSKoJ2mA3yQBvGfsE
NfSu8rizz6YYcGWvQxoFLWuae5fjBwPs/qKWvUCzCNtV584wQEP58gjVnQC5
LHbuiXkGLOj5a1R7EKA/opOtsI4ENwpj8so1AsoLFYunhUi4kD5o2HaTgMaa
uCdn1EioGI/wXERXEesqz6iTIKygkizhS4Dw2fafZkdIaKmI/XYVLXbBuMNY
kwTVLogQ8CPAI7b/rIY2Cbxc6Q1n/AmgOzoOf9cn4cVlJ52uAAJi0j7Ll5wl
YUuJoPNvtJimXd5DSxzPcvVd6UACvJun7G6dI0EqbOvQNfT5cS3b49YkxKW+
uSVym4B5PY/OJjsSqJ37Ki2DCPhfwBXxfIIEQfVplb47BLR/lWcOuZNgb6tZ
wx5CwMmMicJqDxJyAyIMlNDZkatfkj1J0GvYYxuOTn7UX2p+jQRP83O3VUJx
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
r0Ibq2wLW0U7ZHWNFKOZgh1JRl0E3GvSOslE67TovJpCm/5TNOqOdn6x4+2W
buy3jX75VHR81lKXJlrX9KqYFXokuGgiGn1r2+JHrbX9rykpIN+D76+9J8SB
zt/3e5sFOmgx69cv7B/dor1S/mgL8wO+Y2jZ+btqreiNRLZTI7o5f92Fyx8I
0LYXexmEHvHxb0lEB04pb3ZD/9ZbVnmNvvHhwcxaP1Pq+8kr3kvAlrwaCyX0
Q46xijfo002OiR+wHxa3U2Tn0CZpgVq16NaUofhdfWvn9/ylbDTroT7n6+hY
ppO1D9rZvnWrVD/2x9FuT3508L5TwSboyjYpvXns54z5hh830RJ76ui96Pao
mvp29ON/LlamotXLiz0DBvB9jjc3yaG5BJLe9Q0ScChdXUwSzw/JARENjo+Y
d4bf1/zG80cji/ZYCd1z/cZQL9rtaIx/ODqM81jIXXSPc+B+lU9YD4/EMwt4
3mW9cgq7N4T9edHJOQfPw9qYkdlKtNJ7Pr1b6P5zF86Po7VVINIMvXna6jAM
Y34roJ3/heevt7jxyBR6Q4gvjzr6hNchODmC/azz6njaBibUBVs3XkUviDYM
uaF1aLdNHqIneMD0KFrj2Tv7b2hWm6vx3ZgPFGYuBUZ/wfz5g0FnQ4u5ZtS2
fcX63ooU0cZ8keDbYrCEvqGxCOxooajZdslRPF+f9PU0rWMCX472Zw90Z2iH
qRl6/fgAm/AY+jnlnBXmm+8U4WNW4wRYbuyPTMY85OKp+fY22i312j4h9FgQ
5e8c9PGnhfcjME99TisiVtA5VpXNHksk9HwyDmFMYJ5xk7qnskBCjU1ow/A3
7B+BM8wgzGs084WTLt8JsP3b21Z6HPP2nfoN8Wi3ssdD3mMk2JXSal6gHVyF
tjeNkrBXTFGN+wcBYwv1JRcxT1Z9/Ef2CfqdMe3Mfcyno8597KPT+HknpnPR
AAnqgVWvHGYxH3J2uI++I4EsiroVgaaUsHHxodePWB0pQlOPxqoqY/5tPf6r
aN1PzE8npe393pLguEkhjYkWXwwvW8H8HJWQGjA4h/exU/ZNz2tJ+JgXrGm1
gPWMOn5L4BkJhytmre6g93PY7JkrxOebHLyfoqt5LNm6nuJ4RuEZ+yKuxx42
l3v5OP9dq7LP0INe3q/nnpCgH+8ltGkZn1eZekswSXjqTf1WuYrrk+vZs5FI
EthD33OOo1nSttRERZBgS9eTFvpNwN0QpW9K4SRwF0lecEYn+9jf8wkhgfJt
sEv4DwGbt5oJT+N9aKvd2dorLFT8na7qB3qREKirnyjBRoWVnzlnDtji+O5f
6DiJ3vi1rqEY728/x27wuKPz3hcHqVqRcDEmL7AWfUNDvU0d74MmHwScHddT
YWJO8LmcKQk7rgyoZ2ygwpJtx7FSPbw/PnTvl+WkwmyFY32AHN7XpiKFTdFC
8l7OrbIkyEOGiQ96ptDOQEyGhNQv3XVv0G3PMytyd5MQpqCZ58xFBR+xYccK
cRLO1nP453JTQZDndHgIL45vJnmnAg8VHKQvT9ZNM4CUOPvSGr2QzHH86XcG
GJjynw1FD0T8vpOI93Hm0zsxg+io2NoyYowBRlcur0bxUuHRWbuxkY8MyJzU
6hvno8IbuQlX/1YGnBsdvp8uQAXf8sshO7IZUNUvyyuyFc3qNL7DmgEtJtH1
WuiMGyyihZYM6Kub8b+ITmjxCNS2wPt77osf5WhjyuvfNqYMUPIzbLMRpQKz
N7bM/wQDMra70dLEqPBQljPJ9SADouxKxeS3U+EMz4LgKhe+/9MxmWOSVLgz
JD3BWZQCM7b75GA/FeQqNvRdnk2GTyL6dEEVKiSvP/35C08yMCfm5OS1qaDo
4XvgimwSlC72ykoYUuF9OJEjLfMQWm6HbR6yQFdVqGnJJULRngbJMXsqFPzb
GqJ87AH8YNVMaXChgjgxly1jnQCri7o6372osP6DlD9L/H3gdBFsG7pFhf8e
tZYofqaDy1axxrwIKkiofWxT06RD8HWmUBf6YmmlNMsROiR3SV/4jb40u2Oi
QZUOrbSDS8aRVDCVF66wPkQHJX6j/dNo+RumEbR9dFjgCohTiqZCaJRSmYEY
ft/yF8vSWCp0lCo4Ni7QgDFYOP4vjQruLSsTq+U0mDzH+XUKHamh+e1rKQ3U
3tsNi9GpmJdy09tKaNDZvLHPE83brHskt5AG3OVEi+x9rLel2YLXExp4xYsW
xCVQQZMZpmmdSAND/UBP+4dUsN45Y/LPDRo8fNXtFo1WmSyxDfOmwehRedcX
6CVGLf+TazS4rdxHCCVR4ZaRgesPdxqUSiqfbUTHwvynWBcaSK6OqSmkUKE0
PEB+py0N3Ly1DtuiBxdPEJbWNKicpStFoG9GHVGLP0cDywmdfSPo7F+rJTwW
NIjpThZ/wKBCi5b49JbTNOg3m936Gm1SdX3V2ogGe1tPbvkf2s2MnpZ+igZ1
dfM8hiT+fqUmhSr6NOAHI24fdK1VuGjwcRrYvUxnz0SzVpULt+vRIPfwEmsH
+pzsX1kSujRYLDT58wcdyC3/1l2bBv8HzbTJJw==
      "]]}}, {{}, 
    {RGBColor[0, 1, 0], PointSize[Medium], Thickness[Large], 
     PointBox[CompressedData["
1:eJxd0k9q1DEYxvHgGTxAhOJCiqhV/IcYURSFQpUKaq3Gmc5otVpdudNsXLmx
KLr9HcA7mGO4zBF6BJV8HyHPwPDy+b1v8iQzv2Oz/XuLIyGEH3+//2r/PEy9
rvSa5OO9FutX64dHo5O5mKs5bFn+1tgv5moOjy3fXMxVPkHdpq6yXj7JenOV
T1GfjE7yadabqzk8tfWy8s3VHPLoKGs/czYX+Uyvk7xGnnyu1yafpz6jXiRf
vkS+9bPM+iKz/ySfJV/mfM0cZqOjzPmTzP5ZvkC+fJl8+Rr58g3y5VvUOfUO
+bjcJn8+zmeZ/YusfFn3l3lfmqz3b2d03Bnnk8x+Wdb9Zc4z4XKTfPXXycf1
Ac8X1Bn5i/EeSX3e+yxvkiMrX+b3qDL3a3KovSzJ2eyOOM+701Ln6s5L3bO7
4DbrnuTcXXG4y3Pt95Hnz6kHPMdvv3Iu3Arnwhufyccr38nHP7+Rj78cdDf8
m/XhBTmfuiNuH7oTDu+7M954R77W75Kv+W3y5fvky+vk73aX6+TjcIV8eY18
eZV8OZIvHyVf5v9u8uGvXl+qzzbmJB9e7fnmYp7M1dzM4ZXyeo3mZM6y8q0/
mavNN+uHPcvfG+eTOdt8sf5k/Wr9Zg6vR0dZ97d+tn4xTzZfzc3mw5vR0Zxk
5Vu/mCdzNTdz2B/3j+a0/3/+DzPVETs=
      "]]}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwV13c8Vu0bAHArhAZRlEKlV2XLSOJSdgiZmYnn2KuFCCWjh97HTBQlL8l4
zuGV3icllWSPhPyMkqhkVEgKv6s/zud8vv+ce13jPlLugVaeHGxsbCv4/Hlz
FtmxsT2hwZry8wyWFB02Bw2LCf/xSOYOrr/ooLifUJFBn230zLeUpYNL81ma
Bfrd3FnfBTU6sKYzWm6hoz689TxjSocQje4s3ToaBMsyOuRD6TDSaKF06SkN
+KbGFcu76PD0i7E7dz0Nvht/DrBJTwKrnfmy4ug2olRIJScJ3jkuziuhDVV1
v4rkJwFb8z26M7qpsdZ7gpkEOsX8Vf+iR1dLpL9uToIaz1aeky9o0Oe+Il/M
lQzVQxZltQ00CFUJuegWngylHXYLoU00aHnxPKHo7FVYgfIdf7fTgDtzU/WC
AQMspj4+o3fTIDcqVutEWAq07tfJmn1Dg0Ub9RsOv1KhQnCInX2YBju1rets
r6fDs/isvLBRGgyYL7KSr2XCK031ir5PNLi/dfFqUEsWHAnfdvx/UzRgCLSZ
XxPOgWk7KTWTWRrMDMZW/9t0E37V+RU5/aQBz2K3j5jeLeD2vpFss0yDr0qf
RU9V3IaD5eNFLE4C2JgJZTI2d2Ag6rzdM14CpFeGZDgmCqBoes8BjbUEfNZz
O7NUWghBNx6npW0gIFaxxsze+y7kv86OSRUloPA/6c40jnuwUpp6Z2krAX7s
gj85yRKoX//quMAOAsQDXcun9pTBfSEFg3gZAhQ6TLTVCsqh0DKw8KMcAVdv
Xmmpm2BC92l91m90u0fnedkZJrBnbWlbL09AHDlwIn2WCU5DDXMa6LsmT5sd
l5gg6Cupn4gOD6g77cFDQkRs5/vdCgSU9TwISRYlwapaRcpXkYDdIjNejftJ
iO5frRqFtgn0zO84QELZ0rBRGvpVv6hLz0ESePWSgh6iW7bscxjUJeFRx2gt
vxKul5I3fmNMgsznDJdSNNXu5p3gQMKy+ELOpDIBx1WNrj4+R0JBea4bpwoB
eV8EpWvCSDABfWkx9NXaB8PV50nIPJlarodOrN/4qDiKBPl7snU5aDvb5JWz
8SS4qp8YM95HgKxTwbv7mSQ8sWxSLFQloDvu6b4XlSTQ3gfNPURbOcvdiqsi
QeDMJlYnun2wUli/mgT7LI/DS+joxhmRGhYJM0PLNtZqBHA+cz+ZWkeClJ/K
eQ51Aj7O5l8YbiPhYtyNehcNAlT67sXNj5NwXDNL9BQ6K+O1qvMnEpSn0nzj
0brmcpuffibhnQ1dkESblMhHx02SANLhzuz7CfB5vrfi5zcSlp7Zzd1Bnwp/
q5q4REIo+wbpT5o437yxbcaCFFhUrQ1dQqcFfg04I0SBjDdfs+ABAtpWOt7n
baCgt4M9WBP9zVtZc1qEArVbMzV0tMVAftK5zRR8126zltci4IJwzUn5HRQE
RCTGnjqI8eogOaikQoFmnX1wPLrvwmOtrfso4OaWcclBV7RVv+BWpeDm3y/U
n6FXTx+z71ajoCWfc0JImwBD+RgvB00KdjdGWlagd5QFf+XTpWB2jZn2C/Q5
Fa62PvQTK/G9/eiZyfz2gkMU2A+wuDh0CDjS3wjqehTETf+otkR/UDPs0jek
YFQkZNtX9E+x/KDVZhSQx3X5VwHOZzAm/D/0+bz1C6Lo7ppXBYQ5BUK7mZ2A
LjV94vD4KAW6Wl9iGej50LiDNlYU5LrTJhR0CRg+capKxo4CnyLVvsPoqR/O
d1lotS9c9XboElpftYk9Ba1n7uRGoUvzbu71dKDgd8Jby3Z037pQt0uOFDgw
jz8IOETApJVhl4frn+8v2sSi6YcEFEbQIyLZ36+jp8Ukjzq74XgRb+Tr0SEL
x/pMT1AQYWz/z5bDBCx8Yl8teBL35/ePQ0ro076m4RFoLvLaWwP0Jhudsg/o
5I29W0LQ31Jc7CgPHO+9TepLdE5oZLUcDcfLnFMYQnP1LivGo/8yyWj9jtYu
f+YzhCbJbl4JPQJSX4duiyPwfE6eLtyHLtYRz+pBa2wS1jNBN9h6d+70oqAu
8ljUGTSfSMhFFppb6bs4HR0v/OknuzcFJqOprFvoseBoRUN0l0nXXDM6xSK1
vwk9usnSb7s+ARse8klU+2C8Ns+s1kAbXdVP+oL2v8AoMkMzyNpqCV8K5kfb
R0LRbmwixlFozazA6Kto52PPy0vQF46s21aADgPHrtdongpzh3b0+qzvVjv8
KDD1nJofRYsGdzIN0AzRq+mL6JC6o00EurtZTnm9AQFMO9f8OLRoVGu7NPoZ
/zf1O2gnZX//A2ih2sUrj9C3PwjwW6IjnPxzXqPHskrv0tDufdreE+g9pqYG
EehKRc/ZZXTAysT7FPQ3v16t9f4UVFbQY4rQ2rnJhyTQC557JR6hjw1Hr5JF
a4k113Sh061LLquho1t8jn9Eb5DlfaaNfh7Ft7CEpt9Me6SH5lW5l7HBkADv
zyZnjNBmY8Yqu9GdzrKfjdGp1z91aKMzTdXF/7jHNDHAGq0v4sdvgN7MtlvA
B71FsqUa0C6VL4uj0GuGHaT2o/NpXoYZ6NpWUSMF9LgY74d76NjgNbI70LKt
RRefoJ0dDrYKo4OiDSV70F+3MvdyocdstEw/o3mWEm58+7Ofe5VCl9ETukEi
w+gutl0FQkaY3yy/zEa0Uc/mjl3ovJU4iQr045J1vzXR0sEvySz0vhgumaPo
of0HTCLRkrJTUefQG73fZQA6k/19CR09KiRnJIEW6O3tzUMHZvdz/Mb4WIip
U3iJbghIT2GiA+zuOw6gTxvVesahR2VL4mfQV8USDzmiO3rTh0WNcb2uOhtX
MD4NyhL55dCMYos1beiaixfUddFHM0zW5KDvynn97Y3+etNERgG9jdP5YSS6
sef84XmM//Q+y/EU9PZPE8RDdPSlAzos9KXg8RYd9Ly9om8bOtyoYM0K5pef
vPS1EXQ5i8O+Bm3/Zu00nwkBiu3r+JTQigojuY7oerG4MQ7M10Ku3qZA9EPS
81wF5rd4f/P8JbT+904hNzTv5SrzUvSnN93eVZ4UvO1PWP6NbvA3v2GE9cOW
jNwjeISAmj32lz9ifWm5HGIrjT6Sxh8eh36g6FRuho4kBeJr3DGf4hRcctHq
12dUBLF+cTvtvFKBlqtlXbiN9S1CSez+C7SAZWSPAtprgGPtNFqo63aZAdZD
UO55pGNKQJ3B1RUnZwqmByO2vkMPLJQ6y2J9HZI6tDiPTpPQjU7B+tviydMr
YEaA3hNfp1msz/cmUxgaaNukkkOVthR4LBVyMtA8e7a3i1hT0C/e+UnbnACy
qV4uAPvBS7fMF9boHU9i1zKxX1QXON7xQWunzJRNmuL5yI45ZaKPLmrs8ThC
wVGtX+2TaPqF8u1qRph/jtL3bxwlILsglwjA/lWZ9zm1Aq0Y/9SVDpgv75mB
L9HDwv+KF+pQEOWruXsW7eleOtZ9EOvX+aM3jljg+BpvX2zC/sjMDru4iC6O
27pFRZmC7Det5vZWBBgzhF2eSeL+ldPq/dE2msv6eRIUuF5aOXAJvaVafGPY
Ngp2yintLkcPaXAH7xLH70Wnc3Idw/l5SUp6bcL5/uX4gInumBT4X/wa3N8z
H6V4bAjw3WXB1FogsT7HZImjixYvl/XMk/CvxOZ1yug5iQ2FAXMkhDce+e2E
potUJGThfYRrK7OnAv3SoVi6+wsJm5+fobvYEhBlE2o+8ZYEPSHOuSo7AkTm
5XlyG/D+tPrrz0a0X9jjFeEXJPixDS8PotPsi42uPCchY4rFy22P95FrX1oD
8T411hQiboveGN10f9dDEhIujRyeR+ew3ibolZPQOluXqnacgCur5mP10kiw
7Y1WrHYiYN8jPp9wexLea+mMtaBrRd9edrMlISh/KWcEXSJb1atnTcIV/3Ce
tc4ErI3bIMVrQcJjztNDHmi6I8sjzJCEXYpEkpALAfcPkRd51EiYSzD76O+K
/Uej8FWfIAnpmptv7XTHfC78arYukQmae34XqBJ4fyYGm1WMymHY9uk2OT+M
96nkixwTpcCUKmhhBBPgbzX83zvLEvgY2rYu6ywB2+obxtc9KQbTAOF4/ggC
7D+s9D9fKQKxmfy07TGYP40Dta4OhfChXEREMo6Ai0wL86ePC2CAv6ApkY7n
eyIx31LgDmjNhYtcY2B8/UqIbI+7DQ0R/unrMwmw3njMq3QqDyx19RKCcrAf
8t54vlf4JhxOPSl4+hYBHLcD9WbzsuFETG7b+3+w/zXMUVL7smD8t5TUj3sE
jFvOixvLZoJfVeLHGSbmR49fRoBnOmwVWDNqW4XrO3E841RlKqhN9512Y2H/
cZX8kn0sBQZlub6fRat1yuuPm6VArI9CcDJ6lWqPnbpRCnR9uOzPQnuc6ioY
0UqBwAFlmvBD7E8DCf957kqBu41Jdi/RHiVPS8QXGbC5ADQVHxEw8konUq+A
AXXvfB8YoCdHc2NW5THAS+KamjNaqNtapOk6A+5nTypfQSctW35w/psBx1Ky
946iY/eZsJPhDEi6MCue9Rj/Lx7tmPttyQCVGomccnSUoJ7JvCkD+n+aiNWj
93aWiX43ZIDMmdsi39CZfQ1bfhxkwHNf87WmtRgv10bSZPYwwLc4LMkd/ctl
W9JBaQYIjRfwhaF3pPt+s5FkgJv7L+5CdKVHBmfKRgbw3Np1uab2z/9bbkml
IAPKBy05X6HHGwRr3ggwwHZLZMwndGdSrAonLwOW7O+urKCX/enrFTkZ8H/b
CVcR
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{100., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"dN/dE and N [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.533227663049539*^9, 3.5332276816194487`*^9}, {
  3.533326124306788*^9, 3.533326144467787*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "&"}], "/@", 
  "a3fits"}]], "Input",
 CellChangeTimes->{{3.533214341787274*^9, 3.5332143643355017`*^9}, {
  3.5332170721022787`*^9, 3.533217072187626*^9}, {3.53322177749018*^9, 
  3.53322177756503*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  StyleBox[
   TagBox[GridBox[{
      {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
      {"A", "3782.9605082815524`", "388.191907559644`", "9.745078232215125`", 
       "0.00019345798989235725`"},
      {"a", "186.22415980012332`", "0.12152471624418201`", 
       "1532.3974048697999`", "2.246181474469529`*^-15"},
      {"b", "5.964085918930065`", "1.7738650153680366`", 
       "3.3621982886294495`", "0.020059712079426844`"},
      {"c", "678.3283129833704`", "398.3735338042941`", "1.7027444230685456`",
        "0.14934746037736257`"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
     GridBoxDividers->{
      "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
       "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{
      "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
    "Grid"], "DialogStyle",
   StripOnInput->False], "}"}]], "Output",
 CellChangeTimes->{
  3.533222743701085*^9, 3.533222884276306*^9, 3.5332230905043287`*^9, 
   3.5332231517461243`*^9, 3.533225557715949*^9, {3.533326124382537*^9, 
   3.5333261445245047`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surfacebulk", "=", 
  RowBox[{"GaussDoublePeakFit", "[", 
   RowBox[{
    RowBox[{"SpectrumIntegrate", "[", 
     RowBox[{"a3data", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
      "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"165", ",", "181"}], "}"}], ",", "1900", ",", "2100", ",", "171",
     ",", "176"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5332252057100353`*^9, 3.533225257226143*^9}, {
  3.5332253005425873`*^9, 3.533225323615715*^9}, {3.533225361677705*^9, 
  3.533225369253962*^9}}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    RowBox[{"1209.0131026540803`", "\[VeryThinSpace]", "+", 
     RowBox[{"481.88444609930576`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.10172938877270757`"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ")"}], 
         "2"]}]]}], "+", 
     RowBox[{"743.2243194433344`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.046913938411293495`"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], "+", 
           "x"}], ")"}], "2"]}]]}]}],
    Short],
   FrameMargins->5], "]"}]], "Output",
 CellChangeTimes->{
  3.533225325291069*^9, 3.533225370602591*^9, {3.53332612445125*^9, 
   3.533326144608632*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surfacebulk", "[", "\"\<ParameterTable\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.533225460910552*^9, 3.5332254693227873`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"A1", "743.2243194433344`", "48.02625367132183`", "15.475375708664524`",
       "2.5896514701158198`*^-8"},
     {"a1", "171.95346203040933`", "0.40423787690943486`", 
      "425.3769175344587`", "1.2683858322011667`*^-22"},
     {"A2", "481.88444609930576`", "96.34965266394379`", "5.001413422631234`",
       "0.0005362154112590605`"},
     {"a2", "176.6670742113606`", "0.24604043671165424`", 
      "718.0408089520856`", "6.754150009941973`*^-25"},
     {"b1", "21.315626738327133`", "3.563731600374713`", "5.981266023537204`",
       "0.0001354540115517356`"},
     {"b2", "9.830001065221033`", "1.3566085862512314`", "7.246011240710669`",
       "0.000027715127926813248`"},
     {"c", "1209.0131026540803`", "23.55660819922883`", "51.32373440305637`", 
      "1.90710929883025`*^-13"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.533225469895269*^9, {3.533326124517953*^9, 3.533326144694318*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Playarea", "Section",
 CellChangeTimes->{{3.533193895592239*^9, 3.533193897616193*^9}}],

Cell[BoxData[
 RowBox[{"evendumberfit", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{
    RowBox[{"TakeRegion", "[", 
     RowBox[{
      RowBox[{
      "a1data", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
      "1325", ",", "1420"}], "]"}], ",", 
    RowBox[{
     RowBox[{"A1", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a1"}], ")"}], "2"]}], "b1"], "]"}]}], "+", 
     RowBox[{"A2", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a2"}], ")"}], "2"]}], "b2"], "]"}]}], "+", 
     RowBox[{"A3", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a3"}], ")"}], "2"]}], "b3"], "]"}]}], "+", 
     RowBox[{"A4", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a4"}], ")"}], "2"]}], "b4"], "]"}]}], "+", 
     RowBox[{"A5", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a5"}], ")"}], "2"]}], "b5"], "]"}]}], "+", 
     RowBox[{"A6", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a6"}], ")"}], "2"]}], "b6"], "]"}]}], "+", 
     RowBox[{"Aa", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "aa"}], ")"}], "2"]}], "ba"], "]"}]}], "+", 
     RowBox[{"Ab", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ab"}], ")"}], "2"]}], "bb"], "]"}]}], "+", 
     RowBox[{"Ac", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ac"}], ")"}], "2"]}], "bc"], "]"}]}], "+", 
     RowBox[{"Ad", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ad"}], ")"}], "2"]}], "bd"], "]"}]}], "+", 
     RowBox[{"Ae", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ae"}], ")"}], "2"]}], "be"], "]"}]}], "+", 
     "c"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"A1", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A2", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A3", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A4", ",", "600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A5", ",", 
        RowBox[{"-", "250"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A6", ",", 
        RowBox[{"-", "3200"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Aa", ",", "1400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ab", ",", "1400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ac", ",", "1200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ad", ",", "1400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ae", ",", "600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a1", ",", "1325"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a2", ",", "1340"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a3", ",", "1356"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a4", ",", "1375"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a5", ",", "1394"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a6", ",", "1408"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "1347"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ab", ",", "1408"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ac", ",", "1366"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ad", ",", "1383"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ae", ",", "1398"}], "}"}], ",", "b1", ",", "b2", ",", "b3", 
      ",", "b4", ",", "b5", ",", "b6", ",", "ba", ",", "bb", ",", "bc", ",", 
      "bd", ",", "be", ",", "c"}], "}"}], ",", "x", ",", 
    RowBox[{"MaxIterations", "\[Rule]", "1000000"}]}], "]"}]}]], "Text",
 CellChangeTimes->{{3.533209379834515*^9, 3.5332093818563766`*^9}, {
   3.533209452904571*^9, 3.53320972699258*^9}, {3.5332097944209747`*^9, 
   3.533209822222707*^9}, 3.5332115744839087`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "cvmit"}], "MessageName"], 
  RowBox[{":", " "}], 
  "\"\<Failed to converge to the requested accuracy or precision within \
\[NoBreak]\\!\\(1000000\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", ButtonNote -> \
\\\"NonlinearModelFit::cvmit\\\"]\\)\>\""}]], "Text", "MSG",
 CellChangeTimes->{3.5332097286460943`*^9, 3.53320981785525*^9, 
  3.533210995493992*^9, 3.533211574486335*^9}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    RowBox[{"177.44064395859183`", "\[VeryThinSpace]", "+", 
     RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], "+", 
     RowBox[{
      RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}], " ", 
      RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], "-", 
     RowBox[{"104834.27533476426`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.017430647746355343`"}], " ", 
        RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]]}]}],
    Short],
   FrameMargins->5], "]"}]], "Text",
 CellChangeTimes->{3.5332097287349033`*^9, 3.5332098178613358`*^9, 
  3.5332109955583677`*^9, 3.533211574487009*^9}],

Cell["evendumberfit1[{\"ParameterTable\", \"RSquared\"}]", "Text",
 CellChangeTimes->{{3.533211123155476*^9, 3.5332111250229273`*^9}, 
   3.533211479811657*^9, 3.533211574487865*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A1", 
        RowBox[{"-", "56947.69595760898`"}], "1.5484953649367878`*^7", 
        RowBox[{"-", "0.003677614880037673`"}], "0.9970771338916801`"},
       {"A2", 
        RowBox[{"-", "4878.388249888505`"}], "84068.84042370366`", 
        RowBox[{"-", "0.05802849456828023`"}], "0.9539067331497526`"},
       {"A3", "60442.51348351085`", "1.54975121601075`*^7", 
        "0.003900142994505744`", "0.9969002756155624`"},
       {"A4", "919.885274007699`", "242.58811329871781`", 
        "3.7919635117280945`", "0.0003335650169789478`"},
       {"A5", 
        RowBox[{"-", "1938.7848809090096`"}], "12392.042717462798`", 
        RowBox[{"-", "0.15645401852729934`"}], "0.8761676470242307`"},
       {"A6", 
        RowBox[{"-", "56693.68618103412`"}], "3.8730891144365594`*^7", 
        RowBox[{"-", "0.0014637847079147746`"}], "0.9988366223522357`"},
       {"Aa", "965.4043173958561`", "832.1088032339804`", 
        "1.160190005974969`", "0.2502811822440205`"},
       {"Ab", "53494.8706444394`", "3.873104734820297`*^7", 
        "0.0013811883309920723`", "0.9989022677373925`"},
       {"Ac", "357.2369358426603`", "590.6913476792164`", 
        "0.6047776681446552`", "0.5474650376475794`"},
       {"Ad", "1990.057225402018`", "8526.692249655576`", 
        "0.23339146847740444`", "0.8162023271863603`"},
       {"Ae", "774.3609878665051`", "2517.401416958113`", 
        "0.30760330182152656`", "0.7593830086266226`"},
       {"a1", "1331.2923299407526`", "55.096211454367634`", 
        "24.163046692300604`", "7.071922122997909`*^-34"},
       {"a2", "1337.3429056883535`", "9.818234584143148`", 
        "136.21011946976876`", "1.4400605984457002`*^-80"},
       {"a3", "1331.685899483604`", "48.559856836731235`", 
        "27.423596077744232`", "4.336019765964705`*^-37"},
       {"a4", "1368.2993435078783`", "1.9499391530570354`", 
        "701.71386700078`", "4.354018199578665`*^-126"},
       {"a5", "1391.2081072578537`", "4.5083636908771005`", 
        "308.5838238989088`", "2.923041591916961`*^-103"},
       {"a6", "1408.5408856294493`", "10.58250359651326`", 
        "133.100912537704`", "6.28016249056251`*^-80"},
       {"aa", "1348.73669911498`", "0.7109890526224512`", 
        "1896.9865909189814`", "9.966822516001233`*^-154"},
       {"ab", "1408.5710851323972`", "10.692705774244333`", 
        "131.73195960607478`", "1.2142105490580331`*^-79"},
       {"ac", "1363.5328969165334`", "1.2231879307347777`", 
        "1114.7370429803452`", "5.958984159284515`*^-139"},
       {"ad", "1387.3854138560694`", "30.87210239473938`", 
        "44.93977754143756`", "3.976759264709797`*^-50"},
       {"ae", "1400.3303900893054`", "1.2287249739014323`", 
        "1139.6613724249405`", "1.4473894832166897`*^-139"},
       {"b1", "70.20468099316044`", "736.5904594043112`", 
        "0.0953103316732282`", "0.9243661361290029`"},
       {"b2", "42.12288467514491`", "151.28732684548714`", 
        "0.2784296976716753`", "0.7815801444617678`"},
       {"b3", "75.86547544725823`", "761.03871615028`", 
        "0.09968674896202956`", "0.9209046248365457`"},
       {"b4", "25.62754676068675`", "18.44789405401561`", 
        "1.389185491072805`", "0.16959114257592722`"},
       {"b5", "37.409703670887275`", "98.4065767346574`", 
        "0.38015450706875475`", "0.7050894545474745`"},
       {"b6", "20.982057669668695`", "293.9756899196079`", 
        "0.07137344477499673`", "0.9433231148515141`"},
       {"ba", "14.860187650505106`", "8.052103878983058`", 
        "1.845503718511624`", "0.06959103884881644`"},
       {"bb", "20.144626800753787`", "295.10328691521306`", 
        "0.06826296992937797`", "0.9457891268431291`"},
       {"bc", "10.123481979869121`", "10.979069597274904`", 
        "0.9220710270733554`", "0.3599545593855106`"},
       {"bd", "89.80053055054381`", "233.34902559674143`", 
        "0.38483353560572064`", "0.7016366622984878`"},
       {"be", "13.93376561388151`", "27.240376386888396`", 
        "0.511511493673349`", "0.6107533029574733`"},
       {"c", "142.19602939070106`", "78.38458837190666`", 
        "1.8140814711692057`", "0.07435302208435837`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", "0.9984859025242661`"}], "}"}]], "Text",
 CellChangeTimes->{3.533211125933498*^9, 3.533211480830307*^9, 
  3.533211574490374*^9}],

Cell["\<\
Show[ListPlot[TakeRegion[a1data[[2]], 1320, 1440], PlotRange -> All, \
FrameLabel -> {\"Electron Energy E [eV]\", \"dN/dE [arb. Units]\"}, PlotStyle \
-> {Directive[Thick, Blue, PointSize -> Medium]}, niceStyle], \
Plot[Normal[evendumberfit1], {x, 1325, 1420}, PlotStyle -> Red]]\
\>", "Text",
 CellChangeTimes->{{3.533211138113071*^9, 3.5332111433549747`*^9}, 
   3.533211489165753*^9, 3.533211574491417*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
     PointBox[CompressedData["
1:eJxFlFFIVFEQhi+xgYWFhISEDwoGJgY+WEhIXEJCFoNN9oaRwWaumC5kYbSV
xmJWlmZmey8WlpJubjchAw0pHyx88MHABy0LCRENEQUJNTOTbOc7trAM3/ln
5syZM+cmFpzP9W7RNO3Kxv+fjfxag7pz23vbnmzQI9we1N8sHzaMxAfC4aBY
D9yJfhLuIv4g3A1fhXuJj24U26f2g/vh2YfCA/iPYAdVfkt4iPVxeJh6flmb
cREOwWPEfzeJU/7kmcD62H9KrVP/DPHL9GcOvem+2IWg7puvtO0P94QX0fPg
FbgB/zXyrZNPM+kn/XCYoj+lnijqjv5vxZ/zxbA+CMcSv856HP6nyRdv6sFd
VYbxhHoSTKl/9rZwEnwoIJxs6vv2Ol7ajy8Kp5r6cWfUCcM4I5zGPrpLbDqs
OcVmmHpbMKbTTnELZ6K3FhFH/tVy4Sz0hutis6nnxw3hHHR/jVgX+nb67eZ8
05wvj34UcZ/5qi/024O+Ey5ET8a/GA6Tz8d+k3XCZaqfd4TL8Z+5RZ1wwk2x
Fep8cID4P/hXwyHOV6PqqRVbx/6r9eRBb6feIOdZ5b6b0FewzczDF+alFf8C
uB2uZ27D+L9W75/9j3D+LtX/auFuU//89bfb8F4W7lXzwLz0bc5Hf8T0M089
54QH4AOlwoNqvgqFh1T8UeFhU3/V8/OFXUL+EfQyv9gx+jlaJTyOHqDfE9Sf
Qv1T1G9eEJ6hnqUS2W+OfN5a4QXyjTULL5r6qWsttp3aJrzR91C1xzDOPhde
U/WHhTVL/HfDDkv8L3UIR3Ev4ZBwNOwgfwzsaRGOteS+tj4SjkOvaxSOt6T+
+RrhBHRXpXCSmguvcLKlv/v0rcNOOSbrqRb3VSqcZkm/RrnvdPJP8/3IIJ9G
fzMt6fce+q/Db/n+ZOHv5z1lo0/eFc6Bc3kPLvb7CLvRS5jPPPgZnK/OB3uI
38H3oxDeDxer/sA+8tlwmcoHl6M7Yb9i3msF+ZfQA8TH1et/AZYbBno=
      
      "]]}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
BV/K4g==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1320., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"dN/dE [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Text",
 CellChangeTimes->{3.533211146652199*^9, 3.533211492986495*^9, 
  3.53321157449888*^9}],

Cell[BoxData[
 RowBox[{"evendumberfit1", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{
    RowBox[{"TakeRegion", "[", 
     RowBox[{
      RowBox[{
      "a1data", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
      "1323", ",", "1420"}], "]"}], ",", 
    RowBox[{
     RowBox[{"A1", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a1"}], ")"}], "2"]}], "b1"], "]"}]}], "+", 
     RowBox[{"A2", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a2"}], ")"}], "2"]}], "b2"], "]"}]}], "+", 
     RowBox[{"A3", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a3"}], ")"}], "2"]}], "b3"], "]"}]}], "+", 
     RowBox[{"A4", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a4"}], ")"}], "2"]}], "b4"], "]"}]}], "+", 
     RowBox[{"A5", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a5"}], ")"}], "2"]}], "b5"], "]"}]}], "+", 
     RowBox[{"A6", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a6"}], ")"}], "2"]}], "b6"], "]"}]}], "+", 
     RowBox[{"Aa", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "aa"}], ")"}], "2"]}], "ba"], "]"}]}], "+", 
     RowBox[{"Ab", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ab"}], ")"}], "2"]}], "bb"], "]"}]}], "+", 
     RowBox[{"Ac", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ac"}], ")"}], "2"]}], "bc"], "]"}]}], "+", 
     RowBox[{"Ad", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ad"}], ")"}], "2"]}], "bd"], "]"}]}], "+", 
     RowBox[{"Ae", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ae"}], ")"}], "2"]}], "be"], "]"}]}], "+", 
     "c"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"A1", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A2", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A3", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A4", ",", "600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A5", ",", 
        RowBox[{"-", "250"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A6", ",", 
        RowBox[{"-", "3200"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Aa", ",", "1400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ab", ",", "1400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ac", ",", "1200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ad", ",", "1400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ae", ",", "600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a1", ",", "1325"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a2", ",", "1340"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a3", ",", "1356"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a4", ",", "1375"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a5", ",", "1394"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a6", ",", "1408"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "1347"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ab", ",", "1408"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ac", ",", "1366"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ad", ",", "1383"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ae", ",", "1398"}], "}"}], ",", "b1", ",", "b2", ",", "b3", 
      ",", "b4", ",", "b5", ",", "b6", ",", "ba", ",", "bb", ",", "bc", ",", 
      "bd", ",", "be", ",", "c"}], "}"}], ",", "x", ",", 
    RowBox[{"MaxIterations", "\[Rule]", "100000"}]}], "]"}]}]], "Text",
 CellChangeTimes->{{3.533209379834515*^9, 3.5332093818563766`*^9}, {
   3.533209452904571*^9, 3.53320972699258*^9}, {3.5332097944209747`*^9, 
   3.533209822222707*^9}, {3.5332113199568357`*^9, 3.533211351201894*^9}, 
   3.533211574500884*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "cvmit"}], "MessageName"], 
  RowBox[{":", " "}], 
  "\"\<Failed to converge to the requested accuracy or precision within \
\[NoBreak]\\!\\(100000\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", ButtonNote -> \
\\\"NonlinearModelFit::cvmit\\\"]\\)\>\""}]], "Text", "MSG",
 CellChangeTimes->{3.5332114677953043`*^9, 3.53321157450179*^9}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    RowBox[{"142.19602939070106`", "\[VeryThinSpace]", "+", 
     RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], "+", 
     RowBox[{
      RowBox[{"\[LeftSkeleton]", "18", "\[RightSkeleton]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]]}], "-", 
     RowBox[{"56947.69595760898`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.014244064439199192`"}], " ", 
        RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]]}]}],
    Short],
   FrameMargins->5], "]"}]], "Text",
 CellChangeTimes->{3.533211348144415*^9, 3.533211467825304*^9, 
  3.533211574502427*^9}],

Cell[BoxData[
 RowBox[{"dumbfit", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{
    RowBox[{"TakeRegion", "[", 
     RowBox[{
      RowBox[{
      "a1data", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
      "1323", ",", "1420"}], "]"}], ",", 
    RowBox[{
     RowBox[{"A1", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a1"}], ")"}], "2"]}], "b1"], "]"}]}], "+", 
     RowBox[{"A2", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a2"}], ")"}], "2"]}], "b2"], "]"}]}], "+", 
     RowBox[{"A3", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a3"}], ")"}], "2"]}], "b3"], "]"}]}], "+", 
     RowBox[{"A4", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a4"}], ")"}], "2"]}], "b4"], "]"}]}], "+", 
     RowBox[{"A5", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a5"}], ")"}], "2"]}], "b5"], "]"}]}], "+", 
     RowBox[{"A6", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a6"}], ")"}], "2"]}], "b6"], "]"}]}], "+", 
     RowBox[{"Aa", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "aa"}], ")"}], "2"]}], "ba"], "]"}]}], "+", 
     RowBox[{"Ab", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ab"}], ")"}], "2"]}], "bb"], "]"}]}], "+", 
     RowBox[{"Ac", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ac"}], ")"}], "2"]}], "bc"], "]"}]}], "+", 
     RowBox[{"Ad", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ad"}], ")"}], "2"]}], "bd"], "]"}]}], "+", 
     RowBox[{"Ae", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "ae"}], ")"}], "2"]}], "be"], "]"}]}], "+", 
     "c"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"A1", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A2", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A3", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A4", ",", "600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A5", ",", 
        RowBox[{"-", "250"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A6", ",", 
        RowBox[{"-", "3200"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Aa", ",", "1400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ab", ",", "1400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ac", ",", "1200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ad", ",", "1400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ae", ",", "600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a1", ",", "1325"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a2", ",", "1340"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a3", ",", "1356"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a4", ",", "1375"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a5", ",", "1394"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a6", ",", "1408"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "1347"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ab", ",", "1408"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ac", ",", "1366"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ad", ",", "1383"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ae", ",", "1398"}], "}"}], ",", "b1", ",", "b2", ",", "b3", 
      ",", "b4", ",", "b5", ",", "b6", ",", "ba", ",", "bb", ",", "bc", ",", 
      "bd", ",", "be", ",", "c"}], "}"}], ",", "x", ",", 
    RowBox[{"MaxIterations", "\[Rule]", "100000"}]}], "]"}]}]], "Text",
 CellChangeTimes->{{3.533209379834515*^9, 3.5332093818563766`*^9}, {
   3.533209452904571*^9, 3.53320972699258*^9}, {3.5332097944209747`*^9, 
   3.533209822222707*^9}, {3.5332113199568357`*^9, 3.533211351201894*^9}, 
   3.533211574500884*^9, {3.53321199282201*^9, 3.53321199711345*^9}, 
   3.533214239321883*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "cvmit"}], "MessageName"], 
  RowBox[{":", " "}], 
  "\"\<Failed to converge to the requested accuracy or precision within \
\[NoBreak]\\!\\(100000\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", ButtonNote -> \
\\\"NonlinearModelFit::cvmit\\\"]\\)\>\""}]], "Text", "MSG",
 CellChangeTimes->{3.533212114017774*^9, 3.533214239324449*^9}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    RowBox[{"142.19602939070106`", "\[VeryThinSpace]", "+", 
     RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], "+", 
     RowBox[{
      RowBox[{"\[LeftSkeleton]", "18", "\[RightSkeleton]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]]}], "-", 
     RowBox[{"56947.69595760898`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.014244064439199192`"}], " ", 
        RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]]}]}],
    Short],
   FrameMargins->5], "]"}]], "Text",
 CellChangeTimes->{3.5332121140988817`*^9, 3.5332142393258657`*^9}],

Cell["dumbfit[{\"ParameterTable\", \"RSquared\"}]", "Text",
 CellChangeTimes->{{3.5332121285749083`*^9, 3.533212137721054*^9}, {
   3.53321258134291*^9, 3.533212594468734*^9}, 3.533214239328101*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    TagBox[GridBox[{
       {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
       {"A1", 
        RowBox[{"-", "56947.69595760898`"}], "1.5484953649367878`*^7", 
        RowBox[{"-", "0.003677614880037673`"}], "0.9970771338916801`"},
       {"A2", 
        RowBox[{"-", "4878.388249888505`"}], "84068.84042370366`", 
        RowBox[{"-", "0.05802849456828023`"}], "0.9539067331497526`"},
       {"A3", "60442.51348351085`", "1.54975121601075`*^7", 
        "0.003900142994505744`", "0.9969002756155624`"},
       {"A4", "919.885274007699`", "242.58811329871781`", 
        "3.7919635117280945`", "0.0003335650169789478`"},
       {"A5", 
        RowBox[{"-", "1938.7848809090096`"}], "12392.042717462798`", 
        RowBox[{"-", "0.15645401852729934`"}], "0.8761676470242307`"},
       {"A6", 
        RowBox[{"-", "56693.68618103412`"}], "3.8730891144365594`*^7", 
        RowBox[{"-", "0.0014637847079147746`"}], "0.9988366223522357`"},
       {"Aa", "965.4043173958561`", "832.1088032339804`", 
        "1.160190005974969`", "0.2502811822440205`"},
       {"Ab", "53494.8706444394`", "3.873104734820297`*^7", 
        "0.0013811883309920723`", "0.9989022677373925`"},
       {"Ac", "357.2369358426603`", "590.6913476792164`", 
        "0.6047776681446552`", "0.5474650376475794`"},
       {"Ad", "1990.057225402018`", "8526.692249655576`", 
        "0.23339146847740444`", "0.8162023271863603`"},
       {"Ae", "774.3609878665051`", "2517.401416958113`", 
        "0.30760330182152656`", "0.7593830086266226`"},
       {"a1", "1331.2923299407526`", "55.096211454367634`", 
        "24.163046692300604`", "7.071922122997909`*^-34"},
       {"a2", "1337.3429056883535`", "9.818234584143148`", 
        "136.21011946976876`", "1.4400605984457002`*^-80"},
       {"a3", "1331.685899483604`", "48.559856836731235`", 
        "27.423596077744232`", "4.336019765964705`*^-37"},
       {"a4", "1368.2993435078783`", "1.9499391530570354`", 
        "701.71386700078`", "4.354018199578665`*^-126"},
       {"a5", "1391.2081072578537`", "4.5083636908771005`", 
        "308.5838238989088`", "2.923041591916961`*^-103"},
       {"a6", "1408.5408856294493`", "10.58250359651326`", 
        "133.100912537704`", "6.28016249056251`*^-80"},
       {"aa", "1348.73669911498`", "0.7109890526224512`", 
        "1896.9865909189814`", "9.966822516001233`*^-154"},
       {"ab", "1408.5710851323972`", "10.692705774244333`", 
        "131.73195960607478`", "1.2142105490580331`*^-79"},
       {"ac", "1363.5328969165334`", "1.2231879307347777`", 
        "1114.7370429803452`", "5.958984159284515`*^-139"},
       {"ad", "1387.3854138560694`", "30.87210239473938`", 
        "44.93977754143756`", "3.976759264709797`*^-50"},
       {"ae", "1400.3303900893054`", "1.2287249739014323`", 
        "1139.6613724249405`", "1.4473894832166897`*^-139"},
       {"b1", "70.20468099316044`", "736.5904594043112`", 
        "0.0953103316732282`", "0.9243661361290029`"},
       {"b2", "42.12288467514491`", "151.28732684548714`", 
        "0.2784296976716753`", "0.7815801444617678`"},
       {"b3", "75.86547544725823`", "761.03871615028`", 
        "0.09968674896202956`", "0.9209046248365457`"},
       {"b4", "25.62754676068675`", "18.44789405401561`", 
        "1.389185491072805`", "0.16959114257592722`"},
       {"b5", "37.409703670887275`", "98.4065767346574`", 
        "0.38015450706875475`", "0.7050894545474745`"},
       {"b6", "20.982057669668695`", "293.9756899196079`", 
        "0.07137344477499673`", "0.9433231148515141`"},
       {"ba", "14.860187650505106`", "8.052103878983058`", 
        "1.845503718511624`", "0.06959103884881644`"},
       {"bb", "20.144626800753787`", "295.10328691521306`", 
        "0.06826296992937797`", "0.9457891268431291`"},
       {"bc", "10.123481979869121`", "10.979069597274904`", 
        "0.9220710270733554`", "0.3599545593855106`"},
       {"bd", "89.80053055054381`", "233.34902559674143`", 
        "0.38483353560572064`", "0.7016366622984878`"},
       {"be", "13.93376561388151`", "27.240376386888396`", 
        "0.511511493673349`", "0.6107533029574733`"},
       {"c", "142.19602939070106`", "78.38458837190666`", 
        "1.8140814711692057`", "0.07435302208435837`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{
       "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", "0.9984859025242661`"}], "}"}]], "Text",
 CellChangeTimes->{3.533212138543882*^9, 3.533212595273687*^9, 
  3.533214239334173*^9}],

Cell["\<\
Show[ListPlot[TakeRegion[a1data[[2]], 1320, 1440], PlotRange -> All, \
FrameLabel -> {\"Electron Energy E [eV]\", \"dN/dE [arb. Units]\"}, PlotStyle \
-> {Directive[Thick, Blue, PointSize -> Medium]}, niceStyle], \
Plot[Normal[dumbfit], {x, 1323, 1420}, PlotStyle -> Red]]\
\>", "Text",
 CellChangeTimes->{{3.533212143460211*^9, 3.5332121659592657`*^9}, 
   3.533214239336659*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0, 0, 1], PointSize[Medium], Thickness[Large], 
     PointBox[CompressedData["
1:eJxFlFFIVFEQhi+xgYWFhISEDwoGJgY+WEhIXEJCFoNN9oaRwWaumC5kYbSV
xmJWlmZmey8WlpJubjchAw0pHyx88MHABy0LCRENEQUJNTOTbOc7trAM3/ln
5syZM+cmFpzP9W7RNO3Kxv+fjfxag7pz23vbnmzQI9we1N8sHzaMxAfC4aBY
D9yJfhLuIv4g3A1fhXuJj24U26f2g/vh2YfCA/iPYAdVfkt4iPVxeJh6flmb
cREOwWPEfzeJU/7kmcD62H9KrVP/DPHL9GcOvem+2IWg7puvtO0P94QX0fPg
FbgB/zXyrZNPM+kn/XCYoj+lnijqjv5vxZ/zxbA+CMcSv856HP6nyRdv6sFd
VYbxhHoSTKl/9rZwEnwoIJxs6vv2Ol7ajy8Kp5r6cWfUCcM4I5zGPrpLbDqs
OcVmmHpbMKbTTnELZ6K3FhFH/tVy4Sz0hutis6nnxw3hHHR/jVgX+nb67eZ8
05wvj34UcZ/5qi/024O+Ey5ET8a/GA6Tz8d+k3XCZaqfd4TL8Z+5RZ1wwk2x
Fep8cID4P/hXwyHOV6PqqRVbx/6r9eRBb6feIOdZ5b6b0FewzczDF+alFf8C
uB2uZ27D+L9W75/9j3D+LtX/auFuU//89bfb8F4W7lXzwLz0bc5Hf8T0M089
54QH4AOlwoNqvgqFh1T8UeFhU3/V8/OFXUL+EfQyv9gx+jlaJTyOHqDfE9Sf
Qv1T1G9eEJ6hnqUS2W+OfN5a4QXyjTULL5r6qWsttp3aJrzR91C1xzDOPhde
U/WHhTVL/HfDDkv8L3UIR3Ev4ZBwNOwgfwzsaRGOteS+tj4SjkOvaxSOt6T+
+RrhBHRXpXCSmguvcLKlv/v0rcNOOSbrqRb3VSqcZkm/RrnvdPJP8/3IIJ9G
fzMt6fce+q/Db/n+ZOHv5z1lo0/eFc6Bc3kPLvb7CLvRS5jPPPgZnK/OB3uI
38H3oxDeDxer/sA+8tlwmcoHl6M7Yb9i3msF+ZfQA8TH1et/AZYbBno=
      
      "]]}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
0ge9c6vnqaqueJiwl7tGQlu/jT4B9fHwl2uTZxW6tDDg00hePHA3/DjcjW5Q
uDRMjo+H3edbOebRA+kPNA3d4kF5R+GHLZ+wPw95yMN5PB4M2qIrFNClf87E
vNkTD/57D5sEo69xHrlq8ikOEga2idLRqukhwFwXB1cTf80+QOufK0ysTIsD
4mt55go69aHX+T6M5x5KyjlB7PtLOOxEDJnjYPyoq+Jh9OgeyeyynljYdFOk
PwKt5Z14d5tnLCyerg25jta3CfzyUykWhjYZ8tejHb+23f/OEAtlkSFWS+ja
56qNBukxoGvVMeg3QoXTGhxLGdRo2M99LoKE3pgV/9rbNBp4W1Z23EXza+8J
d+GMhhEFcbtJNDNDwpuiyCiI4I4YdvmM9VG/SfiztIvg1LI5Oh6t92B7mvBE
JOhfLBYtQMstLvRWaUYC/2S34wjaN639aPDXcLjXsverzRc8n1lKTQrWQmHi
Yv93k1EqeDDvVy+K8ocuxfMpPmjVpQ9rh/L8oG6ScV8a2pB62ELqsS/EWx/w
akOf/sr6IKX7PIgoxU/pfMV8U9zYPS7rAqd+ys2rfsP1/9xmdytPF9QLWjOt
0CJh1Nsprw7Dbhs7hVA0QanU/aS5G+Zak4Pu/3/97Zstqa0qRFrB8NLBMRx/
7dWHfcuniec2aX92j+P6JCVz72TzJQRXhffroocpouNDHn6Eb1bVGVd0xc4S
/YQOf2J7b09DKbpd0sTLMieI8DfaHn3gO66n6bgOp104IaJZskF5AteLz4SF
pTiWiJBo5DKYxPxD91ToESAR3c/NNLzQAycUojSjSISk01efK2j9eKbWtm8k
4m3uxq5OdPvmnAuiNWRCSsA40/wnxlvBLm1l40xigH1omx32wZK7SuL0Y2iE
wuyCiN8M9k95ZXE+tTcItUN3asnoNVfdIWPebOJopKNhNTp8+MnGMr9swpS1
M2QezV3wVrFeKofwFS3pCJqlAhNzl0kXNZe4c9I6ImwOz4eFVbfdEvlEDZ2b
5zr61F+Tqe/G+cSjD83Fj9A7r5+nG17IJ165y7/9g857PZD1+VU+MR7NIXVp
ngrZsyKOu91vEuLVDf2xv6iwmelF2EPSLUJ6OfB8Afolh+fFG/duEQrq+9a/
QJc6L/kx990itF/RDzAvUMGzN1XIU6CAcPzsG5+EvrR/reHMtQLCQ3LP9lJ0
i9ohKbuHBYSf94fKl+gpFY8bH/sLiKjV40Nsi1jvNSms2W4pJHJ4dslfQWv0
eMtCXCFRdPpdaznaUfLQgkxuIVGek27XgQ4WCGzKflhIPJb6k7xpiQp1hz3s
JiYLifdavcNk9MDwYyn9E0XE56TLwdVolfzxVL5zRcT3Dk2Ot+ghji3DNmFF
xLJ1xSHeZSoceHwo36qwiNgakJhGQwt43BwRWigiZonF+Rr0qT5blSTmYqKd
y8XqLXrXz3CZqG3FRHSZ9m7uFSo8flmkJahcTNgu30s+gJYcE9/y5FgxoaS7
a9oQrZdV+3PKspiYHFlXn4yONDgUvi6wmGg56CdcgmbNubnjS3QxcTNyOK4Z
Hbe+t8AivZg4JfDUeP0q5lMVfdJ0STHRaBLxNQL9TIBJl6W/mMjO+aF/HW1Z
8MIhaqSYCJ20rnyI3uARZJL+o5jYn6QSvoj+a5yW6fevmNjYVzL8/++W0wGx
LrosJcTnXfy68mh/DmnOmk0lRNbTRW5fdKTNQ7YzwiVEAKdLcBo6nzmH5ZpE
CWFk0zt4B50k+mlXwP4SQrJUW7MNvWy358h3+RJi/dK9ou/oGKatin9VSoiP
2rs4Nv6hAgM7z+xdjRKiLiPDTwKt9nOHNaNOCeF9wE/NCa2ZeHo82aiEOB4x
nB+NluBenCZMS4jdr4xZ8tDas8Lu1y1LiH/bnno1oJ2E9xsKWpcQ75wPdA+h
BUdXM9XPlBA197IP/UaznWw4wupQQqSt48wW+Iv5r7BXL9yxhHA3jmBURp8p
v1pLPVdCaGf/cLVEO0kcTLFyKSGEf1i/DkRb7j/d2uJaQqwqv5LLRM816oSM
uJUQPQkqWVXoQm/3nGL3EuJuT8nfTnQ+yzHd7R4lRIoYv9MUOr5cN/QI+pxv
YivHPyrYrSaob0JrNCzu34dmDrp7i4z3C3K4ZB5H1xk1Vb/A5y9Y9S67ouX8
fwXfwe9/U6xtl4BOmg7+rYvvV7Zwr6kAPfPK3ICG7x9/dNfeJrSespbfdRyf
AzkjbQQdYugfcgrHr/pp3a81tKeUl2sbzg/ffj+rnWtUGLs/fHwZ528mbLhB
Db2rN0ri06kSoq3VeLcNmqrTsz7avIQo2vo0+QL62abNYx9NSgib6mzzWrRK
Ir29W6+EUGLgrO9B/1w16fLQLiG4jSKE59FCjInDjbjezd+tJw4y0KArK57z
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
sKhKLubDhNG5jx+J+5pG3PmjfPgP0tT9bw==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1320., 0},
  AxesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  Frame->True,
  FrameLabel->{
    FormBox["\"Electron Energy E [eV]\"", TraditionalForm], 
    FormBox["\"dN/dE [arb. Units]\"", TraditionalForm]},
  FrameStyle->Thickness[Large],
  FrameTicksStyle->{
    Directive[16, Plain], 
    Directive[16, Plain]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0.5]],
  ImageMargins->3,
  ImageSize->600,
  LabelStyle->{16, Bold},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Text",
 CellChangeTimes->{{3.533212157492651*^9, 3.533212169136236*^9}, 
   3.5332142393435163`*^9}],

Cell["FindMaximum[Normal[dumbfit], {x, 1340}]", "Text",
 CellChangeTimes->{{3.533212706480187*^9, 3.533212706576619*^9}, 
   3.533214239344249*^9}],

Cell["{1487.7, {x -> 1332.28}}", "Text",
 CellChangeTimes->{3.5332127069690437`*^9, 3.5332142393448143`*^9}],

Cell["FindMaximum[Normal[dumbfit], {x, 1345}]", "Text",
 CellChangeTimes->{{3.5332127291425037`*^9, 3.533212736890357*^9}, 
   3.533214239345386*^9}],

Cell["{1486.64, {x -> 1347.89}}", "Text",
 CellChangeTimes->{{3.533212729555441*^9, 3.533212737262801*^9}, 
   3.533214239345928*^9}],

Cell["FindMaximum[Normal[dumbfit], {x, 1360}]", "Text",
 CellChangeTimes->{{3.533212189850047*^9, 3.533212259058296*^9}, {
   3.533212296448619*^9, 3.533212298214878*^9}, {3.5332123507794437`*^9, 
   3.533212448836253*^9}, 3.53321423934647*^9}],

Cell["{1430.62, {x -> 1383.24}}", "Text",
 CellChangeTimes->{{3.533212363924917*^9, 3.5332124497197123`*^9}, 
   3.5332142393470592`*^9}],

Cell["FindMaximum[Normal[dumbfit], {x, 1360}]", "Text",
 CellChangeTimes->{3.533214239347537*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1678, 1029},
WindowMargins->{{1280, Automatic}, {Automatic, 19}},
FrontEndVersion->"8.0 for Linux x86 (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 160, 2, 88, "Title"],
Cell[CellGroupData[{
Cell[764, 28, 112, 1, 74, "Section"],
Cell[879, 31, 124, 2, 30, "Input"],
Cell[1006, 35, 128, 2, 30, "Input"],
Cell[1137, 39, 147, 3, 30, "Input"],
Cell[1287, 44, 242, 5, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1566, 54, 103, 1, 74, "Section"],
Cell[CellGroupData[{
Cell[1694, 59, 129, 1, 39, "Subsection"],
Cell[1826, 62, 237, 4, 30, "Text"],
Cell[2066, 68, 1301, 29, 164, "Input"],
Cell[3370, 99, 487, 9, 50, "Input"],
Cell[3860, 110, 137, 3, 30, "Text"],
Cell[4000, 115, 550, 15, 50, "Input"],
Cell[4553, 132, 764, 16, 50, "Input"],
Cell[5320, 150, 2159, 57, 210, "Input"],
Cell[7482, 209, 2062, 56, 159, "Input"],
Cell[9547, 267, 2037, 54, 242, "Input"],
Cell[11587, 323, 2306, 55, 126, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13930, 383, 110, 1, 39, "Subsection"],
Cell[14043, 386, 1758, 45, 69, "Input",
 InitializationCell->True],
Cell[15804, 433, 1412, 31, 240, "Input"],
Cell[17219, 466, 2922, 59, 88, "Input"],
Cell[20144, 527, 2136, 51, 88, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22329, 584, 98, 1, 74, "Section"],
Cell[CellGroupData[{
Cell[22452, 589, 110, 1, 39, "Subsection"],
Cell[CellGroupData[{
Cell[22587, 594, 178, 4, 30, "Input"],
Cell[22768, 600, 1223, 31, 233, "Output"]
}, Open  ]],
Cell[24006, 634, 519, 11, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24562, 650, 104, 1, 39, "Subsection"],
Cell[CellGroupData[{
Cell[24691, 655, 177, 4, 30, "Input"],
Cell[24871, 661, 728, 20, 57, "Output"]
}, Open  ]],
Cell[25614, 684, 274, 7, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25925, 696, 103, 1, 39, "Subsection"],
Cell[CellGroupData[{
Cell[26053, 701, 177, 4, 30, "Input"],
Cell[26233, 707, 723, 20, 57, "Output"]
}, Open  ]],
Cell[26971, 730, 276, 7, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27284, 742, 104, 1, 39, "Subsection"],
Cell[CellGroupData[{
Cell[27413, 747, 175, 4, 30, "Input"],
Cell[27591, 753, 764, 21, 73, "Output"]
}, Open  ]],
Cell[28370, 777, 274, 7, 30, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28693, 790, 104, 1, 74, "Section"],
Cell[CellGroupData[{
Cell[28822, 795, 3981, 100, 164, "Input"],
Cell[32806, 897, 2992, 58, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35835, 960, 3809, 102, 202, "Input"],
Cell[39647, 1064, 2870, 66, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[42566, 1136, 101, 1, 44, "Section"],
Cell[CellGroupData[{
Cell[42692, 1141, 453, 11, 30, "Input"],
Cell[43148, 1154, 37559, 632, 388, 9043, 163, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80744, 1791, 830, 21, 69, "Input"],
Cell[81577, 1814, 2100, 49, 388, "Output"]
}, Open  ]],
Cell[83692, 1866, 1348, 32, 50, "Input"],
Cell[85043, 1900, 1051, 24, 30, "Input"],
Cell[CellGroupData[{
Cell[86119, 1928, 528, 12, 30, "Input"],
Cell[86650, 1942, 686, 13, 80, "Message"],
Cell[87339, 1957, 686, 13, 80, "Message"],
Cell[88028, 1972, 5824, 171, 458, "Output"]
}, Open  ]],
Cell[93867, 2146, 287, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[94179, 2158, 1742, 44, 107, "Input"],
Cell[95924, 2204, 50862, 863, 388, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146823, 3072, 194, 5, 30, "Input"],
Cell[147020, 3079, 11551, 245, 484, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158608, 3329, 679, 21, 30, "Input"],
Cell[159290, 3352, 1168, 27, 185, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160495, 3384, 521, 16, 30, "Input"],
Cell[161019, 3402, 727, 22, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161783, 3429, 861, 24, 30, "Input"],
Cell[162647, 3455, 1219, 27, 185, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163903, 3487, 612, 18, 30, "Input"],
Cell[164518, 3507, 778, 23, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165333, 3535, 639, 16, 30, "Input"],
Cell[165975, 3553, 2196, 50, 388, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168220, 3609, 98, 1, 74, "Section"],
Cell[CellGroupData[{
Cell[168343, 3614, 706, 18, 69, "Input"],
Cell[169052, 3634, 2634, 58, 381, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171723, 3697, 698, 18, 69, "Input"],
Cell[172424, 3717, 3015, 65, 380, "Output"]
}, Open  ]],
Cell[175454, 3785, 844, 19, 30, "Input"],
Cell[CellGroupData[{
Cell[176323, 3808, 628, 14, 30, "Input"],
Cell[176954, 3824, 2347, 70, 188, "Output"]
}, Open  ]],
Cell[179316, 3897, 336, 9, 30, "Input"],
Cell[CellGroupData[{
Cell[179677, 3910, 2465, 59, 145, "Input"],
Cell[182145, 3971, 24263, 420, 380, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206445, 4396, 245, 6, 30, "Input"],
Cell[206693, 4404, 4591, 98, 479, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211321, 4507, 1524, 43, 139, "Input"],
Cell[212848, 4552, 395, 10, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213280, 4567, 150, 2, 30, "Input"],
Cell[213433, 4571, 992, 22, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214462, 4598, 1060, 30, 107, "Input"],
Cell[215525, 4630, 4020, 88, 391, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219594, 4724, 101, 1, 74, "Section"],
Cell[CellGroupData[{
Cell[219720, 4729, 862, 20, 69, "Input"],
Cell[220585, 4751, 1650, 42, 393, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222272, 4798, 798, 20, 69, "Input"],
Cell[223073, 4820, 1856, 46, 392, "Output"]
}, Open  ]],
Cell[224944, 4869, 967, 16, 30, "Input"],
Cell[CellGroupData[{
Cell[225936, 4889, 674, 14, 30, "Input"],
Cell[226613, 4905, 805, 21, 53, "Output"]
}, Open  ]],
Cell[227433, 4929, 384, 10, 30, "Input"],
Cell[CellGroupData[{
Cell[227842, 4943, 2744, 66, 164, "Input"],
Cell[230589, 5011, 13952, 248, 392, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244578, 5264, 292, 7, 30, "Input"],
Cell[244873, 5273, 1303, 28, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246213, 5306, 533, 12, 30, "Input"],
Cell[246749, 5320, 947, 27, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247733, 5352, 153, 2, 30, "Input"],
Cell[247889, 5356, 1506, 31, 173, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[249444, 5393, 93, 1, 74, "Section"],
Cell[249540, 5396, 4715, 141, 136, "Text"],
Cell[254258, 5539, 581, 11, 62, "Text"],
Cell[254842, 5552, 730, 17, 48, "Text"],
Cell[255575, 5571, 182, 2, 30, "Text"],
Cell[255760, 5575, 4928, 91, 696, "Text"],
Cell[260691, 5668, 419, 7, 30, "Text"],
Cell[261113, 5677, 26645, 454, 387, "Text"],
Cell[287761, 6133, 4765, 142, 136, "Text"],
Cell[292529, 6277, 533, 10, 62, "Text"],
Cell[293065, 6289, 744, 18, 48, "Text"],
Cell[293812, 6309, 4828, 143, 136, "Text"],
Cell[298643, 6454, 532, 10, 62, "Text"],
Cell[299178, 6466, 723, 17, 48, "Text"],
Cell[299904, 6485, 198, 2, 30, "Text"],
Cell[300105, 6489, 4928, 91, 696, "Text"],
Cell[305036, 6582, 390, 7, 49, "Text"],
Cell[305429, 6591, 26252, 447, 387, "Text"],
Cell[331684, 7040, 147, 2, 30, "Text"],
Cell[331834, 7044, 108, 1, 30, "Text"],
Cell[331945, 7047, 149, 2, 30, "Text"],
Cell[332097, 7051, 133, 2, 30, "Text"],
Cell[332233, 7055, 244, 3, 30, "Text"],
Cell[332480, 7060, 137, 2, 30, "Text"],
Cell[332620, 7064, 97, 1, 30, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
